{"version":3,"sources":["/source/header.ts","/source/engageform/enum.ts","engageform.js","/source/page/enum.ts","/source/navigation/navigation.ts","/source/app.ts","/source/meta/meta.ts","/source/page/page.ts","/source/util/event.ts","/source/user/user.ts","/source/engageform/engageform.ts","/source/bootstrap.ts","/source/branding/branding.ts","/source/engageform/settings.ts","/source/engageform/theme.ts","/source/engageform/tabs.ts","/source/engageform/type/outcome.ts","/source/engageform/type/poll.ts","/source/engageform/type/score.ts","/source/engageform/type/survey.ts","/source/engageform/type/live.ts","/source/page/case.ts","/source/page/settings.ts","/source/page/case/image.ts","/source/page/case/input.ts","/source/page/case/iteration.ts","/source/page/case/text.ts","/source/page/case/buzz.ts","/source/page/type/endpage.ts","/source/page/type/form.ts","/source/page/type/multichoice.ts","/source/page/type/picturechoice.ts","/source/page/type/rateit.ts","/source/page/type/startpage.ts","/source/page/type/buzzer.ts","/source/page/type/poster.ts","/source/page/type/summaryPage.ts"],"names":["angular","Engageform","Type","Mode","Page","CaseType","Navigation","app","module","Navigation_1","engageform","this","enabled","position","size","hasStart","enabledStart","hasPrev","enabledPrev","hasNext","enabledNext","hasFinish","enabledFinish","distance","animate","hasStartPages","hasEndPages","next","pick","finish","_engageform","availablePages","length","Boolean","endPages","startPages","setCurrent","move","prototype","updateDistance","start","$event","disableDefaultAction","stopPageChange","waitingForPageChange","Bootstrap","$timeout","cancel","prev","current","message","vcase","opts","_this","quiet","isNormalMode","defer","$q","resolve","promise","send","then","sendMessage","filled","settings","requiredAnswer","texts","ANSWER_REQUIRED_TO_PROCEED","pageChangeDelay","showCorrectAnswer","showResults","data","textKey","event","trigger","currentPosition","isStartPage","isType","Poll","hasForms","setCurrentEndPage","err","msg","stopPropagation","preventDefault","hideMessageAfterDelay","Meta","Meta_1","globalTitle","globalDescription","share","title","description","_","find","pages","social","Page_1","media","cases","_pageId","_id","Settings","text","showDescription","showMainMedia","imageData","cloudinary","prepareImageUrl","imageFile","mediaWidth","containerRatio","mediaHeight","Math","round","containerHeight","Object","defineProperty","get","enumerable","configurable","reject","deferred","sent","localStorage","id","results","getStatsById","refreshAnswer","question","selectAnswer","createCase","symbol","setResults","casesWithResults","map","singleCase","result","Number","stats","k","indexOf","type","Rateit","fakeCase","height","push","updateAnswers","questionId","isUndefined","avg","loaded","load","save","pageId","url","config","backend","domain","pageStatsUrl","replace","$http","res","status","Util","User","set","_sessionId","sessionId","Event","_listener","listen","callback","_i","arguments","args","Array","apply","slice","listeners","i","Engageform_1","mode","sendAnswerCallback","_pages","_startPages","_endPages","_availablePages","_hasForms","Undefined","pagesConsturctors","multiChoice","MultiChoice","pictureChoice","PictureChoice","rateIt","forms","Form","startPage","StartPage","endPage","EndPage","buzzer","Buzzer","poster","Poster","_engageformId","theme","Theme","tabs","Tabs","themeType","getThemeType","backgroundColor","branding","Branding","builtPages","buildPages","forEach","page","storePage","some","navigation","meta","toLowerCase","Default","Preview","isSummaryMode","Summary","isResultsMode","Result","isPreviewMode","initPage","engageformFinishUrl","post","userIdent","user","globalUserIdent","clearAll","cleanPages","createPage","filter","val","setSummary","questionResults","setAnswers","_a","questions","props","selectedCaseId","selectedAnswerId","inputs","selectedValue","rateItValue","setResultPage","resultPage","SummaryPage","setUserResultPage","pageData","extend","outcome","score","maxScore","color","colorRGB","colorToRgb","red","green","blue","colorParts","temp","triplets","substr","match","parseInt","toString","exec","ApiConfig","quizzesConstructors","Outcome","poll","Score","survey","Survey","live","Live","modes","preview","summary","default","","_event","setConfig","init","error","code","_instances","initializationPromises","quizData","getData","all","resourcesPaths","quiz","Error","destroyInstances","$inject","service","Branding_1","_isCustomLogo","_isCustom","imgUrl","defaultBranding","_enabled","state","link","imageUrl","_text","_link","_imageUrl","api","imagesUrl","allowAnswerChange","defaultImgUrl","answerBackgroundColor","answerBorderColor","answerColor","backgroundBrightness","backgroundImageBlur","backgroundImageFile","backgroundImagePosition","buttonColor","font","questionColor","customThemeCssFile","backgroundImageConvertedFile","tabBorderColor","tabFontColor","tabColor","convertBackgroundImage","prepareBackgroundImageUrl","window","innerWidth","innerHeight","liveTitle","chatTitle","logoUrl","headerText","__extends","d","b","__","constructor","p","hasOwnProperty","create","_super","call","hasEndPage","totalScore","rangeMin","rangeMax","initPages","Case","selected","correct","incorrect","_caseId","_page","caseId","shouldShowIndicator","shouldShowResults","makeSend","pageResponseUrl","quizQuestionId","validate","trueBuzzerSend","BCS","showAnswers","ImageCase","Image","correctAnswerId","correctCaseId","test","InputCase","Input","label","expectedValue","value","sentId","IterationCase","Iteration","ordinal","avgRateItValue","TextCase","Text","BuzzCase","Buzz","clickBuzzer","buttonClickSum","isCoverPage","socialData","coverPage","button","buttonText","showSocialShares","exitLink","scoreRange","max","min","personalizeShares","typeName","SCORE_AND_OUTCOME_SHARE","String","facebook","encodeURIComponent","count","input","validated","inputData","answers","answer","percent","labelMin","minLabel","labelMax","maxLabel","maxRateItValue","index","rateType","average","undefined","_connected","_timeout","buzzLoop","buzzerTheme","fakeBuzzerTheme","iteration"],"mappings":"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","file":"engageform.min.js","sourcesContent":["/*!\n * 4screens-angular-engageform v0.2.60\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n",null,"(function(angular) {\n/*!\n * 4screens-angular-engageform v0.2.60\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n\nvar Engageform;\n(function (Engageform) {\n    (function (Type) {\n        Type[Type[\"Undefined\"] = 0] = \"Undefined\";\n        Type[Type[\"Live\"] = 1] = \"Live\";\n        Type[Type[\"Outcome\"] = 2] = \"Outcome\";\n        Type[Type[\"Poll\"] = 3] = \"Poll\";\n        Type[Type[\"Score\"] = 4] = \"Score\";\n        Type[Type[\"Survey\"] = 5] = \"Survey\";\n    })(Engageform.Type || (Engageform.Type = {}));\n    var Type = Engageform.Type;\n    (function (Mode) {\n        Mode[Mode[\"Undefined\"] = 0] = \"Undefined\";\n        Mode[Mode[\"Default\"] = 1] = \"Default\";\n        Mode[Mode[\"Preview\"] = 2] = \"Preview\";\n        Mode[Mode[\"Result\"] = 3] = \"Result\";\n        Mode[Mode[\"Summary\"] = 4] = \"Summary\";\n    })(Engageform.Mode || (Engageform.Mode = {}));\n    var Mode = Engageform.Mode;\n})(Engageform || (Engageform = {}));\n\nvar Page;\n(function (Page) {\n    (function (CaseType) {\n        CaseType[CaseType[\"Undefined\"] = 0] = \"Undefined\";\n        CaseType[CaseType[\"Image\"] = 1] = \"Image\";\n        CaseType[CaseType[\"Input\"] = 2] = \"Input\";\n        CaseType[CaseType[\"Iteration\"] = 3] = \"Iteration\";\n        CaseType[CaseType[\"Text\"] = 4] = \"Text\";\n        CaseType[CaseType[\"Buzz\"] = 5] = \"Buzz\";\n    })(Page.CaseType || (Page.CaseType = {}));\n    var CaseType = Page.CaseType;\n    (function (Type) {\n        Type[Type[\"Undefined\"] = 0] = \"Undefined\";\n        Type[Type[\"EndPage\"] = 1] = \"EndPage\";\n        Type[Type[\"Form\"] = 2] = \"Form\";\n        Type[Type[\"MultiChoice\"] = 3] = \"MultiChoice\";\n        Type[Type[\"PictureChoice\"] = 4] = \"PictureChoice\";\n        Type[Type[\"Rateit\"] = 5] = \"Rateit\";\n        Type[Type[\"StartPage\"] = 6] = \"StartPage\";\n        Type[Type[\"Buzzer\"] = 7] = \"Buzzer\";\n        Type[Type[\"Poster\"] = 8] = \"Poster\";\n        Type[Type[\"SummaryPage\"] = 9] = \"SummaryPage\";\n    })(Page.Type || (Page.Type = {}));\n    var Type = Page.Type;\n})(Page || (Page = {}));\n\n/// <reference path=\"../typings/tsd.d.ts\" />\nvar app = angular.module('4screens.engageform', [\n    '4screens.util.cloudinary',\n    'LocalStorageModule'\n]);\n\n/// <reference path=\"inavigation.ts\" />\nvar Navigation;\n(function (Navigation_1) {\n    var Navigation = (function () {\n        function Navigation(engageform) {\n            this.enabled = false;\n            this.position = 0;\n            this.size = 0;\n            this.hasStart = false;\n            this.enabledStart = true;\n            this.hasPrev = false;\n            this.enabledPrev = true;\n            this.hasNext = false;\n            this.enabledNext = true;\n            this.hasFinish = false;\n            this.enabledFinish = true;\n            this.distance = 0;\n            this.animate = 'swipeNext';\n            this.hasStartPages = false;\n            this.hasEndPages = false;\n            this.next = this.pick;\n            this.finish = this.pick;\n            this._engageform = engageform;\n            this.size = engageform.availablePages.length;\n            this.hasEndPages = Boolean(this._engageform.endPages.length);\n            if (this._engageform.startPages.length) {\n                this.hasStart = true;\n                this.hasStartPages = true;\n                this._engageform.setCurrent(this._engageform.startPages[0]);\n            }\n            else {\n                this.enabled = true;\n                this.move(null);\n                this.hasPrev = false;\n            }\n        }\n        Navigation.prototype.updateDistance = function () {\n            return this.distance = this.position / this.size;\n        };\n        Navigation.prototype.start = function ($event) {\n            this.disableDefaultAction($event);\n            this.animate = 'swipeNext';\n            this.enabled = true;\n            // FIXME: Why would you do that? щ(°Д°щ) But I'm not removing it. Hell knows what depends on this stupidity.\n            this.hasStart = false;\n            this.move(null);\n            this.hasPrev = true;\n        };\n        /**\n         * Clears the page change timeout.\n         */\n        Navigation.prototype.stopPageChange = function () {\n            if (this.waitingForPageChange) {\n                Bootstrap.$timeout.cancel(this.waitingForPageChange);\n            }\n        };\n        Navigation.prototype.prev = function ($event) {\n            this.disableDefaultAction($event);\n            this.stopPageChange();\n            this.animate = 'swipePrev';\n            if (this._engageform.current) {\n                this._engageform.message = '';\n            }\n            this.position--;\n            this.updateDistance();\n            this.hasNext = true;\n            this.hasFinish = false;\n            if (this.position === 0) {\n                this._engageform.setCurrent(this._engageform.startPages[0]);\n                this.hasPrev = false;\n            }\n            else {\n                this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n                this.hasPrev = this.position === 1 ? this.hasStartPages : true;\n            }\n        };\n        Navigation.prototype.pick = function ($event, vcase, opts) {\n            var _this = this;\n            if (opts === void 0) { opts = { quiet: false }; }\n            this.disableDefaultAction($event);\n            this.stopPageChange();\n            this.animate = 'swipeNext';\n            // Move page but don't do anything else when the quiz is nor in a normal mode.\n            if (!this._engageform.isNormalMode()) {\n                var defer = Bootstrap.$q.defer();\n                defer.resolve(vcase);\n                this.move(vcase);\n                return defer.promise;\n            }\n            var current = this._engageform.current;\n            // Send the answer.\n            return current.send(vcase).then(function () {\n                _this.sendMessage();\n                // Prevent the question change when there's no answer selected and the page requires it.\n                if (!current.filled && current.settings.requiredAnswer) {\n                    if (!opts.quiet) {\n                        _this.sendMessage(_this._engageform.texts.ANSWER_REQUIRED_TO_PROCEED);\n                    }\n                    return vcase;\n                }\n                else {\n                    // Change the page with a slight delay, or do it instantly.\n                    var pageChangeDelay = vcase ? (current.settings.showCorrectAnswer || current.settings.showResults ? 2000 : 200) : 0;\n                    // Schedule the page change.\n                    _this.waitingForPageChange = Bootstrap.$timeout(function () {\n                        _this.waitingForPageChange = null;\n                        _this.move(vcase);\n                        return vcase;\n                    }, pageChangeDelay);\n                    return _this.waitingForPageChange;\n                }\n            }).catch(function (data) {\n                if (!opts.quiet) {\n                    _this.sendMessage(_this._engageform.texts[data.textKey] || data.message);\n                }\n                return data;\n            });\n        };\n        Navigation.prototype.move = function (vcase) {\n            var _this = this;\n            this._engageform.event.trigger('form::pageWillChange', {\n                currentPosition: this.position,\n                // You might wonder why I'm not using this.hasStart. Well, that's because some genius decided to\n                // make it false on the navigation start so it can't be used.\n                isStartPage: Boolean(this.position === 0 && this._engageform.startPages.length)\n            });\n            this.position++;\n            if (this._engageform.availablePages.length >= this.position) {\n                this.updateDistance();\n                this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n                this.hasPrev = true;\n                this.hasNext = false;\n                this.hasFinish = false;\n                if (this._engageform.availablePages.length > this.position) {\n                    this.hasNext = true;\n                }\n                else if (this._engageform.availablePages.length === this.position) {\n                    // Finisher is not available when the engageform is of a type \"poll\" and doesn't have any form-type question.\n                    // Also when it's not working in normal mode (ie. summary doesn't submit).\n                    this.hasFinish = this._engageform.isNormalMode() &&\n                        !(this._engageform.isType(Engageform.Type.Poll) && !this._engageform.hasForms);\n                }\n            }\n            else {\n                this.position = this._engageform.availablePages.length;\n                if (!vcase) {\n                    this._engageform.setCurrentEndPage().then(function () {\n                        _this.enabled = false;\n                        _this.hasPrev = false;\n                        _this.hasNext = false;\n                        _this.hasFinish = false;\n                    }).catch(function (err) {\n                        if (err.data.msg) {\n                            _this.sendMessage(err.data.msg);\n                        }\n                    });\n                }\n            }\n        };\n        Navigation.prototype.disableDefaultAction = function ($event) {\n            if ($event) {\n                $event.stopPropagation();\n                $event.preventDefault();\n            }\n        };\n        Navigation.prototype.sendMessage = function (msg) {\n            var _this = this;\n            if (msg === void 0) { msg = ''; }\n            this._engageform.message = msg;\n            Bootstrap.$timeout(function () {\n                _this._engageform.message = '';\n            }, this._engageform.settings.hideMessageAfterDelay);\n        };\n        return Navigation;\n    }());\n    Navigation_1.Navigation = Navigation;\n})(Navigation || (Navigation = {}));\n\n/// <reference path=\"imeta.ts\" />\nvar Meta;\n(function (Meta_1) {\n    var Meta = (function () {\n        function Meta(engageform) {\n            this.globalTitle = '';\n            this.globalDescription = '';\n            this._engageform = engageform;\n            if (this._engageform.settings.share) {\n                this.globalTitle = this._engageform.settings.share.title || '';\n                this.globalDescription = this._engageform.settings.share.description || '';\n            }\n            if (this._engageform.endPages.length < 1 || !_.find(this._engageform.pages, { social: true })) {\n                if (this._engageform.startPages.length && this._engageform.pages[this._engageform.startPages[0]].title) {\n                    this.globalTitle = this._engageform.pages[this._engageform.startPages[0]].title;\n                    this.globalDescription = this._engageform.pages[this._engageform.startPages[0]].description;\n                }\n                else {\n                    this.globalTitle = '';\n                    this.globalDescription = '';\n                }\n            }\n        }\n        return Meta;\n    }());\n    Meta_1.Meta = Meta;\n})(Meta || (Meta = {}));\n\n/// <reference path=\"ipage.ts\" />\n/// <reference path=\"ipages.ts\" />\n/// <reference path=\"ipagesent.ts\" />\nvar Page;\n(function (Page_1) {\n    var Page = (function () {\n        function Page(engageform, data) {\n            this.title = '';\n            this.description = '';\n            this.media = '';\n            this.cases = [];\n            this._pageId = data._id;\n            this._engageform = engageform;\n            this.settings = new Page_1.Settings(data);\n            this.title = data.text || '';\n            if (this.settings.showDescription) {\n                this.description = data.description || '';\n            }\n            if (this.settings.showMainMedia && data.imageData) {\n                this.media = Bootstrap.cloudinary.prepareImageUrl(data.imageFile, 680, // zakładamy że media zawsze ma taką szerokość (MUST BE FIXXXXXED!!!!!)\n                data.imageData);\n                this.mediaWidth = 680;\n                if (data.imageData.containerRatio) {\n                    this.mediaHeight = Math.round(680 * data.imageData.containerRatio);\n                }\n                else {\n                    this.mediaHeight = Math.round(data.imageData.containerHeight || 0);\n                }\n            }\n        }\n        Object.defineProperty(Page.prototype, \"id\", {\n            get: function () {\n                return this._pageId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"engageform\", {\n            get: function () {\n                return this._engageform;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"Type\", {\n            get: function () {\n                return Page_1.Type;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"CaseType\", {\n            get: function () {\n                return Page_1.CaseType;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Page.prototype.send = function (vcase) {\n            if (this._engageform.enabled === false) {\n                return Bootstrap.$q.reject('Engageform already ended.');\n            }\n            if (vcase) {\n                return vcase.send();\n            }\n            else {\n                var deferred = Bootstrap.$q.defer();\n                deferred.resolve();\n                return deferred.promise;\n            }\n        };\n        Page.prototype.sent = function () {\n            var _this = this;\n            var deferred = Bootstrap.$q.defer();\n            var sent = {};\n            sent = (Bootstrap.localStorage.get('page.' + this.id) || {});\n            if (this.settings.showResults && sent.results) {\n                this.getStatsById(this.id).then(function (data) {\n                    deferred.resolve(_this.refreshAnswer(sent, data));\n                }).catch(function () {\n                    deferred.resolve(sent);\n                });\n            }\n            else {\n                deferred.resolve(sent);\n            }\n            return deferred.promise;\n        };\n        Page.prototype.refreshAnswer = function (sent, question) {\n            // \"abstract\"\n            return sent;\n        };\n        Page.prototype.selectAnswer = function (data) {\n            // \"abstract\"\n        };\n        Page.prototype.createCase = function (data, symbol) {\n            // \"abstract\n            return;\n        };\n        /**\n         * Sets the provided results on the page's cases.\n         * @param results Object containing data with results that should be set on the cases.\n         */\n        Page.prototype.setResults = function (results) {\n            var casesWithResults = this.cases.map(function (singleCase) {\n                // Set's the result on the case. Side effect, but makes the whole method a bit faster. Otherwise there\n                // would be a need for more loops when creating fake answers.\n                singleCase.result = Number(results.stats[singleCase.id]) || 0;\n                // Returns the ID of the case so there's no need to loop them later\n                return singleCase.id;\n            });\n            // Create fake cases when there's a result but no answer for that.\n            for (var k in results.stats) {\n                if (casesWithResults.indexOf(k) === -1\n                    && k !== 'questionId'\n                    && this.type !== Page_1.Type.Rateit) {\n                    // Create the fake answer to show results…\n                    var fakeCase = this.createCase({\n                        text: '[Removed answer]',\n                        _id: k,\n                        imageData: {\n                            // Comes from the backend by default.\n                            height: 100\n                        }\n                    });\n                    // … and set those results…\n                    fakeCase.result = Number(results.stats[fakeCase.id]);\n                    // … and add them to the answers pool.\n                    this.cases.push(fakeCase);\n                }\n            }\n        };\n        Page.prototype.updateAnswers = function (data) {\n            var _this = this;\n            if (this.id !== data.questionId) {\n                return;\n            }\n            if (this.engageform.current && !_.isUndefined(data.avg)) {\n                this.engageform.current.result = data.avg;\n            }\n            Bootstrap.$timeout(function () {\n                _this.cases.map(function (vcase) {\n                    if (!_.isUndefined(data[vcase.id])) {\n                        var loaded = vcase.load();\n                        if (loaded.results) {\n                            loaded.results[vcase.id] = data[vcase.id];\n                            vcase.save(loaded);\n                        }\n                        vcase.result = data[vcase.id] || 0;\n                    }\n                });\n            });\n        };\n        Page.prototype.getStatsById = function (pageId) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.pageStatsUrl;\n            url = url.replace(':pageId', pageId);\n            return Bootstrap.$http.get(url).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    return res.data;\n                }\n                return Bootstrap.$q.reject(res);\n            });\n        };\n        return Page;\n    }());\n    Page_1.Page = Page;\n})(Page || (Page = {}));\n\n/// <reference path=\"iuser.ts\" />\nvar User = (function () {\n    function User() {\n    }\n    Object.defineProperty(User.prototype, \"id\", {\n        get: function () {\n            if (!this._id) {\n                this._id = Bootstrap.localStorage.get('userIdent');\n            }\n            return this._id;\n        },\n        set: function (id) {\n            Bootstrap.localStorage.set('userIdent', id);\n            this._id = id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"sessionId\", {\n        get: function () {\n            if (!this._sessionId) {\n                this._sessionId = Bootstrap.localStorage.get('sessionIdent');\n            }\n            return this._sessionId;\n        },\n        set: function (sessionId) {\n            Bootstrap.localStorage.set('sessionIdent', sessionId);\n            this._sessionId = sessionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return User;\n}());\n\nvar Util;\n(function (Util) {\n    var Event = (function () {\n        function Event() {\n            this._listener = {};\n        }\n        /**\n         * Register callback for given event.\n         *\n         * @param {String} event\n         * @param {Function} callback\n         */\n        Event.prototype.listen = function (event, callback) {\n            if (!this._listener[event]) {\n                this._listener[event] = [];\n            }\n            this._listener[event].push(callback);\n        };\n        /**\n         * Fire event with given arguments.\n         *\n         * @param {string} event\n         * @param {args...} data\n         */\n        Event.prototype.trigger = function (event) {\n            var data = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                data[_i - 1] = arguments[_i];\n            }\n            var args = Array.apply(null, arguments).slice(1);\n            var listeners = this._listener[event];\n            if (!listeners) {\n                return;\n            }\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].apply(null, args);\n            }\n        };\n        return Event;\n    }());\n    Util.Event = Event;\n})(Util || (Util = {}));\n\n/// <reference path=\"iengageform.ts\" />\n/// <reference path=\"isendanswercallback.ts\" />\nvar Engageform;\n(function (Engageform_1) {\n    var Engageform = (function () {\n        function Engageform(data, mode, pages, sendAnswerCallback) {\n            var _this = this;\n            if (pages === void 0) { pages = []; }\n            if (sendAnswerCallback === void 0) { sendAnswerCallback = function () { }; }\n            this._pages = {};\n            this._startPages = [];\n            this._endPages = [];\n            this._availablePages = [];\n            this._hasForms = false;\n            this.enabled = true;\n            this.type = Engageform_1.Type.Undefined;\n            // As always, due to the initialisation drama, those values are only available about now.\n            Engageform.pagesConsturctors = {\n                multiChoice: Page.MultiChoice,\n                pictureChoice: Page.PictureChoice,\n                rateIt: Page.Rateit,\n                forms: Page.Form,\n                startPage: Page.StartPage,\n                endPage: Page.EndPage,\n                buzzer: Page.Buzzer,\n                poster: Page.Poster\n            };\n            this._engageformId = data._id;\n            this.mode = mode;\n            this.sendAnswerCallback = sendAnswerCallback;\n            this.title = data.title;\n            this.settings = new Engageform_1.Settings(data);\n            this.theme = new Engageform_1.Theme(data);\n            this.tabs = new Engageform_1.Tabs(data);\n            this.texts = data.texts;\n            this.themeType = this.getThemeType(data.theme.backgroundColor);\n            this.event = new Util.Event();\n            if (data.settings && data.settings.branding) {\n                this.branding = new Branding.Branding(data.settings.branding);\n            }\n            else {\n                this.branding = new Branding.Branding({});\n            }\n            // Handle pages creation.\n            var builtPages = this.buildPages(pages, this.settings);\n            // Store the pages on the instance.\n            builtPages.forEach(function (page) { return _this.storePage(page); });\n            // Does the quiz have any form-type pages?\n            this._hasForms = builtPages.some(function (page) { return page.type === Page.Type.Form; });\n            // Create meta objects.\n            this.navigation = new Navigation.Navigation(this);\n            this.meta = new Meta.Meta(this);\n        }\n        Object.defineProperty(Engageform.prototype, \"id\", {\n            get: function () {\n                return this._engageformId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"pages\", {\n            get: function () {\n                return this._pages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"startPages\", {\n            get: function () {\n                return this._startPages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"endPages\", {\n            get: function () {\n                return this._endPages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"availablePages\", {\n            get: function () {\n                return this._availablePages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"typeName\", {\n            get: function () {\n                return Engageform_1.Type[this.type].toLowerCase();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"hasForms\", {\n            /**\n             * @public\n             * @description\n             * Returns boolean information about the presence of form-type in the current engageform.\n             *\n             * @returns {boolean} Are there any form-type questions?\n             */\n            get: function () {\n                return this._hasForms;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @public\n         * @description\n         * Checks if the current engageform is of provided type. Takes Types enum as an argument.\n         *\n         * @param {Type} type Engageform type from the Type enum.\n         * @returns {boolean} Is it?\n         */\n        Engageform.prototype.isType = function (type) {\n            return this.type === type;\n        };\n        /**\n         * Informs if the quiz is currently in a \"normal\" mode, so all features should work as intended.\n         * Normal mode means either default or preview mode.\n         *\n         * One of the feature that depends on this mode is the availability of start and end pages.\n         *\n         * @returns {Boolean}\n         */\n        Engageform.prototype.isNormalMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Default || this.mode === Engageform_1.Mode.Preview);\n        };\n        /**\n         * Informs if the quiz works in the summary mode.\n         * @returns {Boolean} Is summary mode?\n         */\n        Engageform.prototype.isSummaryMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Summary);\n        };\n        /**\n         * Informs if the quiz works in the results mode.\n         * @returns {Boolean} Is results mode?\n         */\n        Engageform.prototype.isResultsMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Result);\n        };\n        /**\n         * Informs if the quiz works in the preview mode.\n         * @returns {Boolean} Is preview mode?\n         */\n        Engageform.prototype.isPreviewMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Preview);\n        };\n        /**\n         * Stores a single page on the quiz instance.\n         *\n         * There are two type of stores. One stores only the IDs and start and end pages are stored in different\n         * collections. There's also a general collection for all pages where instances are held.\n         *\n         * Start and end pages are not stored in the summary mode.\n         *\n         * @param page The page to be stored.\n         * @returns {Page.Page} The same page.\n         */\n        Engageform.prototype.storePage = function (page) {\n            if (page.type === Page.Type.StartPage) {\n                if (this.isNormalMode()) {\n                    this._startPages.push(page.id);\n                }\n            }\n            else if (page.type === Page.Type.EndPage) {\n                if (this.isNormalMode()) {\n                    this._endPages.push(page.id);\n                }\n            }\n            else {\n                this._availablePages.push(page.id);\n            }\n            this._pages[page.id] = page;\n            return page;\n        };\n        /**\n         * Initialises a single page that will take place of the current one.\n         *\n         * @param page Page data for creating the page's instance.\n         * @returns {Page.Page} Built page.\n         */\n        Engageform.prototype.initPage = function (page) {\n            // Build and store the page.\n            this.storePage(this.buildPages([page], this.settings)[0]);\n            // Set the currently visible page.\n            return this.setCurrent(page._id);\n        };\n        /**\n         * Sets the currently visible page by finding it by ID.\n         *\n         * @param pageId Page's ID to show.\n         * @returns {IPage} The visible page.\n         */\n        Engageform.prototype.setCurrent = function (pageId) {\n            var page = this._pages[pageId];\n            this.current = page;\n            return page;\n        };\n        Engageform.prototype.setCurrentEndPage = function () {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformFinishUrl;\n            url = url.replace(':engageformId', this._engageformId);\n            if (Bootstrap.mode !== Engageform_1.Mode.Default) {\n                url += '?preview';\n            }\n            return Bootstrap.$http.post(url, {\n                userIdent: Bootstrap.user.sessionId,\n                globalUserIdent: Bootstrap.user.id\n            }).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    Bootstrap.localStorage.clearAll();\n                    Bootstrap.user.id = res.data.globalUserIdent;\n                    return res.data;\n                }\n                return this.$q.reject(res);\n            });\n        };\n        Engageform.prototype.cleanPages = function () {\n            this._availablePages.length = 0;\n            this._pages = {};\n        };\n        /**\n       * Builds pages from data delegating the construction to this.createPage method and\n       * filters out possibly unsupported pages.\n       *\n       * @param pages Array with pages data.\n       * @param settings this.settings of the current quiz.\n       * @returns {Page.Page[]} Array of pages.\n         */\n        Engageform.prototype.buildPages = function (pages, settings) {\n            var _this = this;\n            return pages\n                .map(function (page) { return _this.createPage(page, settings); })\n                .filter(function (val) { return Boolean(val); });\n        };\n        /**\n       * Creates a single page. If the type is not supported (ie. doesn't have a constructor) will return undefined.\n       *\n       * @param page Pages data.\n       * @param settings this.settings.\n       * @returns {Page.Page|void} Page instance or undefined if unsupported type.\n       */\n        Engageform.prototype.createPage = function (page, settings) {\n            if (Engageform.pagesConsturctors[page.type]) {\n                return new Engageform.pagesConsturctors[page.type](this, page, settings);\n            }\n        };\n        /**\n         * Takes the results data and applies them on the pages.\n         * @param results\n         */\n        Engageform.prototype.setSummary = function (results) {\n            var _this = this;\n            results.forEach(function (questionResults) {\n                if (_this._pages[questionResults.stats.questionId]) {\n                    _this._pages[questionResults.stats.questionId].setResults(questionResults);\n                }\n            });\n        };\n        /**\n         * In results mode, sets the user picked answers on the pages.\n         * @param questions\n         */\n        Engageform.prototype.setAnswers = function (_a) {\n            var questions = _a.questions;\n            for (var questionId in questions) {\n                if (this._pages[questionId]) {\n                    var props = questions[questionId];\n                    this._pages[questionId].selectAnswer({\n                        selectedCaseId: props.selectedAnswerId,\n                        inputs: props.inputs,\n                        selectedValue: props.rateItValue\n                    });\n                }\n            }\n        };\n        Engageform.prototype.setResultPage = function (stats) {\n            var data = {\n                _id: 'summaryPage',\n                type: 'summaryPage',\n                settings: {\n                    showCorrectAnswer: true\n                },\n                stats: stats\n            };\n            var resultPage = new Page.SummaryPage(this, data);\n            this.storePage(resultPage);\n        };\n        /**\n       * Creates a page showing user's outcome or score in adequate quiz types. Used only in the results-preview mode.\n       * @param data\n       */\n        Engageform.prototype.setUserResultPage = function (data) {\n            var pageData = {\n                _id: 'RESULT_PAGE',\n                type: 'summaryPage',\n                settings: {}\n            };\n            if (data.type === 'outcome') {\n                _.extend(pageData, {\n                    text: 'User\\'s outcome: ' + data.outcome\n                });\n            }\n            else {\n                _.extend(pageData, {\n                    text: 'User\\'s score: ' + data.score + ' / ' + data.maxScore\n                });\n            }\n            var resultPage = new Page.SummaryPage(this, pageData);\n            this.storePage(resultPage);\n        };\n        Engageform.prototype.getThemeType = function (color) {\n            var colorRGB = this.colorToRgb(color);\n            if ((colorRGB.red * 0.299 + colorRGB.green * 0.587 + colorRGB.blue * 0.114) > 186) {\n                return 'light';\n            }\n            else {\n                return 'dark';\n            }\n        };\n        Engageform.prototype.colorToRgb = function (color) {\n            var colorParts, temp, triplets;\n            if (color[0] === '#') {\n                color = color.substr(1);\n            }\n            else {\n                colorParts = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n                color = (colorParts && colorParts.length === 4) ? ('0' + parseInt(colorParts[1], 10).toString(16)).slice(-2) +\n                    ('0' + parseInt(colorParts[2], 10).toString(16)).slice(-2) +\n                    ('0' + parseInt(colorParts[3], 10).toString(16)).slice(-2) : '';\n            }\n            if (color.length === 3) {\n                temp = color;\n                color = '';\n                temp = /^([a-f0-9])([a-f0-9])([a-f0-9])$/i.exec(temp).slice(1);\n                for (var i = 0; i < 3; i++) {\n                    color += temp[i] + temp[i];\n                }\n            }\n            triplets = /^([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i.exec(color).slice(1);\n            return {\n                red: parseInt(triplets[0], 16),\n                green: parseInt(triplets[1], 16),\n                blue: parseInt(triplets[2], 16)\n            };\n        };\n        return Engageform;\n    }());\n    Engageform_1.Engageform = Engageform;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"api/api.ts\" />\n/// <reference path=\"navigation/navigation.ts\" />\n/// <reference path=\"meta/meta.ts\" />\n/// <reference path=\"page/page.ts\" />\n/// <reference path=\"user/user.ts\" />\n/// <reference path=\"util/event.ts\" />\n/// <reference path=\"engageform/engageform.ts\" />\nvar Bootstrap = (function () {\n    function Bootstrap($http, $q, $timeout, cloudinary, localStorage, ApiConfig) {\n        Bootstrap.$http = $http;\n        Bootstrap.$q = $q;\n        Bootstrap.$timeout = $timeout;\n        Bootstrap.cloudinary = cloudinary;\n        Bootstrap.localStorage = localStorage;\n        Bootstrap.config = ApiConfig;\n        Bootstrap.user = new User();\n        // Map names to constructors.\n        Bootstrap.quizzesConstructors = {\n            outcome: Engageform.Outcome,\n            poll: Engageform.Poll,\n            score: Engageform.Score,\n            survey: Engageform.Survey,\n            live: Engageform.Live\n        };\n        Bootstrap.modes = {\n            preview: Engageform.Mode.Preview,\n            summary: Engageform.Mode.Summary,\n            results: Engageform.Mode.Result,\n            'default': Engageform.Mode.Default,\n            '': Engageform.Mode.Default\n        };\n        // FIXME: This is inaccessible inside the library, since it's the consumer app that creates the instance so it\n        // isn't possible to actually trigger any event! I'm leaving it here because I don't care enough to check\n        // if any app tries to subscribe for this event. I'm almost sure it's safe to remove, though.\n        this._event = new Util.Event();\n        Bootstrap.cloudinary.setConfig(ApiConfig.cloudinary);\n    }\n    Object.defineProperty(Bootstrap.prototype, \"type\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.type;\n            }\n            return Engageform.Type.Undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"Type\", {\n        get: function () {\n            return Engageform.Type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"mode\", {\n        get: function () {\n            return Bootstrap.mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"Mode\", {\n        get: function () {\n            return Engageform.Mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"title\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.title;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"theme\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.theme;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"current\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.current;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"navigation\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.navigation;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"branding\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.branding;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"message\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.message;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"meta\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.meta;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"event\", {\n        get: function () {\n            if (this._event) {\n                return this._event;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bootstrap.prototype.init = function (opts) {\n        var _this = this;\n        // Options are required and need to have a quiz ID.\n        if (!opts || !opts.id) {\n            return Bootstrap.$q.reject({\n                status: 'error',\n                error: {\n                    code: 406,\n                    message: 'The required id property does not exist.'\n                },\n                data: opts\n            });\n        }\n        // Return already initialised instance if already exists.\n        if (Bootstrap._instances[opts.id]) {\n            return Bootstrap._instances[opts.id];\n        }\n        // When mode is not provided, set id to default.\n        if (typeof opts.mode === 'undefined') {\n            opts.mode = 'default';\n        }\n        // If the requested mode is not supported, reject the initialisation.\n        if (!Bootstrap.modes[opts.mode]) {\n            return Bootstrap.$q.reject({\n                status: 'error',\n                error: {\n                    code: 406,\n                    message: 'Mode property not supported.'\n                },\n                data: opts\n            });\n        }\n        // Set the mode in which the whole library operates.\n        Bootstrap.mode = Bootstrap.modes[opts.mode];\n        // Create the promises map that will have to resolve before the quiz is initialised.\n        var initializationPromises = {\n            quizData: Bootstrap.getData('quiz', opts.id)\n        };\n        // If the quiz is not live get the pages before initialising it.\n        if (!opts.live) {\n            initializationPromises.pages = Bootstrap.getData('pages', opts.id);\n        }\n        // Initialize the quiz.\n        return Bootstrap.$q.all(initializationPromises).then(function (data) {\n            // If the quiz doesn't have a supported constructor, reject the promise with error.\n            if (!Bootstrap.quizzesConstructors[data.quizData.type]) {\n                return Bootstrap.$q.reject({\n                    status: 'error',\n                    error: {\n                        code: 406,\n                        message: 'Type property not supported.'\n                    },\n                    data: data.quizData\n                });\n            }\n            // Create the Engageform's instance.\n            _this._engageform = new Bootstrap.quizzesConstructors[data.quizData.type](data.quizData, Bootstrap.mode, data.pages, opts.callback ? opts.callback.sendAnswerCallback : function () { });\n            return _this._engageform;\n        });\n    };\n    /**\n   * Fetches the two types of data from the API: quiz data and pages data.\n   * @param type Resource type: quiz or pages.\n   * @param id ID of the quiz.\n   * @returns {IPromise<API.IQuizQuestion[]|API.IQuiz>}\n   */\n    Bootstrap.getData = function (type, id) {\n        var resourcesPaths = {\n            quiz: 'engageformUrl',\n            pages: 'engageformPagesUrl'\n        };\n        // Basic validation.\n        if (!resourcesPaths[type]) {\n            throw new Error(\"Resource path for \" + type + \" type of data is unknown.\");\n        }\n        // Decide the data URL depending on the type.\n        var url = Bootstrap.config.backend.domain +\n            Bootstrap.config.engageform[type === 'quiz' ? 'engageformUrl' : 'engageformPagesUrl'];\n        // Valid ID required.\n        url = url.replace(':engageformId', id);\n        // Inform the backend it shouldn't store statistics when a quiz is not in a default mode.\n        if (Bootstrap.mode !== Engageform.Mode.Default) {\n            url += '?preview';\n        }\n        // Go, fetch the data.\n        return Bootstrap.$http.get(url).then(function (res) {\n            if ([200, 304].indexOf(res.status) !== -1) {\n                return res.data;\n            }\n            Bootstrap.$q.reject(res);\n        });\n    };\n    Bootstrap.prototype.destroyInstances = function () {\n        Bootstrap._instances = {};\n    };\n    Bootstrap.mode = Engageform.Mode.Undefined;\n    Bootstrap._instances = {};\n    return Bootstrap;\n}());\nBootstrap.$inject = ['$http', '$q', '$timeout', 'cloudinary', 'localStorageService', 'ApiConfig'];\napp.service('Engageform', Bootstrap);\n\n/// <reference path=\"ibranding.ts\" />\nvar Branding;\n(function (Branding_1) {\n    var Branding = (function () {\n        function Branding(data) {\n            if (data === void 0) { data = {}; }\n            this._isCustomLogo = false;\n            // Marks the branding if it is a custom, ie. user defined at least one own value.\n            this._isCustom = false;\n            var imgUrl;\n            var defaultBranding = Bootstrap.config.backend.branding;\n            // Is branding enabled? (State of the enabled branding is false, so negating that).\n            this._enabled = !data.state;\n            // If there's any branding data, it means that this is a custom branding.\n            if (data.text || data.link || data.imageUrl) {\n                this._isCustom = true;\n            }\n            // Set the branding properties form the data object or from the default values.\n            this._text = typeof data.text === 'undefined' ? defaultBranding.text : data.text;\n            this._link = typeof data.link === 'undefined' ? defaultBranding.link : data.link;\n            // Image URL is a bit complicated.\n            if (typeof data.imageUrl === 'undefined') {\n                imgUrl = defaultBranding.imageUrl;\n            }\n            else {\n                imgUrl = data.imageUrl;\n                this._isCustomLogo = true;\n            }\n            // The image's URL is a bit different if it is a default one, than when it is a custom.\n            if (imgUrl === defaultBranding.imageUrl) {\n                this._imageUrl = Bootstrap.config.backend.api + imgUrl;\n            }\n            else {\n                this._imageUrl = imgUrl ? Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + imgUrl : '';\n            }\n        }\n        Object.defineProperty(Branding.prototype, \"isCustom\", {\n            get: function () {\n                return this._isCustom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"isCustomLogo\", {\n            get: function () {\n                return this._isCustomLogo;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"isDefault\", {\n            get: function () {\n                return !this._isCustom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"imageUrl\", {\n            get: function () {\n                return this._imageUrl;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"link\", {\n            get: function () {\n                return this._link;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"text\", {\n            get: function () {\n                return this._text;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"enabled\", {\n            get: function () {\n                return this._enabled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Branding;\n    }());\n    Branding_1.Branding = Branding;\n})(Branding || (Branding = {}));\n\n/// <reference path=\"isettings.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Settings = (function () {\n        function Settings(data) {\n            this.allowAnswerChange = false;\n            this.hideMessageAfterDelay = 3000;\n            if (data.settings) {\n                this.allowAnswerChange = !!data.settings.allowAnswerChange;\n                if (data.settings.hideMessageAfterDelay) {\n                    this.hideMessageAfterDelay = data.settings.hideMessageAfterDelay;\n                }\n                if (data.settings.share) {\n                    this.share = data.settings.share;\n                    if (!this.share.imageUrl && Bootstrap.config.share && Bootstrap.config.share.defaultImgUrl) {\n                        this.share.imageUrl = Bootstrap.config.share.defaultImgUrl;\n                    }\n                }\n            }\n        }\n        return Settings;\n    }());\n    Engageform.Settings = Settings;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"itheme.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Theme = (function () {\n        function Theme(data) {\n            this.answerBackgroundColor = '';\n            this.answerBorderColor = '';\n            this.answerColor = '';\n            this.backgroundBrightness = '';\n            this.backgroundColor = '';\n            this.backgroundImageBlur = '';\n            this.backgroundImageFile = '';\n            this.backgroundImagePosition = '';\n            this.buttonColor = '';\n            this.font = '';\n            this.questionColor = '';\n            this.customThemeCssFile = '';\n            this.backgroundImageConvertedFile = '';\n            this.tabBorderColor = '';\n            this.tabFontColor = '';\n            this.tabColor = '';\n            if (data.theme) {\n                this.answerBackgroundColor = data.theme.answerBackgroundColor || '';\n                this.answerBorderColor = data.theme.answerBorderColor || '';\n                this.answerColor = data.theme.answerColor || '';\n                this.backgroundBrightness = data.theme.backgroundBrightness || '';\n                this.backgroundColor = data.theme.backgroundColor || '';\n                this.backgroundImageBlur = data.theme.backgroundImageBlur || '';\n                this.backgroundImageFile = data.theme.backgroundImageFile || '';\n                this.backgroundImagePosition = data.theme.backgroundImagePosition || '';\n                this.buttonColor = data.theme.buttonColor || '';\n                this.font = data.theme.font || '';\n                this.questionColor = data.theme.questionColor || '';\n                this.tabColor = data.theme.tabColor || '';\n                this.tabFontColor = data.theme.tabFontColor || '';\n                this.tabBorderColor = data.theme.tabBorderColor || '';\n                if (data.theme.customThemeCssFile) {\n                    this.customThemeCssFile = Bootstrap.config.backend.api + '/uploads/' + data.theme.customThemeCssFile;\n                }\n                if (data.theme.backgroundImageFile) {\n                    this.convertBackgroundImage();\n                }\n            }\n        }\n        Theme.prototype.convertBackgroundImage = function () {\n            this.backgroundImageConvertedFile = Bootstrap.cloudinary.prepareBackgroundImageUrl(this.backgroundImageFile, window.innerWidth, window.innerHeight, parseInt(this.backgroundImageBlur, 10), this.backgroundImagePosition);\n        };\n        return Theme;\n    }());\n    Engageform.Theme = Theme;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"itabs.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Tabs = (function () {\n        function Tabs(data) {\n            this.liveTitle = 'Live';\n            this.chatTitle = 'Chat';\n            this.logoUrl = '';\n            this.headerText = '';\n            if (data.tabs) {\n                if (data.tabs.liveTitle) {\n                    this.liveTitle = data.tabs.liveTitle;\n                }\n                if (data.tabs.chatTitle) {\n                    this.chatTitle = data.tabs.chatTitle;\n                }\n                if (data.tabs.logoUrl) {\n                    // The image's URL is a bit different if it is a default one, than when it is a custom.\n                    this.logoUrl = Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + data.tabs.logoUrl;\n                }\n                if (data.tabs.headerText) {\n                    this.headerText = data.tabs.headerText;\n                }\n            }\n        }\n        return Tabs;\n    }());\n    Engageform.Tabs = Tabs;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Outcome = (function (_super) {\n        __extends(Outcome, _super);\n        function Outcome() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Outcome;\n        }\n        Outcome.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                var hasEndPage = false;\n                _this.endPages.map(function (pageId) {\n                    var page = _this.pages[pageId];\n                    if (page.outcome === data.outcome) {\n                        hasEndPage = true;\n                        _this.setCurrent(pageId);\n                    }\n                });\n                if (!hasEndPage) {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Outcome;\n    }(Engageform.Engageform));\n    Engageform.Outcome = Outcome;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Poll = (function (_super) {\n        __extends(Poll, _super);\n        function Poll() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Poll;\n        }\n        Poll.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                if (_this.endPages.length) {\n                    _this.setCurrent(_this.endPages[0]);\n                }\n                else {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Poll;\n    }(Engageform.Engageform));\n    Engageform.Poll = Poll;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Score = (function (_super) {\n        __extends(Score, _super);\n        function Score() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Score;\n        }\n        Score.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                var score = 100;\n                var hasEndPage = false;\n                // Error divide by zero...\n                if (data.maxScore > 0) {\n                    score = Math.round(data.totalScore / data.maxScore * 100);\n                }\n                _this.endPages.map(function (pageId) {\n                    var page = _this.pages[pageId];\n                    if (page.rangeMin <= score && page.rangeMax >= score) {\n                        hasEndPage = true;\n                        _this.pages[pageId].score = score;\n                        _this.setCurrent(pageId);\n                    }\n                });\n                if (!hasEndPage) {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Score;\n    }(Engageform.Engageform));\n    Engageform.Score = Score;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Survey = (function (_super) {\n        __extends(Survey, _super);\n        function Survey() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Survey;\n        }\n        Survey.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                if (_this.endPages.length) {\n                    _this.setCurrent(_this.endPages[0]);\n                }\n                else {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Survey;\n    }(Engageform.Engageform));\n    Engageform.Survey = Survey;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Live = (function (_super) {\n        __extends(Live, _super);\n        function Live() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Live;\n        }\n        Live.prototype.initPages = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve(this);\n            return deferred.promise;\n        };\n        ;\n        Live.prototype.initPage = function (page) {\n            // Clean other pages.\n            this.cleanPages();\n            // Initialize the single page.\n            return _super.prototype.initPage.call(this, page);\n        };\n        Live.prototype.setCurrentEndPage = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve();\n            return deferred.promise;\n        };\n        return Live;\n    }(Engageform.Engageform));\n    Engageform.Live = Live;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"icase.ts\" />\nvar Page;\n(function (Page) {\n    var Case = (function () {\n        function Case(page, data) {\n            this.type = Page.CaseType.Undefined;\n            this.selected = false;\n            this.correct = false;\n            this.incorrect = false;\n            this.result = 0;\n            this._caseId = data._id;\n            this._page = page;\n        }\n        Object.defineProperty(Case.prototype, \"id\", {\n            get: function () {\n                return this._caseId;\n            },\n            set: function (caseId) {\n                this._caseId = caseId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Case.prototype, \"page\", {\n            get: function () {\n                return this._page;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Method used to inform if the correct or incorrect indicator should be shown. Combine with ngIf or ngShow.\n         * Indicator is shown when the page's settings allow so and (1) the answer is selected or (2) the questions is\n         * answered and the case is correct. Not shown in the summary and results modes.\n         * @returns {boolean} Should the indicator be shown?\n         */\n        Case.prototype.shouldShowIndicator = function () {\n            return !this._page.engageform.isSummaryMode() && !this._page.engageform.isResultsMode()\n                && this._page.settings.showCorrectAnswer && (this.selected || (this._page.filled && this.correct));\n        };\n        /**\n         * Informs if the results should be shown (in the summary mode or when the page is filled and set to do so).\n         * @returns {boolean} Should result be shown.\n         */\n        Case.prototype.shouldShowResults = function () {\n            return this._page.engageform.isSummaryMode() ||\n                this._page.settings.showResults && this._page.filled && !this._page.engageform.isResultsMode();\n        };\n        /**\n         * Method created mostly to mislead programmer making him think this is how the answer is sent. Too bad!\n         * You've been goofed! The real sending is done in subclasses.\n         * @returns {IPromise<T>}\n         */\n        Case.prototype.send = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve({});\n            return deferred.promise;\n        };\n        Case.prototype.makeSend = function (data) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.pageResponseUrl;\n            url = url.replace(':pageId', this.page.id);\n            if (Bootstrap.mode !== Engageform.Mode.Default) {\n                url += '?preview';\n            }\n            data.quizQuestionId = this.page.id;\n            data.userIdent = Bootstrap.user.sessionId;\n            return Bootstrap.$http.post(url, data).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    if (!data.userIdent) {\n                        Bootstrap.user.sessionId = res.data.userIdent;\n                    }\n                    return res.data;\n                }\n                else {\n                    return Bootstrap.$q.reject(res.data || {});\n                }\n            }).catch(function (res) {\n                return Bootstrap.$q.reject(res.data || {});\n            });\n        };\n        Case.prototype.load = function () {\n            return Bootstrap.localStorage.get('page.' + this.page.id) || {};\n        };\n        Case.prototype.save = function (data) {\n            Bootstrap.localStorage.set('page.' + this.page.id, data);\n        };\n        Case.prototype.validate = function () {\n            // \"abstract\"\n            return true;\n        };\n        // Buzzer need extra send, so we made this abstract\n        Case.prototype.trueBuzzerSend = function (BCS) {\n            // \"abstract\"\n        };\n        return Case;\n    }());\n    Page.Case = Case;\n})(Page || (Page = {}));\n\n/// <reference path=\"isettings.ts\" />\nvar Page;\n(function (Page) {\n    var Settings = (function () {\n        function Settings(data) {\n            this.showResults = false;\n            this.showCorrectAnswer = false;\n            this.showMainMedia = false;\n            this.showDescription = false;\n            this.requiredAnswer = false;\n            this.requiredAnswer = !!data.requiredAnswer;\n            if (data.settings) {\n                this.showResults = !!data.settings.showAnswers;\n                this.showCorrectAnswer = !!data.settings.showCorrectAnswer;\n                this.showMainMedia = !!data.settings.showMainMedia;\n                this.showDescription = !!data.settings.showDescription;\n            }\n        }\n        return Settings;\n    }());\n    Page.Settings = Settings;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var ImageCase = (function (_super) {\n        __extends(ImageCase, _super);\n        function ImageCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Image;\n            this.title = data.text;\n            this.media = Bootstrap.cloudinary.prepareImageUrl(data.imageFile, 300, data.imageData);\n            this.mediaWidth = 300;\n            if (data.imageData && data.imageData.containerRatio) {\n                this.mediaHeight = Math.round(300 * data.imageData.containerRatio);\n            }\n            else {\n                this.mediaHeight = Math.round(data.imageData.containerHeight || 0);\n            }\n        }\n        ImageCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { selectedAnswerId: this.id }).then(function (res) {\n                var data = {};\n                if (res.selectedAnswerId) {\n                    data.selectedCaseId = res.selectedAnswerId;\n                }\n                if (res.correctAnswerId) {\n                    data.correctCaseId = res.correctAnswerId;\n                }\n                for (var caseId in res.stats) {\n                    if (res.stats.hasOwnProperty(caseId)) {\n                        data.results = data.results || {};\n                        if (/.{24}/.test(caseId)) {\n                            data.results[caseId] = res.stats[caseId];\n                        }\n                    }\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return ImageCase;\n    }(Page.Case));\n    Page.ImageCase = ImageCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var InputCase = (function (_super) {\n        __extends(InputCase, _super);\n        function InputCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Input;\n            this.title = data.label;\n            this.expectedValue = data.type;\n            this.value = '';\n        }\n        InputCase.prototype.send = function () {\n            var _this = this;\n            var data = {};\n            data.inputs = [];\n            var sent = this.load();\n            for (var sentId in sent) {\n                if (sent.hasOwnProperty(sentId)) {\n                    data.inputs.push({\n                        _id: sentId,\n                        value: sent[sentId]\n                    });\n                }\n            }\n            return _super.prototype.makeSend.call(this, data).then(function () {\n                return data;\n            }).catch(function (data) {\n                if (data.code === 406) {\n                    data.textKey = 'INCORRECT_INPUT';\n                    data.message = 'Incorrect inputs sent. Try again.';\n                    _this.save({});\n                }\n                return Bootstrap.$q.reject(data);\n            });\n        };\n        InputCase.prototype.validate = function () {\n            this.correct = false;\n            this.incorrect = false;\n            if (this.page.settings.requiredAnswer && !this.value) {\n                this.error = 'Answer is required';\n                this.incorrect = true;\n            }\n            else {\n                this.error = '';\n                this.correct = true;\n            }\n            if (this.correct) {\n                var sent = this.load();\n                sent[this.id] = this.value;\n                this.save(sent);\n                return true;\n            }\n            return false;\n        };\n        return InputCase;\n    }(Page.Case));\n    Page.InputCase = InputCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var IterationCase = (function (_super) {\n        __extends(IterationCase, _super);\n        function IterationCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Iteration;\n            this.selected = false;\n            this.ordinal = data.ordinal;\n            this.symbol = data.symbol;\n        }\n        IterationCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { quizQuestionId: this.page.id, rateItValue: this.ordinal }).then(function (res) {\n                var data = {};\n                if (res.selectedValue) {\n                    data.selectedValue = res.selectedValue;\n                }\n                if (res.avgRateItValue) {\n                    data.result = +res.avgRateItValue;\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return IterationCase;\n    }(Page.Case));\n    Page.IterationCase = IterationCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var TextCase = (function (_super) {\n        __extends(TextCase, _super);\n        function TextCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Text;\n            this.title = data.text;\n        }\n        TextCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { selectedAnswerId: this.id }).then(function (res) {\n                var data = {};\n                if (res.selectedAnswerId) {\n                    data.selectedCaseId = res.selectedAnswerId;\n                }\n                if (res.correctAnswerId) {\n                    data.correctCaseId = res.correctAnswerId;\n                }\n                for (var caseId in res.stats) {\n                    if (res.stats.hasOwnProperty(caseId)) {\n                        data.results = data.results || {};\n                        if (/.{24}/.test(caseId)) {\n                            data.results[caseId] = res.stats[caseId];\n                        }\n                    }\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return TextCase;\n    }(Page.Case));\n    Page.TextCase = TextCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var BuzzCase = (function (_super) {\n        __extends(BuzzCase, _super);\n        function BuzzCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Buzz;\n            this.page = page;\n        }\n        BuzzCase.prototype.send = function () {\n            // We dont really send buzzes here, just increase buttonClickSum here\n            this.page.clickBuzzer();\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve({});\n            return deferred.promise;\n        };\n        BuzzCase.prototype.trueBuzzerSend = function (BCS) {\n            return _super.prototype.makeSend.call(this, { quizQuestionId: this.page.id, buttonClickSum: BCS }).then(function (res) {\n                var data = {};\n                // IMO we don't need that since buzzer have fake answerId's\n                // super.save(data);\n                // this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return BuzzCase;\n    }(Page.Case));\n    Page.BuzzCase = BuzzCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var EndPage = (function (_super) {\n        __extends(EndPage, _super);\n        function EndPage(engageform, data, settings) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.EndPage;\n            this.isCoverPage = true;\n            this.socialData = {\n                title: settings.share.title,\n                description: settings.share.description,\n                imageUrl: settings.share.imageUrl,\n                link: settings.share.link\n            };\n            if (data.coverPage) {\n                this.button = data.coverPage.buttonText;\n                this.outcome = data.coverPage.outcome;\n                this.social = data.coverPage.showSocialShares;\n                this.exitLink = data.coverPage.exitLink;\n                this.link = data.coverPage.link;\n                if (data.coverPage.scoreRange) {\n                    this.rangeMax = data.coverPage.scoreRange.max;\n                    this.rangeMin = data.coverPage.scoreRange.min;\n                }\n            }\n        }\n        EndPage.prototype.personalizeShares = function () {\n            // console.log('[ Endpage ] Personalize shares');\n            if (this.engageform.typeName === 'outcome' || this.engageform.typeName === 'score') {\n                // Replace $TITLE$ and $RESULT$ tags in the translation and set the title.\n                this.socialData.title = this.engageform.texts.SCORE_AND_OUTCOME_SHARE\n                    .replace(/\\$RESULT\\$/gi, this.outcome || String(this.score || 0))\n                    .replace(/\\$TITLE\\$/gi, this.engageform.title);\n                if (this.media && this.settings.showMainMedia) {\n                    this.socialData.imageUrl = this.media;\n                }\n            }\n        };\n        Object.defineProperty(EndPage.prototype, \"fbLink\", {\n            get: function () {\n                if (Bootstrap.config.backend && Bootstrap.config.backend.domain &&\n                    Bootstrap.config.share && Bootstrap.config.share.facebook &&\n                    this.socialData && this.socialData.title && this.socialData.description &&\n                    this.socialData.imageUrl && this.engageform && this.engageform.id) {\n                    this.personalizeShares();\n                    return Bootstrap.config.backend.domain + Bootstrap.config.share.facebook + '?quizId=' + this.engageform.id +\n                        '&description=' + encodeURIComponent(this.socialData.description) + '&name=' +\n                        encodeURIComponent(this.socialData.title) + '&image=' + this.socialData.imageUrl;\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(EndPage.prototype, \"twLink\", {\n            get: function () {\n                if (this.socialData && this.socialData.title && this.socialData.link) {\n                    this.personalizeShares();\n                    return 'https://twitter.com/intent/tweet?text=' + encodeURIComponent(this.socialData.title)\n                        + ' ' + this.socialData.link + ' via @4screens';\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return EndPage;\n    }(Page.Page));\n    Page.EndPage = EndPage;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var Form = (function (_super) {\n        __extends(Form, _super);\n        function Form(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Form;\n            this.count = 0;\n            if (!data.forms) {\n                return;\n            }\n            this.cases = data.forms.inputs.map(function (input) {\n                return _this.createCase(input);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        Form.prototype.createCase = function (input) {\n            return new Page.InputCase(this, input);\n        };\n        Form.prototype.send = function (vcase) {\n            var deferred = Bootstrap.$q.defer();\n            var validated = true;\n            this.cases.map(function (input) {\n                if (!input.validate()) {\n                    validated = false;\n                }\n            });\n            if (validated) {\n                this.filled = true;\n                this.engageform.sendAnswerCallback(this.engageform.title || this.engageform.id, this.engageform.current ? this.engageform.current.title || this.engageform.current.id : null, this.cases[0]);\n                deferred.resolve(this.cases[0].send());\n            }\n            else {\n                this.filled = false;\n                deferred.resolve({});\n            }\n            return deferred.promise;\n        };\n        Form.prototype.selectAnswer = function (sent) {\n            this.cases.map(function (vcase) {\n                vcase.value = sent[vcase.id] || '';\n                // In results mode, there might be data containing user inputs, so set it as the case value.\n                if (sent.inputs) {\n                    sent.inputs.forEach(function (inputData) {\n                        if (inputData._id === vcase.id) {\n                            vcase.value = inputData.value;\n                        }\n                    });\n                }\n            });\n        };\n        Form.prototype.setResults = function (results) {\n            this.count = results.count;\n        };\n        return Form;\n    }(Page.Page));\n    Page.Form = Form;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var MultiChoice = (function (_super) {\n        __extends(MultiChoice, _super);\n        function MultiChoice(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.MultiChoice;\n            if (!data.answers) {\n                return;\n            }\n            this.cases = data.answers.map(function (answer) {\n                return _this.createCase(answer);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        MultiChoice.prototype.createCase = function (answer) {\n            return new Page.TextCase(this, answer);\n        };\n        MultiChoice.prototype.refreshAnswer = function (sent, question) {\n            question.answers.map(function (answer) {\n                sent.results[answer._id] = answer.percent;\n            });\n            return sent;\n        };\n        MultiChoice.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            this.cases.map(function (vcase) {\n                vcase.selected = false;\n                vcase.correct = false;\n                vcase.incorrect = false;\n                if (vcase.id === sent.selectedCaseId) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                    _this.filled = true;\n                    vcase.selected = true;\n                }\n                if (sent.results) {\n                    vcase.result = sent.results[vcase.id] || 0;\n                }\n                // Mark case as correct or incorrect.\n                if (vcase.id === sent.correctCaseId) {\n                    vcase.correct = true;\n                }\n                else {\n                    vcase.incorrect = true;\n                }\n            });\n        };\n        return MultiChoice;\n    }(Page.Page));\n    Page.MultiChoice = MultiChoice;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var PictureChoice = (function (_super) {\n        __extends(PictureChoice, _super);\n        function PictureChoice(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.PictureChoice;\n            if (!data.answers) {\n                return;\n            }\n            this.cases = data.answers.map(function (answer) {\n                return _this.createCase(answer);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        PictureChoice.prototype.createCase = function (answer) {\n            return new Page.ImageCase(this, answer);\n        };\n        PictureChoice.prototype.refreshAnswer = function (sent, question) {\n            question.answers.map(function (answer) {\n                sent.results[answer._id] = answer.percent;\n            });\n            return sent;\n        };\n        PictureChoice.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            this.cases.map(function (vcase) {\n                vcase.selected = false;\n                vcase.correct = false;\n                vcase.incorrect = false;\n                if (vcase.id === sent.selectedCaseId) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                    _this.filled = true;\n                    vcase.selected = true;\n                }\n                if (sent.results) {\n                    vcase.result = sent.results[vcase.id] || 0;\n                }\n                // Mark case as correct or incorrect.\n                if (vcase.id === sent.correctCaseId) {\n                    vcase.correct = true;\n                }\n                else {\n                    vcase.incorrect = true;\n                }\n            });\n        };\n        return PictureChoice;\n    }(Page.Page));\n    Page.PictureChoice = PictureChoice;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var Rateit = (function (_super) {\n        __extends(Rateit, _super);\n        function Rateit(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Rateit;\n            this.selectedValue = 0;\n            this.labelMin = data.rateIt.minLabel;\n            this.labelMax = data.rateIt.maxLabel;\n            this.cases = Array.apply(null, Array(data.rateIt.maxRateItValue)).map(function (value, index) {\n                return _this.createCase(index + 1, data.rateIt.rateType);\n            });\n            this.sent().then(function (sent) {\n                if (sent.selectedValue) {\n                    _this.selectedValue = sent.selectedValue;\n                    _this.selectAnswer(sent);\n                }\n            });\n        }\n        /**\n         * Rateit is unique in a way it shows results. Typically it's the cases matter to show them, but here it's\n         * the page that has results, so the method is required here.\n         * @returns {boolean} Should the result be shown?\n         */\n        Rateit.prototype.shouldShowResults = function () {\n            return this.settings.showResults && this.result > 0;\n        };\n        Rateit.prototype.createCase = function (ordinal, symbol) {\n            return new Page.IterationCase(this, { ordinal: ordinal, symbol: symbol });\n        };\n        Rateit.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            if (sent.selectedValue) {\n                this.filled = true;\n                this.selectedValue = sent.selectedValue;\n            }\n            if (sent.result) {\n                this.result = sent.result;\n            }\n            this.cases.map(function (vcase) {\n                vcase.selected = sent.selectedValue >= vcase.ordinal;\n                if (sent.selectedValue === vcase.ordinal) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                }\n            });\n        };\n        Rateit.prototype.setResults = function (results) {\n            this.result = results.average;\n            this.selectedValue = results.average;\n        };\n        return Rateit;\n    }(Page.Page));\n    Page.Rateit = Rateit;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var StartPage = (function (_super) {\n        __extends(StartPage, _super);\n        function StartPage(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.StartPage;\n            this.isCoverPage = true;\n            if (data.coverPage && data.coverPage.buttonText !== undefined) {\n                this.button = data.coverPage.buttonText;\n            }\n        }\n        return StartPage;\n    }(Page.Page));\n    Page.StartPage = StartPage;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var Buzzer = (function (_super) {\n        __extends(Buzzer, _super);\n        function Buzzer(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Buzzer;\n            this.buttonClickSum = 0;\n            this._connected = false;\n            // Make only one case with buzzed ammount\n            this.cases.push(new Page.BuzzCase(this, { _id: 0, buttonClickSum: this.buttonClickSum }));\n            // Clear previous timeout\n            if (this._timeout) {\n                Bootstrap.$timeout.cancel(this._timeout);\n            }\n            // Start loop\n            this.buzzLoop(0);\n            // FIXME: Relpace when themes will be ready\n            // this.buzzerTheme = data.buzzerTheme;\n            this.buzzerTheme = Bootstrap.config.fakeBuzzerTheme || {};\n        }\n        Buzzer.prototype.buzzLoop = function (iteration) {\n            var _this = this;\n            if (!this._connected) {\n                this._connected = true;\n            }\n            if (this.buttonClickSum > 0) {\n                this._connected = true;\n                // True send - POST to server, we dont need then here since socket respond with global buttonClickSum\n                this.cases[0].trueBuzzerSend(this.buttonClickSum);\n                this.cases[0].buttonClickSum = this.buttonClickSum;\n                this.engageform.sendAnswerCallback(this.engageform.title || this.engageform.id, this.engageform.current ? this.engageform.current.title || this.engageform.current.id : null, this.cases[0]);\n            }\n            // Not a buzzer - stop cycle\n            if (iteration > 0 && this.engageform && this.engageform.current && this.engageform.current.id !== this.id) {\n                return;\n            }\n            // Loop\n            this._timeout = Bootstrap.$timeout(function () {\n                _this.buzzLoop(iteration + 1);\n            }, 3000);\n            // Clear buttonClickSum\n            this.buttonClickSum = 0;\n        };\n        Buzzer.prototype.clickBuzzer = function () {\n            // Limit buzzes\n            if (this.buttonClickSum < 100) {\n                this.buttonClickSum++;\n            }\n        };\n        return Buzzer;\n    }(Page.Page));\n    Page.Buzzer = Buzzer;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var Poster = (function (_super) {\n        __extends(Poster, _super);\n        function Poster(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Poster;\n        }\n        return Poster;\n    }(Page.Page));\n    Page.Poster = Poster;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var SummaryPage = (function (_super) {\n        __extends(SummaryPage, _super);\n        function SummaryPage(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.SummaryPage;\n            if (data.text) {\n                this.title = data.text;\n            }\n            else {\n                if (engageform.type === Engageform.Type.Outcome) {\n                    this.title = 'Outcomes';\n                }\n                else {\n                    this.title = 'Scores';\n                }\n            }\n            this.stats = data.stats;\n        }\n        return SummaryPage;\n    }(Page.Page));\n    Page.SummaryPage = SummaryPage;\n})(Page || (Page = {}));\n})(angular);\n\n",null,null,"/// <reference path=\"../typings/tsd.d.ts\" />\n\nvar app = angular.module('4screens.engageform', [\n  '4screens.util.cloudinary',\n  'LocalStorageModule'\n]);\n",null,null,null,null,null,"/// <reference path=\"api/api.ts\" />\n/// <reference path=\"navigation/navigation.ts\" />\n/// <reference path=\"meta/meta.ts\" />\n/// <reference path=\"page/page.ts\" />\n/// <reference path=\"user/user.ts\" />\n/// <reference path=\"util/event.ts\" />\n/// <reference path=\"engageform/engageform.ts\" />\n\nimport IPromise = angular.IPromise;\n\nclass Bootstrap {\n  static $http: ng.IHttpService;\n  static $q: ng.IQService;\n  static $timeout: ng.ITimeoutService;\n  static cloudinary: any;\n  static localStorage: ng.local.storage.ILocalStorageService;\n  static user: User;\n  static config;\n  static mode = Engageform.Mode.Undefined;\n  Engageform: Engageform.IEngageform;\n\n  private _engageform: Engageform.IEngageform;\n  private _event: Util.Event;\n\n  private static _instances: Engageform.IEngageformInstances = {};\n\n  // Stores the constructors of quizzes mapped by names. Values are assigned in constructor because the modules\n  // dependency is spaghetti-like and constructors will be undefined at this point.\n  static quizzesConstructors;\n\n  // Modes the library can operates in. Values assigned later due to the spaghetti.\n  static modes;\n\n  constructor($http: ng.IHttpService, $q: ng.IQService, $timeout: ng.ITimeoutService, cloudinary: any,\n              localStorage: ng.local.storage.ILocalStorageService, ApiConfig: Config.ApiConfig) {\n    Bootstrap.$http = $http;\n    Bootstrap.$q = $q;\n    Bootstrap.$timeout = $timeout;\n    Bootstrap.cloudinary = cloudinary;\n    Bootstrap.localStorage = localStorage;\n    Bootstrap.config = ApiConfig;\n    Bootstrap.user = new User();\n\n    // Map names to constructors.\n    Bootstrap.quizzesConstructors = {\n      outcome: Engageform.Outcome,\n      poll: Engageform.Poll,\n      score: Engageform.Score,\n      survey: Engageform.Survey,\n      live: Engageform.Live\n    };\n\n    Bootstrap.modes = {\n      preview: Engageform.Mode.Preview,\n      summary: Engageform.Mode.Summary,\n      results: Engageform.Mode.Result,\n      'default': Engageform.Mode.Default,\n      '': Engageform.Mode.Default\n    };\n\n    // FIXME: This is inaccessible inside the library, since it's the consumer app that creates the instance so it\n    // isn't possible to actually trigger any event! I'm leaving it here because I don't care enough to check\n    // if any app tries to subscribe for this event. I'm almost sure it's safe to remove, though.\n    this._event = new Util.Event();\n\n    Bootstrap.cloudinary.setConfig(ApiConfig.cloudinary);\n  }\n\n  get type(): Engageform.Type {\n    if (this._engageform) {\n      return this._engageform.type;\n    }\n\n    return Engageform.Type.Undefined;\n  }\n\n  get Type() {\n    return Engageform.Type;\n  }\n\n  get mode(): Engageform.Mode {\n    return Bootstrap.mode;\n  }\n\n  get Mode() {\n    return Engageform.Mode;\n  }\n\n  get title(): string {\n    if (this._engageform) {\n      return this._engageform.title;\n    }\n  }\n\n  get theme(): Engageform.ITheme {\n    if (this._engageform) {\n      return this._engageform.theme;\n    }\n  }\n\n  get current(): Page.IPage {\n    if (this._engageform) {\n      return this._engageform.current;\n    }\n  }\n\n  get navigation(): Navigation.INavigation {\n    if (this._engageform) {\n      return this._engageform.navigation;\n    }\n  }\n\n  get branding(): Branding.IBranding {\n    if (this._engageform) {\n      return this._engageform.branding;\n    }\n  }\n\n  get message(): string {\n    if (this._engageform) {\n      return this._engageform.message;\n    }\n  }\n\n  get meta(): Meta.IMeta {\n    if (this._engageform) {\n      return this._engageform.meta;\n    }\n  }\n\n  get event(): Util.Event {\n    if (this._event) {\n      return this._event;\n    }\n  }\n\n  init(opts: API.IEmbed): ng.IPromise<Engageform.IEngageform> {\n    // Options are required and need to have a quiz ID.\n    if (!opts || !opts.id) {\n      return Bootstrap.$q.reject({\n        status: 'error',\n        error: {\n          code: 406,\n          message: 'The required id property does not exist.'\n        },\n        data: opts\n      });\n    }\n\n    // Return already initialised instance if already exists.\n    if (Bootstrap._instances[opts.id]) {\n      return Bootstrap._instances[opts.id];\n    }\n\n    // When mode is not provided, set id to default.\n    if (typeof opts.mode === 'undefined') {\n      opts.mode = 'default';\n    }\n\n    // If the requested mode is not supported, reject the initialisation.\n    if (!Bootstrap.modes[opts.mode]) {\n      return Bootstrap.$q.reject({\n        status: 'error',\n        error: {\n          code: 406,\n          message: 'Mode property not supported.'\n        },\n        data: opts\n      });\n    }\n\n    // Set the mode in which the whole library operates.\n    Bootstrap.mode = Bootstrap.modes[opts.mode];\n\n    // Create the promises map that will have to resolve before the quiz is initialised.\n    let initializationPromises: {[index: string]: any; quizData: ng.IPromise<API.IQuiz>; pages?: ng.IPromise<API.IPages>} = {\n      quizData: Bootstrap.getData('quiz', opts.id)\n    };\n\n    // If the quiz is not live get the pages before initialising it.\n    if (!opts.live) {\n      initializationPromises.pages = Bootstrap.getData('pages', opts.id);\n    }\n\n    // Initialize the quiz.\n    return Bootstrap.$q.all(initializationPromises).then((data: API.IQuizAndPagesInit) => {\n      // If the quiz doesn't have a supported constructor, reject the promise with error.\n      if (!Bootstrap.quizzesConstructors[data.quizData.type]) {\n        return Bootstrap.$q.reject({\n          status: 'error',\n          error: {\n            code: 406,\n            message: 'Type property not supported.'\n          },\n          data: data.quizData\n        });\n      }\n\n      // Create the Engageform's instance.\n      this._engageform = new Bootstrap.quizzesConstructors[data.quizData.type](data.quizData,\n        Bootstrap.mode, data.pages, opts.callback ? opts.callback.sendAnswerCallback : () => {});\n\n      return this._engageform;\n    });\n  }\n\n\t/**\n   * Fetches the two types of data from the API: quiz data and pages data.\n   * @param type Resource type: quiz or pages.\n   * @param id ID of the quiz.\n   * @returns {IPromise<API.IQuizQuestion[]|API.IQuiz>}\n   */\n  static getData(type: string, id: string): ng.IPromise<API.IQuizQuestion[]|API.IQuiz> {\n    const resourcesPaths = {\n      quiz: 'engageformUrl',\n      pages: 'engageformPagesUrl'\n    };\n\n    // Basic validation.\n    if (!resourcesPaths[type]) {\n      throw new Error(`Resource path for ${type} type of data is unknown.`);\n    }\n\n    // Decide the data URL depending on the type.\n    let url = Bootstrap.config.backend.domain +\n      Bootstrap.config.engageform[type === 'quiz' ? 'engageformUrl' : 'engageformPagesUrl'];\n\n    // Valid ID required.\n    url = url.replace(':engageformId', id);\n\n    // Inform the backend it shouldn't store statistics when a quiz is not in a default mode.\n    if (Bootstrap.mode !== Engageform.Mode.Default) {\n      url += '?preview';\n    }\n\n    // Go, fetch the data.\n    return Bootstrap.$http.get(url).then(function (res) {\n      if ([200, 304].indexOf(res.status) !== -1) {\n        return res.data;\n      }\n\n      Bootstrap.$q.reject(res);\n    });\n  }\n\n  destroyInstances() {\n    Bootstrap._instances = {};\n  }\n}\n\nBootstrap.$inject = ['$http', '$q', '$timeout', 'cloudinary', 'localStorageService', 'ApiConfig'];\napp.service('Engageform', Bootstrap);\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"/source/"}