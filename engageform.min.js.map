{"version":3,"sources":["/source/header.ts","/source/engageform/enum.ts","engageform.js","/source/page/enum.ts","/source/engageform/engageform.ts","/source/app.ts","/source/navigation/navigation.ts","/source/page/page.ts","/source/util/cloudinary.ts","/source/user/user.ts","/source/util/events.ts","/source/bootstrap.ts","/source/branding/branding.ts","/source/engageform/settings.ts","/source/engageform/theme.ts","/source/engageform/type/outcome.ts","/source/engageform/type/poll.ts","/source/engageform/type/score.ts","/source/engageform/type/survey.ts","/source/engageform/type/live.ts","/source/page/case.ts","/source/page/settings.ts","/source/page/case/image.ts","/source/page/case/input.ts","/source/page/case/iteration.ts","/source/page/case/text.ts","/source/page/case/buzz.ts","/source/page/type/endpage.ts","/source/page/type/form.ts","/source/page/type/multichoice.ts","/source/page/type/picturechoice.ts","/source/page/type/rateit.ts","/source/page/type/startpage.ts","/source/page/type/buzzer.ts","/source/page/type/poster.ts"],"names":["angular","Engageform","Engageform.Type","Engageform.Mode","Mode","Page","Page.CaseType","Page.Type","Type","app","module","Engageform.Engageform","Engageform.Engageform.constructor","Object","defineProperty","get","Engageform.Engageform.pages","enumerable","Engageform.Engageform.startPages","Engageform.Engageform.endPages","Engageform.Engageform.availablePages","Engageform.Engageform.typeName","Engageform.Engageform.hasForms","Engageform.Engageform.isType","Engageform.Engageform.initPages","Engageform.Engageform.initPage","Engageform.Engageform.setCurrent","Engageform.Engageform.setCurrentEndPage","then","res","indexOf","status","Bootstrap","localStorage","clearAll","user","id","data","globalUserIdent","Engageform.Engageform.getById","Engageform.Engageform.cleanPages","Engageform.Engageform.buildPages","pages","Engageform.Engageform.getPagesById","$http","url","Engageform_1","Navigation","Navigation.Navigation","Navigation.Navigation.constructor","Navigation.Navigation.updateDistance","Navigation.Navigation.start","Navigation.Navigation.prev","Navigation.Navigation.pick","this","Navigation.Navigation.move","Navigation.Navigation.disableDefaultAction","Navigation_1","Page.Page","Page.Page.constructor","Page.Page.id","Page.Page.engageform","Page.Page.Type","Page.Page.CaseType","Page.Page.send","Page.Page.sent","Page.Page.selectAnswer","Page.Page.updateAnswers","_this","Page.Page.getMediaUrl","Page_1","Util","User","User.constructor","User.id","set","User.sessionId","Util.Cloudinary","Util.Cloudinary.constructor","Cloudinary","Util.Cloudinary.getInstance","Util.Cloudinary.prepareImageUrl","Util.Events","Util.Events.constructor","Events","Util.Events.listen","Util.Events.trigger","Bootstrap.constructor","Bootstrap.type","Bootstrap.Type","Bootstrap.mode","Bootstrap.Mode","Bootstrap.title","Bootstrap.theme","Bootstrap.current","Bootstrap.navigation","Bootstrap.branding","Bootstrap.message","Bootstrap.events","Bootstrap.init","error","engageform","navigation","$inject","service","Branding","Branding.Branding","Branding.Branding.constructor","Branding.Branding.isCustom","Branding.Branding.isCustomLogo","Branding.Branding.isDefault","Branding.Branding.imageUrl","Branding.Branding.link","Branding.Branding.text","Branding_1","Engageform.Settings","Engageform.Settings.constructor","Settings","Engageform.Theme","Engageform.Theme.constructor","Theme","__extends","d","b","__","constructor","p","hasOwnProperty","prototype","Engageform.Outcome","Engageform.Outcome.constructor","Outcome","Engageform.Outcome.setCurrentEndPage","Engageform.Poll","Engageform.Poll.constructor","Poll","Engageform.Poll.setCurrentEndPage","Engageform.Score","Engageform.Score.constructor","Score","Engageform.Score.setCurrentEndPage","Engageform.Survey","Engageform.Survey.constructor","Survey","Engageform.Survey.setCurrentEndPage","Engageform.Live","Engageform.Live.constructor","Live","Engageform.Live.initPages","Engageform.Live.initPage","Engageform.Live.setCurrentEndPage","Page.Case","Page.Case.constructor","Page.Case.id","Page.Case.page","Case","Page.Case.send","Page.Case.makeSend","Page.Case.load","Page.Case.save","Page.Case.validate","Page.Case.trueBuzzerSend","Page.Settings","Page.Settings.constructor","Page.ImageCase","Page.ImageCase.constructor","ImageCase","Page.ImageCase.send","Page.InputCase","Page.InputCase.constructor","InputCase","Page.InputCase.send","Page.InputCase.validate","Page.IterationCase","Page.IterationCase.constructor","IterationCase","Page.IterationCase.send","Page.TextCase","Page.TextCase.constructor","TextCase","Page.TextCase.send","Page.BuzzCase","Page.BuzzCase.constructor","BuzzCase","Page.BuzzCase.send","Page.BuzzCase.trueBuzzerSend","Page.EndPage","Page.EndPage.constructor","EndPage","Page.Form","Page.Form.constructor","Form","Page.Form.send","Page.Form.selectAnswer","Page.MultiChoice","Page.MultiChoice.constructor","MultiChoice","Page.MultiChoice.selectAnswer","Page.PictureChoice","Page.PictureChoice.constructor","PictureChoice","Page.PictureChoice.selectAnswer","Page.Rateit","Page.Rateit.constructor","Rateit","Page.Rateit.selectAnswer","Page.StartPage","Page.StartPage.constructor","StartPage","Page.Buzzer","Page.Buzzer.constructor","Buzzer","Page.Buzzer.buzzLoop","Page.Buzzer.clickBuzzer","Page.Poster","Page.Poster.constructor","Poster"],"mappings":"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","file":"engageform.min.js","sourcesContent":["/*!\n * 4screens-angular-engageform v0.2.8\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n","module Engageform {\n  export enum Type {\n    Undefined,\n    Live,\n    Outcome,\n    Poll,\n    Score,\n    Survey\n  }\n\n  export enum Mode {\n    Undefined,\n    Default,\n    Preview,\n    Result,\n    Summary\n  }\n}\n","(function(angular) {\n/*!\n * 4screens-angular-engageform v0.2.8\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n\nvar Engageform;\n(function (Engageform) {\n    (function (Type) {\n        Type[Type[\"Undefined\"] = 0] = \"Undefined\";\n        Type[Type[\"Live\"] = 1] = \"Live\";\n        Type[Type[\"Outcome\"] = 2] = \"Outcome\";\n        Type[Type[\"Poll\"] = 3] = \"Poll\";\n        Type[Type[\"Score\"] = 4] = \"Score\";\n        Type[Type[\"Survey\"] = 5] = \"Survey\";\n    })(Engageform.Type || (Engageform.Type = {}));\n    var Type = Engageform.Type;\n    (function (Mode) {\n        Mode[Mode[\"Undefined\"] = 0] = \"Undefined\";\n        Mode[Mode[\"Default\"] = 1] = \"Default\";\n        Mode[Mode[\"Preview\"] = 2] = \"Preview\";\n        Mode[Mode[\"Result\"] = 3] = \"Result\";\n        Mode[Mode[\"Summary\"] = 4] = \"Summary\";\n    })(Engageform.Mode || (Engageform.Mode = {}));\n    var Mode = Engageform.Mode;\n})(Engageform || (Engageform = {}));\n\nvar Page;\n(function (Page) {\n    (function (CaseType) {\n        CaseType[CaseType[\"Undefined\"] = 0] = \"Undefined\";\n        CaseType[CaseType[\"Image\"] = 1] = \"Image\";\n        CaseType[CaseType[\"Input\"] = 2] = \"Input\";\n        CaseType[CaseType[\"Iteration\"] = 3] = \"Iteration\";\n        CaseType[CaseType[\"Text\"] = 4] = \"Text\";\n        CaseType[CaseType[\"Buzz\"] = 5] = \"Buzz\";\n    })(Page.CaseType || (Page.CaseType = {}));\n    var CaseType = Page.CaseType;\n    (function (Type) {\n        Type[Type[\"Undefined\"] = 0] = \"Undefined\";\n        Type[Type[\"EndPage\"] = 1] = \"EndPage\";\n        Type[Type[\"Form\"] = 2] = \"Form\";\n        Type[Type[\"MultiChoice\"] = 3] = \"MultiChoice\";\n        Type[Type[\"PictureChoice\"] = 4] = \"PictureChoice\";\n        Type[Type[\"Rateit\"] = 5] = \"Rateit\";\n        Type[Type[\"StartPage\"] = 6] = \"StartPage\";\n        Type[Type[\"Buzzer\"] = 7] = \"Buzzer\";\n        Type[Type[\"Poster\"] = 8] = \"Poster\";\n    })(Page.Type || (Page.Type = {}));\n    var Type = Page.Type;\n})(Page || (Page = {}));\n\n/// <reference path=\"../typings/tsd.d.ts\" />\nvar app = angular.module('4screens.engageform', [\n    'LocalStorageModule'\n]);\n\n/// <reference path=\"iengageform.ts\" />\nvar Engageform;\n(function (Engageform_1) {\n    var Engageform = (function () {\n        function Engageform(data) {\n            this._pages = {};\n            this._startPages = [];\n            this._endPages = [];\n            this._availablePages = [];\n            this._hasForms = false;\n            this.enabled = true;\n            this.type = Engageform_1.Type.Undefined;\n            this._engageformId = data._id;\n            this.title = data.title;\n            this.settings = new Engageform_1.Settings(data);\n            this.theme = new Engageform_1.Theme(data);\n            this.branding = new Branding.Branding(data.settings.branding);\n        }\n        Object.defineProperty(Engageform.prototype, \"pages\", {\n            get: function () {\n                return this._pages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"startPages\", {\n            get: function () {\n                return this._startPages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"endPages\", {\n            get: function () {\n                return this._endPages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"availablePages\", {\n            get: function () {\n                return this._availablePages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"typeName\", {\n            get: function () {\n                return Engageform_1.Type[this.type].toLowerCase();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"hasForms\", {\n            /**\n             * @public\n             * @description\n             * Returns boolean information about the presence of form-type in the current engageform.\n             *\n             * @returns {boolean} Are there any form-type questions?\n             */\n            get: function () {\n                return this._hasForms;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @public\n         * @description\n         * Checks if the current engageform is of provided type. Takes Types enum as an argument.\n         *\n         * @param {Type} type Engageform type from the Type enum.\n         * @returns {boolean} Is it?\n         */\n        Engageform.prototype.isType = function (type) {\n            return this.type === type;\n        };\n        Engageform.prototype.initPages = function () {\n            var _this = this;\n            return this.getPagesById(this._engageformId).then(function (pages) {\n                _this.buildPages(pages);\n                return _this;\n            });\n        };\n        Engageform.prototype.initPage = function (page) {\n            // ..Abstract for liveEvent\n        };\n        Engageform.prototype.setCurrent = function (pageId) {\n            this.current = this._pages[pageId];\n        };\n        Engageform.prototype.setCurrentEndPage = function () {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformFinishUrl;\n            url = url.replace(':engageformId', this._engageformId);\n            if (Bootstrap.mode !== Engageform_1.Mode.Default) {\n                url += '?preview';\n            }\n            return Bootstrap.$http.post(url, {\n                userIdent: Bootstrap.user.sessionId,\n                globalUserIdent: Bootstrap.user.id\n            }).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    Bootstrap.localStorage.clearAll();\n                    Bootstrap.user.id = res.data.globalUserIdent;\n                    return res.data;\n                }\n                return this.$q.reject(res);\n            });\n        };\n        Engageform.getById = function (id) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformUrl;\n            url = url.replace(':engageformId', id);\n            if (Bootstrap.mode !== Engageform_1.Mode.Default) {\n                url += '?preview';\n            }\n            return Bootstrap.$http.get(url).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    return res.data;\n                }\n                return Bootstrap.$q.reject(res);\n            });\n        };\n        Engageform.prototype.cleanPages = function () {\n            this._availablePages.length = 0;\n            this._pages = {};\n        };\n        Engageform.prototype.buildPages = function (pages) {\n            var _this = this;\n            pages.map(function (page) {\n                switch (page.type) {\n                    case 'multiChoice':\n                        _this._availablePages.push(page._id);\n                        _this._pages[page._id] = new Page.MultiChoice(_this, page);\n                        break;\n                    case 'pictureChoice':\n                        _this._availablePages.push(page._id);\n                        _this._pages[page._id] = new Page.PictureChoice(_this, page);\n                        break;\n                    case 'rateIt':\n                        _this._availablePages.push(page._id);\n                        _this._pages[page._id] = new Page.Rateit(_this, page);\n                        break;\n                    case 'forms':\n                        // Store information about this engageform having a form-type question.\n                        _this._hasForms = true;\n                        _this._availablePages.push(page._id);\n                        _this._pages[page._id] = new Page.Form(_this, page);\n                        break;\n                    case 'startPage':\n                        _this._startPages.push(page._id);\n                        _this._pages[page._id] = new Page.StartPage(_this, page);\n                        break;\n                    case 'endPage':\n                        _this._endPages.push(page._id);\n                        _this._pages[page._id] = new Page.EndPage(_this, page, _this.settings);\n                        break;\n                    // EngageNow exclusive page types\n                    case 'buzzer':\n                        _this._availablePages.push(page._id);\n                        _this._pages[page._id] = new Page.Buzzer(_this, page);\n                        break;\n                    case 'poster':\n                        _this._availablePages.push(page._id);\n                        _this._pages[page._id] = new Page.Poster(_this, page);\n                        break;\n                }\n            });\n        };\n        Engageform.prototype.getPagesById = function (engageformId) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformPagesUrl;\n            url = url.replace(':engageformId', engageformId);\n            if (Bootstrap.mode !== Engageform_1.Mode.Default) {\n                url += '?preview';\n            }\n            return Bootstrap.$http.get(url).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    return res.data;\n                }\n                this.$q.reject(res);\n            });\n        };\n        return Engageform;\n    })();\n    Engageform_1.Engageform = Engageform;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"inavigation.ts\" />\nvar Navigation;\n(function (Navigation_1) {\n    var Navigation = (function () {\n        function Navigation(engageform) {\n            this.enabled = false;\n            this.position = 0;\n            this.size = 0;\n            this.hasStart = false;\n            this.enabledStart = true;\n            this.hasPrev = false;\n            this.enabledPrev = true;\n            this.hasNext = false;\n            this.enabledNext = true;\n            this.hasFinish = false;\n            this.enabledFinish = true;\n            this.distance = 0;\n            this.animate = 'swipeNext';\n            this.hasStartPages = false;\n            this.hasEndPages = false;\n            this.next = this.pick;\n            this.finish = this.pick;\n            this._engageform = engageform;\n            this.size = engageform.availablePages.length;\n            this.hasEndPages = Boolean(this._engageform.endPages.length);\n            if (this._engageform.startPages.length) {\n                this.hasStart = true;\n                this.hasStartPages = true;\n                this._engageform.setCurrent(this._engageform.startPages[0]);\n            }\n            else {\n                this.enabled = true;\n                this.move(null);\n                this.hasPrev = false;\n            }\n        }\n        Navigation.prototype.updateDistance = function () {\n            return this.distance = this.position / this.size;\n        };\n        Navigation.prototype.start = function ($event) {\n            this.disableDefaultAction($event);\n            this.enabled = true;\n            this.hasStart = false;\n            this.move(null);\n            this.hasPrev = true;\n        };\n        Navigation.prototype.prev = function ($event) {\n            this.disableDefaultAction($event);\n            this.animate = 'swipePrev';\n            if (this._engageform.current) {\n                this._engageform.message = '';\n            }\n            this.position--;\n            this.updateDistance();\n            this.hasNext = true;\n            this.hasFinish = false;\n            if (this.position === 0) {\n                this._engageform.setCurrent(this._engageform.startPages[0]);\n                this.hasPrev = false;\n            }\n            else {\n                this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n                this.hasPrev = this.position === 1 ? this.hasStartPages : true;\n            }\n        };\n        Navigation.prototype.pick = function ($event, vcase, opts) {\n            var _this = this;\n            this.disableDefaultAction($event);\n            this.animate = 'swipeNext';\n            switch (Bootstrap.mode) {\n                default:\n                    this._engageform.current.send(vcase).then(function () {\n                        _this._engageform.message = '';\n                        if (_this._engageform.current) {\n                            switch (Bootstrap.mode) {\n                                case Engageform.Mode.Default:\n                                case Engageform.Mode.Preview:\n                                    if (!_this._engageform.current.filled && _this._engageform.current.settings.requiredAnswer) {\n                                        _this._engageform.message = 'Answer is required to proceed to next question';\n                                        if (opts && opts.hasOwnProperty('quiet') && opts.quiet) {\n                                            _this._engageform.message = '';\n                                        }\n                                        return;\n                                    }\n                                    break;\n                            }\n                        }\n                        if (vcase) {\n                            Bootstrap.$timeout(function () {\n                                _this.move(vcase);\n                            }, _this._engageform.current.settings.showResults ? 500 : 200);\n                        }\n                        else {\n                            _this.move(vcase);\n                        }\n                    }).catch(function (errorMessage) {\n                        _this._engageform.message = errorMessage;\n                        if (opts && opts.hasOwnProperty('quiet') && opts.quiet) {\n                            _this._engageform.message = '';\n                        }\n                    });\n            }\n        };\n        Navigation.prototype.move = function (vcase) {\n            var _this = this;\n            this.position++;\n            if (this._engageform.availablePages.length >= this.position) {\n                this.updateDistance();\n                this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n                this.hasPrev = true;\n                this.hasNext = false;\n                this.hasFinish = false;\n                if (this._engageform.availablePages.length > this.position) {\n                    this.hasNext = true;\n                }\n                else if (this._engageform.availablePages.length === this.position) {\n                    // Finisher is not available when the engageform is of a type \"poll\" and doesn't have any form-type question.\n                    this.hasFinish = !(this._engageform.isType(Engageform.Type.Poll) && !this._engageform.hasForms);\n                }\n            }\n            else {\n                this.position = this._engageform.availablePages.length;\n                if (!vcase) {\n                    this._engageform.setCurrentEndPage().then(function () {\n                        _this.enabled = false;\n                        _this.hasPrev = false;\n                        _this.hasNext = false;\n                        _this.hasFinish = false;\n                    }).catch(function (err) {\n                        if (err.data.msg) {\n                            _this._engageform.message = err.data.msg;\n                        }\n                    });\n                }\n            }\n        };\n        Navigation.prototype.disableDefaultAction = function ($event) {\n            if ($event) {\n                $event.stopPropagation();\n                $event.preventDefault();\n            }\n        };\n        return Navigation;\n    })();\n    Navigation_1.Navigation = Navigation;\n})(Navigation || (Navigation = {}));\n\n/// <reference path=\"ipage.ts\" />\n/// <reference path=\"ipages.ts\" />\n/// <reference path=\"ipagesent.ts\" />\nvar Page;\n(function (Page_1) {\n    var Page = (function () {\n        function Page(engageform, data) {\n            this.title = '';\n            this.description = '';\n            this.media = '';\n            this.cases = [];\n            this._pageId = data._id;\n            this._engageform = engageform;\n            this.settings = new Page_1.Settings(data);\n            this.title = data.text || '';\n            if (this.settings.showDescription) {\n                this.description = data.description || '';\n            }\n            if (this.settings.showMainMedia) {\n                this.media = Util.Cloudinary.getInstance().prepareImageUrl(data.imageFile, 680, data.imageData);\n            }\n        }\n        Object.defineProperty(Page.prototype, \"id\", {\n            get: function () {\n                return this._pageId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"engageform\", {\n            get: function () {\n                return this._engageform;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"Type\", {\n            get: function () {\n                return Page_1.Type;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"CaseType\", {\n            get: function () {\n                return Page_1.CaseType;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Page.prototype.send = function (vcase) {\n            if (this._engageform.enabled === false) {\n                return Bootstrap.$q.reject('Engageform already ended.');\n            }\n            if (vcase) {\n                return vcase.send();\n            }\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve();\n            return deferred.promise;\n        };\n        Page.prototype.sent = function () {\n            var deferred = Bootstrap.$q.defer();\n            var sent = {};\n            switch (Bootstrap.mode) {\n                default:\n                    sent = (Bootstrap.localStorage.get('page.' + this.id) || {});\n                    break;\n            }\n            deferred.resolve(sent);\n            return deferred.promise;\n        };\n        Page.prototype.selectAnswer = function (data) {\n            // \"abstract\"\n        };\n        Page.prototype.updateAnswers = function (data) {\n            var _this = this;\n            if (this.id !== data.questionId) {\n                return;\n            }\n            Bootstrap.$timeout(function () {\n                _this.cases.map(function (vcase) {\n                    if (data[vcase.id]) {\n                        var loaded = vcase.load();\n                        loaded.results[vcase.id] = data[vcase.id];\n                        vcase.save(loaded);\n                        vcase.result = data[vcase.id] || 0;\n                    }\n                });\n            });\n        };\n        Page.prototype.getMediaUrl = function (imageData, imageFile) {\n            if (!imageFile) {\n                return '';\n            }\n            console.log(console);\n            return;\n            //\n            //if (imageFile.indexOf('http') === -1) {\n            //  imageFile = Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + imageFile;\n            //}\n            //\n            //return imageFile;\n        };\n        return Page;\n    })();\n    Page_1.Page = Page;\n})(Page || (Page = {}));\n\n/// <reference path=\"iuser.ts\" />\nvar User = (function () {\n    function User() {\n    }\n    Object.defineProperty(User.prototype, \"id\", {\n        get: function () {\n            if (!this._id) {\n                this._id = Bootstrap.localStorage.get('userIdent');\n            }\n            return this._id;\n        },\n        set: function (id) {\n            Bootstrap.localStorage.set('userIdent', id);\n            this._id = id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"sessionId\", {\n        get: function () {\n            if (!this._sessionId) {\n                this._sessionId = Bootstrap.localStorage.get('sessionIdent');\n            }\n            return this._sessionId;\n        },\n        set: function (sessionId) {\n            Bootstrap.localStorage.set('sessionIdent', sessionId);\n            this._sessionId = sessionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return User;\n})();\n\n/// <reference path=\"icloudinary.ts\" />\nvar Util;\n(function (Util) {\n    var Cloudinary = (function () {\n        function Cloudinary() {\n            if (Bootstrap.config.cloudinary) {\n                this._accountName = Bootstrap.config.cloudinary.accountName || 'test4screens';\n                this._uploadFolder = Bootstrap.config.cloudinary.uploadFolder || 'console';\n                this._domain = Bootstrap.config.cloudinary.domain || 'https://res.cloudinary.com';\n            }\n            Cloudinary._instance = this;\n        }\n        Cloudinary.getInstance = function () {\n            return Cloudinary._instance;\n        };\n        Cloudinary.prototype.prepareImageUrl = function (filepath, width, imageData) {\n            if (!filepath) {\n                return '';\n            }\n            var src = this._domain + '/' + this._accountName + '/image';\n            var baseWidth = 540;\n            if (filepath.indexOf('http') !== -1) {\n                src += '/fetch';\n            }\n            else {\n                src += '/upload';\n            }\n            if (imageData.containerHeight === width) {\n                baseWidth = 300;\n            }\n            var manipulation = [];\n            manipulation.push('w_' + Math.round(width * (imageData.width / 100 || 1)));\n            manipulation.push('f_auto');\n            manipulation.push('q_82');\n            manipulation.push('dpr_1.0');\n            src += '/' + manipulation.join(',');\n            var resize = [];\n            resize.push('w_' + width);\n            resize.push('h_' + Math.round(imageData.containerHeight * (width / baseWidth)));\n            resize.push('x_' + Math.round(-1 * width * imageData.left / 100));\n            resize.push('y_' + Math.round(-1 * width * imageData.containerHeight * imageData.top / (100 * baseWidth)));\n            resize.push('c_crop');\n            src += '/' + resize.join(',');\n            if (filepath.indexOf('http') === -1) {\n                src += '/' + this._uploadFolder;\n            }\n            return src + '/' + filepath;\n        };\n        return Cloudinary;\n    })();\n    Util.Cloudinary = Cloudinary;\n})(Util || (Util = {}));\n\nvar Util;\n(function (Util) {\n    var Events = (function () {\n        function Events() {\n            this.listeners = {};\n        }\n        Events.prototype.listen = function (name, callback) {\n            if (!this.listeners[name]) {\n                this.listeners[name] = [];\n            }\n            this.listeners[name].push(callback);\n        };\n        Events.prototype.trigger = function (name, data) {\n            if (data === void 0) { data = {}; }\n            if (this.listeners[name]) {\n                for (var i = 0; i < this.listeners[name].length; i += 1) {\n                    this.listeners[name][i](data);\n                }\n            }\n        };\n        return Events;\n    })();\n    Util.Events = Events;\n})(Util || (Util = {}));\n\n/// <reference path=\"api/api.ts\" />\n/// <reference path=\"engageform/engageform.ts\" />\n/// <reference path=\"navigation/navigation.ts\" />\n/// <reference path=\"page/page.ts\" />\n/// <reference path=\"user/user.ts\" />\n/// <reference path=\"util/cloudinary.ts\" />\n/// <reference path=\"util/events.ts\" />\nvar Bootstrap = (function () {\n    function Bootstrap($http, $q, $timeout, localStorage, ApiConfig) {\n        Bootstrap.$http = $http;\n        Bootstrap.$q = $q;\n        Bootstrap.$timeout = $timeout;\n        Bootstrap.localStorage = localStorage;\n        Bootstrap.config = ApiConfig;\n        Bootstrap.user = new User();\n        this._cloudinary = new Util.Cloudinary();\n        this._events = new Util.Events();\n    }\n    Object.defineProperty(Bootstrap.prototype, \"type\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.type;\n            }\n            return Engageform.Type.Undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"Type\", {\n        get: function () {\n            return Engageform.Type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"mode\", {\n        get: function () {\n            return Bootstrap.mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"Mode\", {\n        get: function () {\n            return Engageform.Mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"title\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.title;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"theme\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.theme;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"current\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.current;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"navigation\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.navigation;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"branding\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.branding;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"message\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.message;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"events\", {\n        get: function () {\n            if (this._events) {\n                return this._events;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bootstrap.prototype.init = function (opts) {\n        var _this = this;\n        if (!opts || !opts.id) {\n            return Bootstrap.$q.reject({\n                status: 'error',\n                error: {\n                    code: 406,\n                    message: 'The required id property does not exist.'\n                },\n                data: opts\n            });\n        }\n        switch (opts.mode) {\n            case 'preview':\n                Bootstrap.mode = Engageform.Mode.Preview;\n                break;\n            case 'summary':\n                Bootstrap.mode = Engageform.Mode.Summary;\n                break;\n            case 'result':\n                Bootstrap.mode = Engageform.Mode.Result;\n                break;\n            case 'default':\n            case '':\n            case undefined:\n                Bootstrap.mode = Engageform.Mode.Default;\n                break;\n            default:\n                return Bootstrap.$q.reject({\n                    status: 'error',\n                    error: {\n                        code: 406,\n                        message: 'Mode property not supported.'\n                    },\n                    data: opts\n                });\n        }\n        return Engageform.Engageform.getById(opts.id).then(function (engageformData) {\n            switch (engageformData.type) {\n                case 'outcome':\n                    _this._engageform = new Engageform.Outcome(engageformData);\n                    break;\n                case 'poll':\n                    _this._engageform = new Engageform.Poll(engageformData);\n                    break;\n                case 'score':\n                    _this._engageform = new Engageform.Score(engageformData);\n                    break;\n                case 'survey':\n                    _this._engageform = new Engageform.Survey(engageformData);\n                    break;\n                case 'live':\n                    _this._engageform = new Engageform.Live(engageformData);\n                    break;\n                default:\n                    return Bootstrap.$q.reject({\n                        status: 'error',\n                        error: {\n                            code: 406,\n                            message: 'Type property not supported.'\n                        },\n                        data: engageformData\n                    });\n            }\n            return _this._engageform.initPages();\n        }).then(function (engageform) {\n            engageform.navigation = new Navigation.Navigation(engageform);\n            return engageform;\n        });\n    };\n    Bootstrap.mode = Engageform.Mode.Undefined;\n    return Bootstrap;\n})();\nBootstrap.$inject = ['$http', '$q', '$timeout', 'localStorageService', 'ApiConfig'];\napp.service('Engageform', Bootstrap);\n\n/// <reference path=\"ibranding.ts\" />\nvar Branding;\n(function (Branding_1) {\n    var Branding = (function () {\n        function Branding(data) {\n            if (data === void 0) { data = {}; }\n            this._isCustomLogo = false;\n            // Marks the branding if it is a custom, ie. user defined at least one own value.\n            this._isCustom = false;\n            // Default branding values from settings.\n            this._defaultBranding = Bootstrap.config.backend.branding;\n            // If there's any branding data, it means that this is a custom branding.\n            if (data.text || data.link || data.imageUrl) {\n                this._isCustom = true;\n            }\n            if (data.imageUrl) {\n                this._isCustomLogo = true;\n            }\n            // Set the branding properties form the data object or from the default values.\n            this._text = data.text || this._defaultBranding.text;\n            this._link = data.link || this._defaultBranding.link;\n            // Image URL is a bit complicated.\n            var imgUrl = data.imageUrl || this._defaultBranding.imageUrl;\n            // The image's URL is a bit different if it is a default one, than when it is a custom.\n            if (imgUrl === this._defaultBranding.imageUrl) {\n                this._imageUrl = Bootstrap.config.backend.api + imgUrl;\n            }\n            else {\n                this._imageUrl = Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + imgUrl;\n            }\n        }\n        Object.defineProperty(Branding.prototype, \"isCustom\", {\n            get: function () {\n                return this._isCustom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"isCustomLogo\", {\n            get: function () {\n                return this._isCustomLogo;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"isDefault\", {\n            get: function () {\n                return !this._isCustom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"imageUrl\", {\n            get: function () {\n                return this._imageUrl;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"link\", {\n            get: function () {\n                return this._link;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"text\", {\n            get: function () {\n                return this._text;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Branding;\n    })();\n    Branding_1.Branding = Branding;\n})(Branding || (Branding = {}));\n\n/// <reference path=\"isettings.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Settings = (function () {\n        function Settings(data) {\n            this.allowAnswerChange = false;\n            if (data.settings) {\n                this.allowAnswerChange = !!data.settings.allowAnswerChange;\n                if (data.settings.share) {\n                    this.share = data.settings.share;\n                }\n            }\n        }\n        return Settings;\n    })();\n    Engageform.Settings = Settings;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"itheme.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Theme = (function () {\n        function Theme(data) {\n            this.answerBackgroundColor = '';\n            this.answerBorderColor = '';\n            this.answerColor = '';\n            this.backgroundBrightness = '';\n            this.backgroundColor = '';\n            this.backgroundImageBlur = '';\n            this.backgroundImageFile = '';\n            this.backgroundImagePosition = '';\n            this.buttonColor = '';\n            this.font = '';\n            this.questionColor = '';\n            this.customThemeCssFile = '';\n            if (data.theme) {\n                this.answerBackgroundColor = data.theme.answerBackgroundColor || '';\n                this.answerBorderColor = data.theme.answerBorderColor || '';\n                this.answerColor = data.theme.answerColor || '';\n                this.backgroundBrightness = data.theme.backgroundBrightness || '';\n                this.backgroundColor = data.theme.backgroundColor || '';\n                this.backgroundImageBlur = data.theme.backgroundImageBlur || '';\n                this.backgroundImageFile = data.theme.backgroundImageFile || '';\n                this.backgroundImagePosition = data.theme.backgroundImagePosition || '';\n                this.buttonColor = data.theme.buttonColor || '';\n                this.font = data.theme.font || '';\n                this.questionColor = data.theme.questionColor || '';\n                if (data.theme.customThemeCssFile) {\n                    this.customThemeCssFile = Bootstrap.config.backend.api + '/uploads/' + data.theme.customThemeCssFile;\n                }\n            }\n        }\n        return Theme;\n    })();\n    Engageform.Theme = Theme;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Outcome = (function (_super) {\n        __extends(Outcome, _super);\n        function Outcome() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Outcome;\n        }\n        Outcome.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                var hasEndPage = false;\n                _this.endPages.map(function (pageId) {\n                    var page = _this.pages[pageId];\n                    if (page.outcome === data.outcome) {\n                        hasEndPage = true;\n                        _this.setCurrent(pageId);\n                    }\n                });\n                if (!hasEndPage) {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Outcome;\n    })(Engageform.Engageform);\n    Engageform.Outcome = Outcome;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Poll = (function (_super) {\n        __extends(Poll, _super);\n        function Poll() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Poll;\n        }\n        Poll.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                if (_this.endPages.length) {\n                    _this.setCurrent(_this.endPages[0]);\n                }\n                else {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Poll;\n    })(Engageform.Engageform);\n    Engageform.Poll = Poll;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Score = (function (_super) {\n        __extends(Score, _super);\n        function Score() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Score;\n        }\n        Score.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                var score = Math.round(data.totalScore / data.maxScore * 100);\n                var hasEndPage = false;\n                _this.endPages.map(function (pageId) {\n                    var page = _this.pages[pageId];\n                    if (page.rangeMin <= score && page.rangeMax >= score) {\n                        hasEndPage = true;\n                        _this.pages[pageId].score = score;\n                        _this.setCurrent(pageId);\n                    }\n                });\n                if (!hasEndPage) {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Score;\n    })(Engageform.Engageform);\n    Engageform.Score = Score;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Survey = (function (_super) {\n        __extends(Survey, _super);\n        function Survey() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Survey;\n        }\n        Survey.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                if (_this.endPages.length) {\n                    _this.setCurrent(_this.endPages[0]);\n                }\n                else {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Survey;\n    })(Engageform.Engageform);\n    Engageform.Survey = Survey;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Live = (function (_super) {\n        __extends(Live, _super);\n        function Live() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Live;\n        }\n        Live.prototype.initPages = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve(this);\n            return deferred.promise;\n        };\n        ;\n        Live.prototype.initPage = function (page) {\n            // Clean old pages\n            this.cleanPages();\n            // Build new\n            this.buildPages([page]);\n            this.setCurrent(page._id);\n        };\n        Live.prototype.setCurrentEndPage = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve();\n            return deferred.promise;\n        };\n        return Live;\n    })(Engageform.Engageform);\n    Engageform.Live = Live;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"icase.ts\" />\nvar Page;\n(function (Page) {\n    var Case = (function () {\n        function Case(page, data) {\n            this.type = Page.CaseType.Undefined;\n            this._caseId = data._id;\n            this._page = page;\n        }\n        Object.defineProperty(Case.prototype, \"id\", {\n            get: function () {\n                return this._caseId;\n            },\n            set: function (caseId) {\n                this._caseId = caseId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Case.prototype, \"page\", {\n            get: function () {\n                return this._page;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Case.prototype.send = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve({});\n            return deferred.promise;\n        };\n        Case.prototype.makeSend = function (data) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.pageResponseUrl;\n            url = url.replace(':pageId', this.page.id);\n            if (Bootstrap.mode !== Engageform.Mode.Default) {\n                url += '?preview';\n            }\n            data.quizQuestionId = this.page.id;\n            data.userIdent = Bootstrap.user.sessionId;\n            return Bootstrap.$http.post(url, data).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    if (!data.userIdent) {\n                        Bootstrap.user.sessionId = res.data.userIdent;\n                    }\n                    return res.data;\n                }\n                return Bootstrap.$q.reject(res);\n            });\n        };\n        Case.prototype.load = function () {\n            return Bootstrap.localStorage.get('page.' + this.page.id) || {};\n        };\n        Case.prototype.save = function (data) {\n            Bootstrap.localStorage.set('page.' + this.page.id, data);\n        };\n        Case.prototype.validate = function () {\n            // \"abstract\"\n            return true;\n        };\n        // Buzzer need extra send, so we made this abstract\n        Case.prototype.trueBuzzerSend = function (BCS) {\n            // \"abstract\"\n        };\n        return Case;\n    })();\n    Page.Case = Case;\n})(Page || (Page = {}));\n\n/// <reference path=\"isettings.ts\" />\nvar Page;\n(function (Page) {\n    var Settings = (function () {\n        function Settings(data) {\n            this.showResults = false;\n            this.showCorrectAnswer = false;\n            this.showMainMedia = false;\n            this.showDescription = false;\n            this.requiredAnswer = false;\n            this.requiredAnswer = !!data.requiredAnswer;\n            if (data.settings) {\n                this.showResults = !!data.settings.showAnswers;\n                this.showCorrectAnswer = !!data.settings.showCorrectAnswer;\n                this.showMainMedia = !!data.settings.showMainMedia;\n                this.showDescription = !!data.settings.showDescription;\n            }\n        }\n        return Settings;\n    })();\n    Page.Settings = Settings;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var ImageCase = (function (_super) {\n        __extends(ImageCase, _super);\n        function ImageCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Image;\n            this.selected = false;\n            this.correct = false;\n            this.incorrect = false;\n            this.title = data.text;\n            this.media = Util.Cloudinary.getInstance().prepareImageUrl(data.imageFile, 300, data.imageData);\n        }\n        ImageCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject('Changing answer is not allowed');\n            }\n            return _super.prototype.makeSend.call(this, { selectedAnswerId: this.id }).then(function (res) {\n                var data = {};\n                if (res.selectedAnswerId) {\n                    data.selectedCaseId = res.selectedAnswerId;\n                }\n                if (res.correctAnswerId) {\n                    data.correctCaseId = res.correctAnswerId;\n                }\n                for (var caseId in res.stats) {\n                    if (res.stats.hasOwnProperty(caseId)) {\n                        data.results = data.results || {};\n                        if (/.{24}/.test(caseId)) {\n                            data.results[caseId] = res.stats[caseId];\n                        }\n                    }\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return ImageCase;\n    })(Page.Case);\n    Page.ImageCase = ImageCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var InputCase = (function (_super) {\n        __extends(InputCase, _super);\n        function InputCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Input;\n            this.title = data.label;\n            this.expectedValue = data.type;\n            this.value = '';\n        }\n        InputCase.prototype.send = function () {\n            var _this = this;\n            var data = {};\n            data.inputs = [];\n            var sent = this.load();\n            for (var sentId in sent) {\n                if (sent.hasOwnProperty(sentId)) {\n                    data.inputs.push({\n                        _id: sentId,\n                        value: sent[sentId]\n                    });\n                }\n            }\n            return _super.prototype.makeSend.call(this, data).then(function () {\n                return data;\n            }).catch(function (err) {\n                if (err.data.code === 406) {\n                    _this.save({});\n                    return Bootstrap.$q.reject('Incorrect inputs sent. Try again.');\n                }\n                return Bootstrap.$q.reject(err.data.message);\n            });\n        };\n        InputCase.prototype.validate = function () {\n            this.correct = false;\n            this.incorrect = false;\n            if (this.page.settings.requiredAnswer && !this.value) {\n                this.error = 'Answer is required';\n                this.incorrect = true;\n            }\n            else {\n                this.error = '';\n                this.correct = true;\n            }\n            if (this.correct) {\n                var sent = this.load();\n                sent[this.id] = this.value;\n                this.save(sent);\n                return true;\n            }\n            return false;\n        };\n        return InputCase;\n    })(Page.Case);\n    Page.InputCase = InputCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var IterationCase = (function (_super) {\n        __extends(IterationCase, _super);\n        function IterationCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Iteration;\n            this.selected = false;\n            this.ordinal = data.ordinal;\n            this.symbol = data.symbol;\n        }\n        IterationCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject('Changing answer is not allowed');\n            }\n            return _super.prototype.makeSend.call(this, { quizQuestionId: this.page.id, rateItValue: this.ordinal }).then(function (res) {\n                var data = {};\n                if (res.selectedValue) {\n                    data.selectedValue = res.selectedValue;\n                }\n                if (res.avgRateItValue) {\n                    data.result = +res.avgRateItValue;\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return IterationCase;\n    })(Page.Case);\n    Page.IterationCase = IterationCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var TextCase = (function (_super) {\n        __extends(TextCase, _super);\n        function TextCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Text;\n            this.selected = false;\n            this.correct = false;\n            this.incorrect = false;\n            this.title = data.text;\n        }\n        TextCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject('Changing answer is not allowed');\n            }\n            return _super.prototype.makeSend.call(this, { selectedAnswerId: this.id }).then(function (res) {\n                var data = {};\n                if (res.selectedAnswerId) {\n                    data.selectedCaseId = res.selectedAnswerId;\n                }\n                if (res.correctAnswerId) {\n                    data.correctCaseId = res.correctAnswerId;\n                }\n                for (var caseId in res.stats) {\n                    if (res.stats.hasOwnProperty(caseId)) {\n                        data.results = data.results || {};\n                        if (/.{24}/.test(caseId)) {\n                            data.results[caseId] = res.stats[caseId];\n                        }\n                    }\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return TextCase;\n    })(Page.Case);\n    Page.TextCase = TextCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var BuzzCase = (function (_super) {\n        __extends(BuzzCase, _super);\n        function BuzzCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Buzz;\n            this.page = page;\n        }\n        BuzzCase.prototype.send = function () {\n            // We dont really send buzzes here, just increase buttonClickSum here\n            this.page.clickBuzzer();\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve({});\n            return deferred.promise;\n        };\n        BuzzCase.prototype.trueBuzzerSend = function (BCS) {\n            console.log('[ Buzzer ] True send (' + BCS + ')');\n            return _super.prototype.makeSend.call(this, { quizQuestionId: this.page.id, buttonClickSum: BCS }).then(function (res) {\n                var data = {};\n                // IMO we don't need that since buzzer have fake answerId's\n                // super.save(data);\n                // this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return BuzzCase;\n    })(Page.Case);\n    Page.BuzzCase = BuzzCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var EndPage = (function (_super) {\n        __extends(EndPage, _super);\n        function EndPage(engageform, data, settings) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.EndPage;\n            this.isCoverPage = true;\n            this.socialData = {\n                title: settings.share.title,\n                description: settings.share.description,\n                imageUrl: settings.share.imageUrl,\n                link: settings.share.link\n            };\n            if (data.coverPage) {\n                this.button = data.coverPage.buttonText;\n                this.outcome = data.coverPage.outcome;\n                this.social = data.coverPage.showSocialShares;\n                this.exitLink = data.coverPage.exitLink;\n                this.link = data.coverPage.link;\n                if (data.coverPage.scoreRange) {\n                    this.rangeMax = data.coverPage.scoreRange.max;\n                    this.rangeMin = data.coverPage.scoreRange.min;\n                }\n            }\n        }\n        return EndPage;\n    })(Page.Page);\n    Page.EndPage = EndPage;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var Form = (function (_super) {\n        __extends(Form, _super);\n        function Form(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Form;\n            if (!data.forms) {\n                return;\n            }\n            data.forms.inputs.map(function (input) {\n                _this.cases.push(new Page.InputCase(_this, input));\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        Form.prototype.send = function (vcase) {\n            var deferred = Bootstrap.$q.defer();\n            var validated = true;\n            this.cases.map(function (input) {\n                if (!input.validate()) {\n                    validated = false;\n                }\n            });\n            if (validated) {\n                this.filled = true;\n                deferred.resolve(this.cases[0].send());\n            }\n            else {\n                this.filled = false;\n                deferred.resolve({});\n            }\n            return deferred.promise;\n        };\n        Form.prototype.selectAnswer = function (sent) {\n            this.cases.map(function (vcase) {\n                vcase.value = sent[vcase.id] || '';\n            });\n        };\n        return Form;\n    })(Page.Page);\n    Page.Form = Form;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var MultiChoice = (function (_super) {\n        __extends(MultiChoice, _super);\n        function MultiChoice(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.MultiChoice;\n            if (!data.answers) {\n                return;\n            }\n            data.answers.map(function (answer) {\n                _this.cases.push(new Page.TextCase(_this, answer));\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        MultiChoice.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            this.cases.map(function (vcase) {\n                vcase.selected = false;\n                vcase.correct = false;\n                vcase.incorrect = false;\n                if (vcase.id === sent.selectedCaseId) {\n                    _this.filled = true;\n                    vcase.selected = true;\n                }\n                if (sent.results) {\n                    vcase.result = sent.results[vcase.id] || 0;\n                }\n                if (sent.correctCaseId && (vcase.id === sent.correctCaseId || vcase.id === sent.selectedCaseId)) {\n                    if (vcase.id === sent.correctCaseId) {\n                        vcase.correct = true;\n                    }\n                    else {\n                        vcase.incorrect = true;\n                    }\n                }\n            });\n        };\n        return MultiChoice;\n    })(Page.Page);\n    Page.MultiChoice = MultiChoice;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var PictureChoice = (function (_super) {\n        __extends(PictureChoice, _super);\n        function PictureChoice(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.PictureChoice;\n            if (!data.answers) {\n                return;\n            }\n            data.answers.map(function (answer) {\n                _this.cases.push(new Page.ImageCase(_this, answer));\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        PictureChoice.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            this.cases.map(function (vcase) {\n                vcase.selected = false;\n                vcase.correct = false;\n                vcase.incorrect = false;\n                if (vcase.id === sent.selectedCaseId) {\n                    _this.filled = true;\n                    vcase.selected = true;\n                }\n                if (sent.results) {\n                    vcase.result = sent.results[vcase.id] || 0;\n                }\n                if (sent.correctCaseId && (vcase.id === sent.correctCaseId || vcase.id === sent.selectedCaseId)) {\n                    if (vcase.id === sent.correctCaseId) {\n                        vcase.correct = true;\n                    }\n                    else {\n                        vcase.incorrect = true;\n                    }\n                }\n            });\n        };\n        return PictureChoice;\n    })(Page.Page);\n    Page.PictureChoice = PictureChoice;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var Rateit = (function (_super) {\n        __extends(Rateit, _super);\n        function Rateit(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Rateit;\n            this.selectedValue = 0;\n            this.labelMin = data.rateIt.minLabel;\n            this.labelMax = data.rateIt.maxLabel;\n            for (var i = 1; i <= data.rateIt.maxRateItValue; i++) {\n                this.cases.push(new Page.IterationCase(this, {\n                    ordinal: i,\n                    symbol: data.rateIt.rateType\n                }));\n            }\n            this.sent().then(function (sent) {\n                if (sent.selectedValue) {\n                    _this.selectedValue = sent.selectedValue;\n                    _this.selectAnswer(sent);\n                }\n            });\n        }\n        Rateit.prototype.selectAnswer = function (sent) {\n            if (sent.selectedValue) {\n                this.filled = true;\n                this.selectedValue = sent.selectedValue;\n            }\n            if (sent.result) {\n                this.result = sent.result;\n            }\n            this.cases.map(function (vcase) {\n                vcase.selected = sent.selectedValue >= vcase.ordinal;\n            });\n        };\n        return Rateit;\n    })(Page.Page);\n    Page.Rateit = Rateit;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var StartPage = (function (_super) {\n        __extends(StartPage, _super);\n        function StartPage(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.StartPage;\n            this.button = 'Let\\'s get started';\n            this.isCoverPage = true;\n            if (data.coverPage) {\n                this.button = data.coverPage.buttonText || this.button;\n            }\n        }\n        return StartPage;\n    })(Page.Page);\n    Page.StartPage = StartPage;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var Buzzer = (function (_super) {\n        __extends(Buzzer, _super);\n        function Buzzer(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Buzzer;\n            this.buttonClickSum = 0;\n            console.log('[ Buzzer ] Constructor');\n            // Make only one case with buzzed ammount\n            this.cases.push(new Page.BuzzCase(this, { _id: 0, buttonClickSum: this.buttonClickSum }));\n            // Clear previous timeout\n            if (this.buzzLoop.hasOwnProperty('timeout')) {\n                clearTimeout(this.buzzLoop['timeout']);\n            } // Nasty array reference couse of compiler error ?\n            // Start loop\n            this.buzzLoop(0);\n            // FIXME: Relpace when themes will be ready\n            // this.buzzerTheme = data.buzzerTheme;\n            this.buzzerTheme = Bootstrap.config.fakeBuzzerTheme || {};\n        }\n        // selectAnswer(sent) {\n        //   console.log('[ Buzzer ] Select answer');\n        // };\n        // send(sent) {\n        //   console.log('[ Buzzer ] Send');\n        // };\n        Buzzer.prototype.buzzLoop = function (iteration) {\n            var _this = this;\n            console.log('[ Buzzer ] Buzz');\n            if (this.buttonClickSum > 0) {\n                // True send - POST to server, we dont need then here since socket respond with global buttonClickSum\n                this.cases[0].trueBuzzerSend(this.buttonClickSum);\n            }\n            // if (this._engageform && this._engageform.current) {\n            //   console.log(this._engageform.current._pageId);\n            //   console.log(this._pageId);\n            // }\n            // Not a buzzer - stop cycle\n            if (iteration > 0 && this.engageform && this.engageform.current && this.engageform.current.id !== this.id) {\n                return;\n            }\n            // Loop\n            // Nasty array reference couse of compiler error ?\n            this.buzzLoop['timeout'] = setTimeout(function () { _this.buzzLoop(iteration + 1); }, 3000);\n            // Clear buttonClickSum\n            this.buttonClickSum = 0;\n        };\n        Buzzer.prototype.clickBuzzer = function () {\n            // Limit buzzes\n            if (this.buttonClickSum < 100) {\n                this.buttonClickSum++;\n            }\n            console.log('[ Buzzer ] Click! (' + this.buttonClickSum + ')');\n        };\n        return Buzzer;\n    })(Page.Page);\n    Page.Buzzer = Buzzer;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var Poster = (function (_super) {\n        __extends(Poster, _super);\n        function Poster(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Poster;\n        }\n        return Poster;\n    })(Page.Page);\n    Page.Poster = Poster;\n})(Page || (Page = {}));\n})(angular);\n//# sourceMappingURL=engageform.js.map","module Page {\n  export enum CaseType {\n    Undefined,\n    Image,\n    Input,\n    Iteration,\n    Text,\n    Buzz\n  }\n\n  export enum Type {\n    Undefined,\n    EndPage,\n    Form,\n    MultiChoice,\n    PictureChoice,\n    Rateit,\n    StartPage,\n    Buzzer,\n    Poster\n  }\n}\n","/// <reference path=\"iengageform.ts\" />\n\nmodule Engageform {\n  export class Engageform implements IEngageform {\n    private _engageformId: string;\n    private _pages: Page.IPages = {};\n\n    private _startPages: string[] = [];\n    private _endPages: string[] = [];\n    private _availablePages: string[] = [];\n    private _hasForms: boolean = false;\n\n    enabled: boolean = true;\n    type: Type = Type.Undefined;\n    title: string;\n    message: string;\n    settings: Settings;\n    theme: Theme;\n    branding: Branding.Branding;\n\n    current: Page.IPage;\n    navigation: Navigation.INavigation;\n\n    get pages(): Page.IPages {\n      return this._pages;\n    }\n\n    get startPages(): string[] {\n      return this._startPages;\n    }\n\n    get endPages(): string[] {\n      return this._endPages;\n    }\n\n    get availablePages(): string[] {\n      return this._availablePages;\n    }\n\n    get typeName(): string {\n      return Type[this.type].toLowerCase();\n    }\n\n    /**\n     * @public\n     * @description\n     * Returns boolean information about the presence of form-type in the current engageform.\n     *\n     * @returns {boolean} Are there any form-type questions?\n     */\n    get hasForms(): boolean {\n      return this._hasForms;\n    }\n\n    /**\n     * @public\n     * @description\n     * Checks if the current engageform is of provided type. Takes Types enum as an argument.\n     *\n     * @param {Type} type Engageform type from the Type enum.\n     * @returns {boolean} Is it?\n     */\n    isType(type: Type): boolean {\n      return this.type === type;\n    }\n\n    constructor(data: API.IQuiz) {\n      this._engageformId = data._id;\n\n      this.title = data.title;\n      this.settings = new Settings(data);\n      this.theme = new Theme(data);\n      this.branding = new Branding.Branding(data.settings.branding);\n    }\n\n    initPages(): ng.IPromise<IEngageform> {\n      return this.getPagesById(this._engageformId).then((pages) => {\n        this.buildPages(pages);\n\n        return <IEngageform>this;\n      });\n    }\n\n    initPage(page: API.IQuiz) {\n      // ..Abstract for liveEvent\n    }\n\n    setCurrent(pageId: string) {\n      this.current = <Page.IPage>this._pages[pageId];\n    }\n\n    setCurrentEndPage(): ng.IPromise<API.IQuizFinish> {\n      var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformFinishUrl;\n          url = url.replace(':engageformId', this._engageformId);\n\n      if (Bootstrap.mode !== Mode.Default) {\n        url += '?preview';\n      }\n\n      return Bootstrap.$http.post(url, {\n        userIdent: Bootstrap.user.sessionId,\n        globalUserIdent: Bootstrap.user.id\n      }).then(function (res: API.IQuizFinishResponse) {\n        if ([200, 304].indexOf(res.status) !== -1) {\n          Bootstrap.localStorage.clearAll();\n          Bootstrap.user.id = res.data.globalUserIdent;\n          return res.data;\n        }\n\n        return this.$q.reject(res);\n      });\n    }\n\n    static getById(id: string): ng.IPromise<API.IQuiz> {\n      var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformUrl;\n      url = url.replace(':engageformId', id);\n\n      if (Bootstrap.mode !== Mode.Default) {\n        url += '?preview';\n      }\n\n      return Bootstrap.$http.get(url).then((res: API.IQuizResponse) => {\n        if ([200, 304].indexOf(res.status) !== -1) {\n          return res.data;\n        }\n\n        return Bootstrap.$q.reject(res);\n      });\n    }\n\n    cleanPages(): void {\n      this._availablePages.length = 0;\n      this._pages = {};\n    }\n\n    buildPages(pages): void {\n      pages.map((page) => {\n        switch (page.type) {\n          case 'multiChoice':\n            this._availablePages.push(page._id);\n            this._pages[page._id] = new Page.MultiChoice(<IEngageform>this, page);\n            break;\n          case 'pictureChoice':\n            this._availablePages.push(page._id);\n            this._pages[page._id] = new Page.PictureChoice(<IEngageform>this, page);\n            break;\n          case 'rateIt':\n            this._availablePages.push(page._id);\n            this._pages[page._id] = new Page.Rateit(<IEngageform>this, page);\n            break;\n          case 'forms':\n            // Store information about this engageform having a form-type question.\n            this._hasForms = true;\n\n            this._availablePages.push(page._id);\n            this._pages[page._id] = new Page.Form(<IEngageform>this, page);\n            break;\n          case 'startPage':\n            this._startPages.push(page._id);\n            this._pages[page._id] = new Page.StartPage(<IEngageform>this, page);\n            break;\n          case 'endPage':\n            this._endPages.push(page._id);\n            this._pages[page._id] = new Page.EndPage(<IEngageform>this, page, this.settings);\n            break;\n\n          // EngageNow exclusive page types\n          case 'buzzer':\n            this._availablePages.push(page._id);\n            this._pages[page._id] = new Page.Buzzer(<IEngageform>this, page);\n            break;\n          case 'poster':\n            this._availablePages.push(page._id);\n            this._pages[page._id] = new Page.Poster(<IEngageform>this, page);\n            break;\n        }\n      });\n    }\n\n    private getPagesById(engageformId: string): ng.IPromise<API.IQuizQuestion[]> {\n      var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformPagesUrl;\n          url = url.replace(':engageformId', engageformId);\n\n      if (Bootstrap.mode !== Mode.Default) {\n        url += '?preview';\n      }\n      return Bootstrap.$http.get(url).then(function (res) {\n        if ([200, 304].indexOf(res.status) !== -1) {\n          return res.data;\n        }\n\n        this.$q.reject(res);\n      });\n    }\n  }\n}\n","/// <reference path=\"../typings/tsd.d.ts\" />\n\nvar app = angular.module('4screens.engageform', [\n  'LocalStorageModule'\n]);\n","/// <reference path=\"inavigation.ts\" />\n\nmodule Navigation {\n  export class Navigation implements INavigation {\n    private _engageform: Engageform.IEngageform;\n\n    enabled: boolean = false;\n    position: number = 0;\n    size: number = 0;\n    hasStart: boolean = false;\n    enabledStart: boolean = true;\n    hasPrev: boolean = false;\n    enabledPrev: boolean = true;\n    hasNext: boolean = false;\n    enabledNext: boolean = true;\n    hasFinish: boolean = false;\n    enabledFinish: boolean = true;\n    distance: number = 0;\n    animate: string = 'swipeNext';\n\n    hasStartPages: boolean = false;\n    hasEndPages: boolean = false;\n\n    constructor(engageform: Engageform.IEngageform) {\n      this._engageform = engageform;\n      this.size = engageform.availablePages.length;\n\n      this.hasEndPages = Boolean(this._engageform.endPages.length);\n\n      if (this._engageform.startPages.length) {\n        this.hasStart = true;\n        this.hasStartPages = true;\n        this._engageform.setCurrent(this._engageform.startPages[0]);\n      } else {\n        this.enabled = true;\n        this.move(null);\n        this.hasPrev = false;\n      }\n    }\n\n    private updateDistance(): number {\n      return this.distance = this.position / this.size;\n    }\n\n    start($event): void {\n      this.disableDefaultAction($event);\n\n      this.enabled = true;\n      this.hasStart = false;\n      this.move(null);\n      this.hasPrev = true;\n    }\n\n    prev($event): void {\n      this.disableDefaultAction($event);\n      this.animate = 'swipePrev';\n\n      if (this._engageform.current) {\n        this._engageform.message = '';\n      }\n\n      this.position--;\n      this.updateDistance();\n\n      this.hasNext = true;\n      this.hasFinish = false;\n\n      if (this.position === 0) {\n        this._engageform.setCurrent(this._engageform.startPages[0]);\n        this.hasPrev = false;\n      } else {\n        this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n        this.hasPrev = this.position === 1 ? this.hasStartPages : true;\n      }\n    }\n\n    pick($event, vcase: Page.ICase, opts?): void {\n      this.disableDefaultAction($event);\n      this.animate = 'swipeNext';\n\n      switch (Bootstrap.mode) {\n        default:\n          this._engageform.current.send(vcase).then(() => {\n            this._engageform.message = '';\n            if (this._engageform.current) {\n              switch (Bootstrap.mode) {\n                case Engageform.Mode.Default:\n                case Engageform.Mode.Preview:\n                  if (!this._engageform.current.filled && this._engageform.current.settings.requiredAnswer) {\n                    this._engageform.message = 'Answer is required to proceed to next question';\n                    if (opts && opts.hasOwnProperty('quiet') && opts.quiet) {\n                      this._engageform.message = '';\n                    }\n                    return;\n                  }\n                  break;\n              }\n            }\n\n            if (vcase) {\n              Bootstrap.$timeout(() => {\n                this.move(vcase);\n              }, this._engageform.current.settings.showResults ? 500 : 200);\n            } else {\n              this.move(vcase);\n            }\n\n          }).catch(errorMessage => {\n            this._engageform.message = errorMessage;\n            if (opts && opts.hasOwnProperty('quiet') && opts.quiet) {\n              this._engageform.message = '';\n            }\n          });\n      }\n    }\n    next = this.pick;\n    finish = this.pick;\n\n    private move(vcase: Page.ICase): void {\n      this.position++;\n      if (this._engageform.availablePages.length >= this.position) {\n        this.updateDistance();\n        this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n\n        this.hasPrev = true;\n        this.hasNext = false;\n        this.hasFinish = false;\n\n        if (this._engageform.availablePages.length > this.position) {\n          this.hasNext = true;\n        } else if (this._engageform.availablePages.length === this.position) {\n          // Finisher is not available when the engageform is of a type \"poll\" and doesn't have any form-type question.\n          this.hasFinish = !(this._engageform.isType(Engageform.Type.Poll) && !this._engageform.hasForms);\n        }\n\n      } else {\n        this.position = this._engageform.availablePages.length;\n        if (!vcase) {\n          this._engageform.setCurrentEndPage().then(() => {\n            this.enabled = false;\n            this.hasPrev = false;\n            this.hasNext = false;\n            this.hasFinish = false;\n          }).catch((err) => {\n            if (err.data.msg) {\n              this._engageform.message = err.data.msg;\n            }\n          });\n        }\n      }\n    }\n\n    private disableDefaultAction($event) {\n      if ($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n      }\n    }\n  }\n}\n","/// <reference path=\"ipage.ts\" />\n/// <reference path=\"ipages.ts\" />\n/// <reference path=\"ipagesent.ts\" />\n\nmodule Page {\n  export class Page implements IPage {\n    private _pageId: string;\n    private _engageform: Engageform.IEngageform;\n\n    type: Type;\n    title: string = '';\n    description: string = '';\n    media: string = '';\n    filled: boolean;\n    settings: ISetting;\n    cases: ICase[] = [];\n\n    get id(): string {\n      return this._pageId;\n    }\n\n    get engageform(): Engageform.IEngageform {\n      return this._engageform;\n    }\n\n    get Type() {\n      return Type;\n    }\n\n    get CaseType() {\n      return CaseType;\n    }\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion) {\n      this._pageId = data._id;\n      this._engageform = engageform;\n\n      this.settings = <ISetting>new Settings(data);\n      this.title = data.text || '';\n\n      if (this.settings.showDescription) {\n        this.description = data.description || '';\n      }\n      if (this.settings.showMainMedia) {\n        this.media = Util.Cloudinary.getInstance().prepareImageUrl(\n          data.imageFile,\n          680,\n          data.imageData\n        );\n      }\n    }\n\n    send(vcase: ICase): ng.IPromise<IPageSent> {\n      if (this._engageform.enabled === false) {\n        return Bootstrap.$q.reject('Engageform already ended.');\n      }\n\n      if (vcase) {\n        return vcase.send();\n      }\n\n      var deferred = Bootstrap.$q.defer();\n      deferred.resolve();\n      return deferred.promise;\n    }\n\n    sent(): ng.IPromise<IPageSent> {\n      var deferred = Bootstrap.$q.defer();\n      var sent = <IPageSent>{};\n\n      switch (Bootstrap.mode) {\n        default:\n          sent = <IPageSent>(Bootstrap.localStorage.get('page.' + this.id) || {});\n          break;\n      }\n      deferred.resolve(sent);\n\n      return deferred.promise;\n    }\n\n    selectAnswer(data): void {\n      // \"abstract\"\n    }\n\n    updateAnswers(data): void {\n      if (this.id !== data.questionId) {\n        return;\n      }\n\n      Bootstrap.$timeout(() => {\n        this.cases.map((vcase: ICase) => {\n          if (data[vcase.id]) {\n            var loaded = vcase.load();\n            loaded.results[vcase.id] = data[vcase.id];\n            vcase.save(loaded);\n            vcase.result = data[vcase.id] || 0;\n          }\n        });\n      });\n    }\n\n    private getMediaUrl(imageData, imageFile): string {\n      if (!imageFile) {\n        return '';\n      }\n      console.log(console);\n\n      return;\n      //\n      //if (imageFile.indexOf('http') === -1) {\n      //  imageFile = Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + imageFile;\n      //}\n      //\n      //return imageFile;\n    }\n  }\n}\n","/// <reference path=\"icloudinary.ts\" />\n\nmodule Util {\n  export class Cloudinary implements ICloudinary {\n    private static _instance: Cloudinary;\n\n    private _accountName: string;\n    private _uploadFolder: string;\n    private _domain: string;\n\n    constructor() {\n      if (Bootstrap.config.cloudinary) {\n        this._accountName = Bootstrap.config.cloudinary.accountName || 'test4screens';\n        this._uploadFolder = Bootstrap.config.cloudinary.uploadFolder || 'console';\n        this._domain = Bootstrap.config.cloudinary.domain || 'https://res.cloudinary.com';\n      }\n\n      Cloudinary._instance = this;\n    }\n\n    public static getInstance(): Cloudinary {\n      return Cloudinary._instance;\n    }\n\n    public prepareImageUrl(filepath: string, width: number, imageData) {\n      if (!filepath) {\n        return '';\n      }\n\n      var src = this._domain + '/' + this._accountName + '/image';\n      var baseWidth = 540;\n\n      if (filepath.indexOf('http') !== -1) {\n        src += '/fetch';\n      } else {\n        src += '/upload';\n      }\n\n      if (imageData.containerHeight === width) {\n        baseWidth = 300;\n      }\n\n      var manipulation = [];\n      manipulation.push('w_' + Math.round(width * (imageData.width / 100 || 1)));\n      manipulation.push('f_auto');\n      manipulation.push('q_82');\n      manipulation.push('dpr_1.0');\n      src += '/' + manipulation.join(',');\n\n      var resize = [];\n      resize.push('w_' + width);\n      resize.push('h_' + Math.round(imageData.containerHeight * (width / baseWidth)));\n      resize.push('x_' + Math.round(-1 * width * imageData.left / 100));\n      resize.push('y_' + Math.round(-1 * width * imageData.containerHeight * imageData.top / (100 * baseWidth)));\n      resize.push('c_crop');\n      src += '/' + resize.join(',');\n\n      if (filepath.indexOf('http') === -1) {\n        src += '/' + this._uploadFolder;\n      }\n\n      return src + '/' + filepath;\n    }\n  }\n}\n","/// <reference path=\"iuser.ts\" />\n\nclass User implements IUser {\n  private _id: string;\n  private _sessionId: string;\n\n  get id(): string {\n    if (!this._id) {\n      this._id = <string>Bootstrap.localStorage.get('userIdent');\n    }\n    return this._id;\n  }\n\n  set id(id: string) {\n    Bootstrap.localStorage.set('userIdent', id);\n    this._id = id;\n  }\n\n  get sessionId(): string {\n    if (!this._sessionId) {\n      this._sessionId = <string>Bootstrap.localStorage.get('sessionIdent');\n    }\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    Bootstrap.localStorage.set('sessionIdent', sessionId);\n    this._sessionId = sessionId;\n  }\n}\n","module Util {\n  export interface IEvents {\n    listen(name: string, callback: (data?: Object) => void): void;\n    trigger(name: string, data: Object): void;\n  }\n\n  export interface IListenersDictionary {\n    [index: string]: IListener[];\n  }\n\n  export interface IListener {\n    (data?: Object): void;\n  }\n\n  export class Events implements IEvents {\n    private listeners: IListenersDictionary = {};\n\n    listen(name: string, callback: IListener): void {\n      if (!this.listeners[name]) {\n        this.listeners[name] = [];\n      }\n\n      this.listeners[name].push(callback);\n    }\n\n    trigger(name: string, data: Object = {}): void {\n      if (this.listeners[name]) {\n        for (var i = 0; i < this.listeners[name].length; i += 1) {\n          this.listeners[name][i](data);\n        }\n      }\n    }\n  }\n}\n","/// <reference path=\"api/api.ts\" />\n/// <reference path=\"engageform/engageform.ts\" />\n/// <reference path=\"navigation/navigation.ts\" />\n/// <reference path=\"page/page.ts\" />\n/// <reference path=\"user/user.ts\" />\n/// <reference path=\"util/cloudinary.ts\" />\n/// <reference path=\"util/events.ts\" />\n\nclass Bootstrap {\n  static $http: ng.IHttpService;\n  static $q: ng.IQService;\n  static $timeout: ng.ITimeoutService;\n  static localStorage: ng.local.storage.ILocalStorageService;\n  static user: User;\n  static config;\n  static mode = Engageform.Mode.Undefined;\n\n  private _engageform: Engageform.IEngageform;\n  private _cloudinary: Util.Cloudinary;\n  private _events: Util.Events;\n\n  constructor($http: ng.IHttpService, $q: ng.IQService, $timeout: ng.ITimeoutService,\n              localStorage: ng.local.storage.ILocalStorageService, ApiConfig) {\n    Bootstrap.$http = $http;\n    Bootstrap.$q = $q;\n    Bootstrap.$timeout = $timeout;\n    Bootstrap.localStorage = localStorage;\n    Bootstrap.config = ApiConfig;\n    Bootstrap.user = new User();\n\n    this._cloudinary = new Util.Cloudinary();\n    this._events = new Util.Events();\n  }\n\n  get type(): Engageform.Type {\n    if (this._engageform) {\n      return this._engageform.type;\n    }\n\n    return Engageform.Type.Undefined;\n  }\n\n  get Type() {\n    return Engageform.Type;\n  }\n\n  get mode(): Engageform.Mode {\n    return Bootstrap.mode;\n  }\n\n  get Mode() {\n    return Engageform.Mode;\n  }\n\n  get title(): string {\n    if (this._engageform) {\n      return this._engageform.title;\n    }\n  }\n\n  get theme(): Engageform.ITheme {\n    if (this._engageform) {\n      return this._engageform.theme;\n    }\n  }\n\n  get current(): Page.IPage {\n    if (this._engageform) {\n      return this._engageform.current;\n    }\n  }\n\n  get navigation(): Navigation.INavigation {\n    if (this._engageform) {\n      return this._engageform.navigation;\n    }\n  }\n\n  get branding(): Branding.IBranding {\n    if (this._engageform) {\n      return this._engageform.branding;\n    }\n  }\n\n  get message(): string {\n    if (this._engageform) {\n      return this._engageform.message;\n    }\n  }\n\n  get events(): Util.Events {\n    if (this._events) {\n      return this._events;\n    }\n  }\n\n  init(opts: API.IEmbed): ng.IPromise<Engageform.IEngageform> {\n    if (!opts || !opts.id) {\n      return Bootstrap.$q.reject({\n        status: 'error',\n        error: {\n          code: 406,\n          message: 'The required id property does not exist.'\n        },\n        data: opts\n      });\n    }\n\n    switch (opts.mode) {\n      case 'preview':\n        Bootstrap.mode = Engageform.Mode.Preview;\n        break;\n      case 'summary':\n        Bootstrap.mode = Engageform.Mode.Summary;\n        break;\n      case 'result':\n        Bootstrap.mode = Engageform.Mode.Result;\n        break;\n      case 'default':\n      case '':\n      case undefined:\n        Bootstrap.mode = Engageform.Mode.Default;\n        break;\n      default:\n        return Bootstrap.$q.reject({\n          status: 'error',\n          error: {\n            code: 406,\n            message: 'Mode property not supported.'\n          },\n          data: opts\n        });\n    }\n\n    return Engageform.Engageform.getById(opts.id).then((engageformData) => {\n      switch (engageformData.type) {\n        case 'outcome':\n          this._engageform = new Engageform.Outcome(engageformData);\n          break;\n        case 'poll':\n          this._engageform = new Engageform.Poll(engageformData);\n          break;\n        case 'score':\n          this._engageform = new Engageform.Score(engageformData);\n          break;\n        case 'survey':\n          this._engageform = new Engageform.Survey(engageformData);\n          break;\n        case 'live':\n          this._engageform = new Engageform.Live(engageformData);\n          break;\n        default:\n          return Bootstrap.$q.reject({\n            status: 'error',\n            error: {\n              code: 406,\n              message: 'Type property not supported.'\n            },\n            data: engageformData\n          });\n      }\n      return this._engageform.initPages();\n    }).then(function(engageform) {\n      engageform.navigation = new Navigation.Navigation(<Engageform.IEngageform>engageform);\n      return engageform;\n    });\n  }\n}\n\nBootstrap.$inject = ['$http', '$q', '$timeout', 'localStorageService', 'ApiConfig'];\napp.service('Engageform', Bootstrap);\n","/// <reference path=\"ibranding.ts\" />\n\nmodule Branding {\n  export class Branding implements IBranding {\n    // Basic properties.\n    private _text: string;\n    private _link: string;\n    private _imageUrl: string;\n    private _isCustomLogo: boolean = false;\n\n    // Marks the branding if it is a custom, ie. user defined at least one own value.\n    private _isCustom: boolean = false;\n\n    // Default branding values from settings.\n    private _defaultBranding: IBrandingData = Bootstrap.config.backend.branding;\n\n    public get isCustom(): boolean {\n      return this._isCustom;\n    }\n    public get isCustomLogo(): boolean {\n      return this._isCustomLogo;\n    }\n    public get isDefault(): boolean {\n      return !this._isCustom;\n    }\n    public get imageUrl(): string {\n      return this._imageUrl;\n    }\n    public get link(): string {\n      return this._link;\n    }\n    public get text(): string {\n      return this._text;\n    }\n\n    constructor(data: IBrandingData = {}) {\n      // If there's any branding data, it means that this is a custom branding.\n      if (data.text || data.link || data.imageUrl) {\n        this._isCustom = true;\n      }\n\n      if (data.imageUrl) {\n        this._isCustomLogo = true;\n      }\n\n      // Set the branding properties form the data object or from the default values.\n      this._text = data.text || this._defaultBranding.text;\n      this._link = data.link || this._defaultBranding.link;\n\n      // Image URL is a bit complicated.\n      var imgUrl = data.imageUrl || this._defaultBranding.imageUrl;\n\n      // The image's URL is a bit different if it is a default one, than when it is a custom.\n      if (imgUrl === this._defaultBranding.imageUrl) {\n        this._imageUrl = Bootstrap.config.backend.api + imgUrl;\n      } else {\n        this._imageUrl = Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + imgUrl;\n      }\n    }\n  }\n}\n","/// <reference path=\"isettings.ts\" />\n\nmodule Engageform {\n  export class Settings implements ISetting {\n    allowAnswerChange: boolean = false;\n    share: {\n      title: string;\n      imageUrl: string;\n      link: string;\n      description: string;\n    };\n\n    constructor(data: API.IQuiz) {\n      if (data.settings) {\n        this.allowAnswerChange = !!data.settings.allowAnswerChange;\n\n        if (data.settings.share) {\n          this.share = data.settings.share;\n        }\n      }\n    }\n  }\n}\n","/// <reference path=\"itheme.ts\" />\n\nmodule Engageform {\n  export class Theme implements ITheme {\n    answerBackgroundColor: string = '';\n    answerBorderColor: string = '';\n    answerColor: string = '';\n    backgroundBrightness: string = '';\n    backgroundColor: string = '';\n    backgroundImageBlur: string = '';\n    backgroundImageFile: string = '';\n    backgroundImagePosition: string = '';\n    buttonColor: string = '';\n    font: string = '';\n    questionColor: string = '';\n    customThemeCssFile: string = '';\n\n    constructor(data: API.IQuiz) {\n      if (data.theme) {\n        this.answerBackgroundColor = data.theme.answerBackgroundColor || '';\n        this.answerBorderColor = data.theme.answerBorderColor || '';\n        this.answerColor = data.theme.answerColor || '';\n        this.backgroundBrightness = data.theme.backgroundBrightness || '';\n        this.backgroundColor = data.theme.backgroundColor || '';\n        this.backgroundImageBlur = data.theme.backgroundImageBlur || '';\n        this.backgroundImageFile = data.theme.backgroundImageFile || '';\n        this.backgroundImagePosition = data.theme.backgroundImagePosition || '';\n        this.buttonColor = data.theme.buttonColor || '';\n        this.font = data.theme.font || '';\n        this.questionColor = data.theme.questionColor || '';\n\n        if (data.theme.customThemeCssFile) {\n          this.customThemeCssFile = Bootstrap.config.backend.api + '/uploads/' + data.theme.customThemeCssFile;\n        }\n      }\n    }\n  }\n}\n","module Engageform {\n  export class Outcome extends Engageform {\n    type = Type.Outcome;\n\n    setCurrentEndPage(): ng.IPromise<API.IQuizFinish> {\n      return super.setCurrentEndPage().then((data) => {\n        var hasEndPage = false;\n\n        this.endPages.map((pageId) => {\n          var page: Page.IPage = <Page.IPage>this.pages[pageId];\n          if (page.outcome === data.outcome) {\n            hasEndPage = true;\n            this.setCurrent(pageId);\n          }\n        });\n\n        if (!hasEndPage) {\n          this.enabled = false;\n          this.message = 'Thank you!';\n        }\n\n        return data;\n      });\n    }\n  }\n}\n","module Engageform {\n  export class Poll extends Engageform {\n    type = Type.Poll;\n\n    setCurrentEndPage(): ng.IPromise<API.IQuizFinish> {\n      return super.setCurrentEndPage().then((data) => {\n        if (this.endPages.length) {\n          this.setCurrent(this.endPages[0]);\n        } else {\n          this.enabled = false;\n          this.message = 'Thank you!';\n        }\n\n        return data;\n      });\n    }\n  }\n}\n","module Engageform {\n  export class Score extends Engageform {\n    type = Type.Score;\n\n    setCurrentEndPage(): ng.IPromise<API.IQuizFinish> {\n      return super.setCurrentEndPage().then((data) => {\n        var score = Math.round(data.totalScore / data.maxScore * 100);\n        var hasEndPage = false;\n\n        this.endPages.map((pageId) => {\n          var page: Page.IPage = <Page.IPage>this.pages[pageId];\n          if (page.rangeMin <= score && page.rangeMax >= score) {\n            hasEndPage = true;\n            this.pages[pageId].score = score;\n            this.setCurrent(pageId);\n          }\n        });\n\n        if (!hasEndPage) {\n          this.enabled = false;\n          this.message = 'Thank you!';\n        }\n\n        return data;\n      });\n    }\n  }\n}\n","module Engageform {\n  export class Survey extends Engageform {\n    type = Type.Survey;\n\n    setCurrentEndPage(): ng.IPromise<API.IQuizFinish> {\n      return super.setCurrentEndPage().then((data) => {\n        if (this.endPages.length) {\n          this.setCurrent(this.endPages[0]);\n        } else {\n          this.enabled = false;\n          this.message = 'Thank you!';\n        }\n\n        return data;\n      });\n    }\n  }\n}\n","module Engageform {\n  export class Live extends Engageform {\n    type = Type.Live;\n\n    initPages() {\n      var deferred = Bootstrap.$q.defer();\n      deferred.resolve(this);\n      return deferred.promise;\n    };\n\n    initPage(page) {\n      // Clean old pages\n      this.cleanPages();\n\n      // Build new\n      this.buildPages([page]);\n      this.setCurrent(page._id);\n    }\n\n    setCurrentEndPage(): ng.IPromise<API.IQuizFinish> {\n      var deferred = Bootstrap.$q.defer();\n      deferred.resolve();\n      return deferred.promise;\n    }\n  }\n}\n","/// <reference path=\"icase.ts\" />\n\nmodule Page {\n  export class Case implements ICase {\n    private _caseId: string;\n    private _page: IPage;\n\n    type = CaseType.Undefined;\n\n    get id(): string {\n      return this._caseId;\n    }\n\n    set id(caseId: string) {\n      this._caseId = caseId;\n    }\n\n    get page(): IPage {\n      return this._page;\n    }\n\n    constructor(page: IPage, data) {\n      this._caseId = data._id;\n      this._page = page;\n    }\n\n    send(): ng.IPromise<IPageSent> {\n      var deferred = Bootstrap.$q.defer();\n      deferred.resolve(<IPageSent>{});\n      return deferred.promise;\n    }\n\n    makeSend(data: API.IQuizQuestionAnswer): ng.IPromise<API.IQuizQuestionAnswer> {\n      var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.pageResponseUrl;\n          url = url.replace(':pageId', this.page.id);\n\n      if (Bootstrap.mode !== Engageform.Mode.Default) {\n        url += '?preview';\n      }\n\n      data.quizQuestionId = this.page.id;\n      data.userIdent = Bootstrap.user.sessionId;\n\n      return Bootstrap.$http.post(url, data).then((res: API.IQuizQuestionAnswerResponse) => {\n        if ([200, 304].indexOf(res.status) !== -1) {\n          if (!data.userIdent) {\n            Bootstrap.user.sessionId = res.data.userIdent;\n          }\n          return res.data;\n        }\n\n        return Bootstrap.$q.reject(res);\n      });\n    }\n\n    load(): IPageSent {\n      return <IPageSent>Bootstrap.localStorage.get('page.' + this.page.id) || <IPageSent>{};\n    }\n\n    save(data: IPageSent): void {\n      Bootstrap.localStorage.set('page.' + this.page.id, data);\n    }\n\n    validate(): boolean {\n      // \"abstract\"\n      return true;\n    }\n\n    // Buzzer need extra send, so we made this abstract\n    trueBuzzerSend(BCS: number) {\n      // \"abstract\"\n    }\n  }\n}\n","/// <reference path=\"isettings.ts\" />\n\nmodule Page {\n  export class Settings implements ISetting {\n    showResults: boolean = false;\n    showCorrectAnswer: boolean = false;\n    showMainMedia: boolean = false;\n    showDescription: boolean = false;\n    requiredAnswer: boolean = false;\n\n    constructor(data: API.IQuizQuestion) {\n      this.requiredAnswer = !!data.requiredAnswer;\n\n      if (data.settings) {\n        this.showResults = !!data.settings.showAnswers;\n        this.showCorrectAnswer = !!data.settings.showCorrectAnswer;\n        this.showMainMedia = !!data.settings.showMainMedia;\n        this.showDescription = !!data.settings.showDescription;\n      }\n    }\n  }\n}\n","module Page {\n  export class ImageCase extends Case {\n    type = CaseType.Image;\n\n    result: number;\n    selected: boolean = false;\n    correct: boolean = false;\n    incorrect: boolean = false;\n\n    title: string;\n    media: string;\n\n    constructor(page: IPage, data) {\n      super(page, data);\n\n      this.title = data.text;\n      this.media = Util.Cloudinary.getInstance().prepareImageUrl(\n        data.imageFile,\n        300,\n        data.imageData\n      );\n    }\n\n    send() {\n      if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n        return Bootstrap.$q.reject('Changing answer is not allowed');\n      }\n\n      return super.makeSend({selectedAnswerId: this.id}).then((res) => {\n        var data = <IPageSent>{};\n\n        if (res.selectedAnswerId) {\n          data.selectedCaseId = res.selectedAnswerId;\n        }\n\n        if (res.correctAnswerId) {\n          data.correctCaseId = res.correctAnswerId;\n        }\n\n        for (var caseId in res.stats) {\n          if (res.stats.hasOwnProperty(caseId)) {\n            data.results = data.results || {};\n            if (/.{24}/.test(caseId)) {\n              data.results[caseId] = res.stats[caseId];\n            }\n          }\n        }\n\n        super.save(data);\n        this.page.selectAnswer(data);\n\n        return data;\n      });\n    }\n  }\n}\n","module Page {\n  export class InputCase extends Case {\n    type = CaseType.Input;\n\n    title: string;\n    correct: boolean;\n    incorrect: boolean;\n    expectedValue: string;\n    value: string;\n    error: string;\n\n    constructor(page: IPage, data) {\n      super(page, data);\n\n      this.title = data.label;\n      this.expectedValue = data.type;\n      this.value = '';\n    }\n\n    send() {\n      var data: IPageSent = <IPageSent>{};\n          data.inputs = [];\n      var sent = this.load();\n\n      for (var sentId in sent) {\n        if (sent.hasOwnProperty(sentId)) {\n          data.inputs.push({\n            _id: sentId,\n            value: sent[sentId]\n          });\n        }\n      }\n\n      return super.makeSend(data).then(() => {\n        return data;\n      }).catch((err) => {\n        if (err.data.code === 406) {\n          this.save(<IPageSent>{});\n          return Bootstrap.$q.reject('Incorrect inputs sent. Try again.');\n        }\n\n        return Bootstrap.$q.reject(err.data.message);\n      });\n    }\n\n    validate(): boolean {\n      this.correct = false;\n      this.incorrect = false;\n\n      if (this.page.settings.requiredAnswer && !this.value) {\n        this.error = 'Answer is required';\n        this.incorrect = true;\n      } else {\n        this.error = '';\n        this.correct = true;\n      }\n\n      if (this.correct) {\n        var sent = this.load();\n        sent[this.id] = this.value;\n        this.save(sent);\n\n        return true;\n      }\n\n      return false;\n    }\n  }\n}\n","module Page {\n  export class IterationCase extends Case {\n    type = CaseType.Iteration;\n\n    selected: boolean = false;\n\n    ordinal: number;\n    symbol: string;\n\n    constructor(page: IPage, data) {\n      super(page, data);\n\n      this.ordinal = data.ordinal;\n      this.symbol = data.symbol;\n    }\n\n    send() {\n      if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n        return Bootstrap.$q.reject('Changing answer is not allowed');\n      }\n\n      return super.makeSend({quizQuestionId: this.page.id, rateItValue: this.ordinal}).then((res) => {\n        var data: IPageSent = <IPageSent>{};\n\n        if (res.selectedValue) {\n          data.selectedValue = res.selectedValue;\n        }\n\n        if (res.avgRateItValue) {\n          data.result = +res.avgRateItValue;\n        }\n\n        super.save(data);\n        this.page.selectAnswer(data);\n\n        return data;\n      });\n    }\n  }\n}\n","module Page {\n  export class TextCase extends Case {\n    type = CaseType.Text;\n\n    result: number;\n    selected: boolean = false;\n    correct: boolean = false;\n    incorrect: boolean = false;\n\n    title: string;\n\n    constructor(page: IPage, data) {\n      super(page, data);\n\n      this.title = data.text;\n    }\n\n    send() {\n      if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n        return Bootstrap.$q.reject('Changing answer is not allowed');\n      }\n\n      return super.makeSend({selectedAnswerId: this.id}).then((res) => {\n        var data: IPageSent = <IPageSent>{};\n\n        if (res.selectedAnswerId) {\n          data.selectedCaseId = res.selectedAnswerId;\n        }\n\n        if (res.correctAnswerId) {\n          data.correctCaseId = res.correctAnswerId;\n        }\n\n        for (var caseId in res.stats) {\n          if (res.stats.hasOwnProperty(caseId)) {\n            data.results = data.results || {};\n            if (/.{24}/.test(caseId)) {\n              data.results[caseId] = res.stats[caseId];\n            }\n          }\n        }\n\n        super.save(data);\n        this.page.selectAnswer(data);\n\n        return data;\n      });\n    }\n  }\n}\n","module Page {\n  export class BuzzCase extends Case {\n    type = CaseType.Buzz;\n    page: IPage;\n\n    constructor(page: IPage, data) {\n      super(page, data);\n      this.page = page;\n    }\n\n    send(): ng.IPromise<IPageSent> {\n      // We dont really send buzzes here, just increase buttonClickSum here\n      this.page.clickBuzzer();\n      var deferred = Bootstrap.$q.defer();\n      deferred.resolve(<IPageSent>{});\n      return deferred.promise;\n    }\n\n    trueBuzzerSend(BCS: number): ng.IPromise<IPageSent> {\n      console.log('[ Buzzer ] True send (' + BCS + ')');\n\n      return super.makeSend({ quizQuestionId: this.page.id, buttonClickSum: BCS }).then((res) => {\n        var data: IPageSent = <IPageSent>{};\n\n        // IMO we don't need that since buzzer have fake answerId's\n        // super.save(data);\n        // this.page.selectAnswer(data);\n\n        return data;\n      });\n    }\n  }\n}\n","module Page {\n  export class EndPage extends Page {\n    type = Type.EndPage;\n\n    /* outcome */\n    button: string;\n    outcome: string;\n    social: boolean;\n    /* score */\n    score: number;\n    rangeMin: number;\n    rangeMax: number;\n    exitLink: boolean;\n    link: string;\n    socialData: ISocialData;\n\n    isCoverPage = true;\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion, settings: Engageform.ISetting) {\n      super(engageform, data);\n\n      this.socialData = <ISocialData>{\n        title: settings.share.title,\n        description: settings.share.description,\n        imageUrl: settings.share.imageUrl,\n        link: settings.share.link\n      };\n\n      if (data.coverPage) {\n        this.button = data.coverPage.buttonText;\n        this.outcome = data.coverPage.outcome;\n        this.social = data.coverPage.showSocialShares;\n        this.exitLink = data.coverPage.exitLink;\n        this.link = data.coverPage.link;\n\n        if (data.coverPage.scoreRange) {\n          this.rangeMax = data.coverPage.scoreRange.max;\n          this.rangeMin = data.coverPage.scoreRange.min;\n        }\n      }\n    }\n  }\n}\n","module Page {\n  export class Form extends Page {\n    type = Type.Form;\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion) {\n      super(engageform, data);\n\n      if (!data.forms) {\n        return;\n      }\n\n      data.forms.inputs.map((input) => {\n        this.cases.push(<ICase>new InputCase(<IPage>this, input));\n      });\n\n      if (this.cases.length) {\n        this.sent().then(sent => {\n          this.selectAnswer(sent);\n        });\n      }\n    }\n\n    send(vcase: ICase): ng.IPromise<IPageSent> {\n      var deferred = Bootstrap.$q.defer();\n      var validated = true;\n\n      this.cases.map((input) => {\n        if (!input.validate()) {\n          validated = false;\n        }\n      });\n\n      if (validated) {\n        this.filled = true;\n        deferred.resolve(this.cases[0].send());\n      } else {\n        this.filled = false;\n        deferred.resolve(<IPageSent>{});\n      }\n\n      return deferred.promise;\n    }\n\n    selectAnswer(sent) {\n      this.cases.map((vcase: ICase) => {\n        vcase.value = sent[vcase.id] || '';\n      });\n    }\n  }\n}\n","module Page {\n  export class MultiChoice extends Page {\n    type = Type.MultiChoice;\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion) {\n      super(engageform, data);\n\n      if (!data.answers) {\n        return;\n      }\n\n      data.answers.map((answer) => {\n        this.cases.push(<ICase>new TextCase(<IPage>this, answer));\n      });\n\n      if (this.cases.length) {\n        this.sent().then(sent => {\n          this.selectAnswer(sent);\n        });\n\n      }\n\n    }\n\n    selectAnswer(sent) {\n      this.cases.map((vcase: ICase) => {\n        vcase.selected = false;\n        vcase.correct = false;\n        vcase.incorrect = false;\n\n        if (vcase.id === sent.selectedCaseId) {\n          this.filled = true;\n          vcase.selected = true;\n        }\n\n        if (sent.results) {\n          vcase.result = sent.results[vcase.id] || 0;\n        }\n\n        if (sent.correctCaseId && (vcase.id === sent.correctCaseId || vcase.id === sent.selectedCaseId)) {\n          if (vcase.id === sent.correctCaseId) {\n            vcase.correct = true;\n          } else {\n            vcase.incorrect = true;\n          }\n        }\n      });\n    }\n\n  }\n}\n","module Page {\n  export class PictureChoice extends Page {\n    type = Type.PictureChoice;\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion) {\n      super(engageform, data);\n\n      if (!data.answers) {\n        return;\n      }\n\n      data.answers.map((answer) => {\n        this.cases.push(<ICase>new ImageCase(<IPage>this, answer));\n      });\n\n      if (this.cases.length) {\n        this.sent().then(sent => {\n          this.selectAnswer(sent);\n        });\n\n      }\n\n    }\n\n    selectAnswer(sent) {\n      this.cases.map((vcase: ICase) => {\n        vcase.selected = false;\n        vcase.correct = false;\n        vcase.incorrect = false;\n\n        if (vcase.id === sent.selectedCaseId) {\n          this.filled = true;\n          vcase.selected = true;\n        }\n\n        if (sent.results) {\n          vcase.result = sent.results[vcase.id] || 0;\n        }\n\n        if (sent.correctCaseId && (vcase.id === sent.correctCaseId || vcase.id === sent.selectedCaseId)) {\n          if (vcase.id === sent.correctCaseId) {\n            vcase.correct = true;\n          } else {\n            vcase.incorrect = true;\n          }\n        }\n      });\n    }\n  }\n}\n","module Page {\n  export class Rateit extends Page {\n    type = Type.Rateit;\n\n    result: number;\n    labelMin: string;\n    labelMax: string;\n\n    selectedValue: number = 0;\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion) {\n      super(engageform, data);\n\n      this.labelMin = data.rateIt.minLabel;\n      this.labelMax = data.rateIt.maxLabel;\n\n      for (var i = 1; i <= data.rateIt.maxRateItValue; i++) {\n        this.cases.push(<ICase>new IterationCase(<IPage>this, {\n          ordinal: i,\n          symbol: data.rateIt.rateType\n        }));\n      }\n\n      this.sent().then(sent => {\n        if (sent.selectedValue) {\n          this.selectedValue = sent.selectedValue;\n          this.selectAnswer(sent);\n        }\n      });\n    }\n\n    selectAnswer(sent) {\n      if (sent.selectedValue) {\n        this.filled = true;\n        this.selectedValue = sent.selectedValue;\n      }\n\n      if (sent.result) {\n        this.result = sent.result;\n      }\n\n      this.cases.map((vcase: ICase) => {\n        vcase.selected = sent.selectedValue >= vcase.ordinal;\n      });\n    }\n  }\n}\n","module Page {\n  export class StartPage extends Page {\n    type = Type.StartPage;\n\n    button: string = 'Let\\'s get started';\n\n    isCoverPage = true;\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion) {\n      super(engageform, data);\n\n      if (data.coverPage) {\n        this.button = data.coverPage.buttonText || this.button;\n      }\n    }\n  }\n}\n","module Page {\n  export class Buzzer extends Page {\n    type = Type.Buzzer;\n\n    buzzerTheme: {\n      imgIdleSrc: string;\n      imgPressedSrc: string;\n      audioSrc: string;\n    };\n\n    buttonClickSum: number = 0;\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion) {\n      super(engageform, data);\n      console.log('[ Buzzer ] Constructor');\n\n      // Make only one case with buzzed ammount\n      this.cases.push(<ICase>new BuzzCase(<IPage>this, { _id: 0, buttonClickSum: this.buttonClickSum }));\n\n      // Clear previous timeout\n      if (this.buzzLoop.hasOwnProperty('timeout')) {\n        clearTimeout(this.buzzLoop['timeout']);\n      } // Nasty array reference couse of compiler error ?\n\n      // Start loop\n      this.buzzLoop(0);\n\n      // FIXME: Relpace when themes will be ready\n      // this.buzzerTheme = data.buzzerTheme;\n      this.buzzerTheme = Bootstrap.config.fakeBuzzerTheme || {};\n    }\n\n    // selectAnswer(sent) {\n    //   console.log('[ Buzzer ] Select answer');\n    // };\n\n    // send(sent) {\n    //   console.log('[ Buzzer ] Send');\n    // };\n\n    private buzzLoop(iteration: number) {\n      console.log('[ Buzzer ] Buzz');\n      if (this.buttonClickSum > 0) {\n\n        // True send - POST to server, we dont need then here since socket respond with global buttonClickSum\n        this.cases[0].trueBuzzerSend(this.buttonClickSum);\n      }\n\n      // if (this._engageform && this._engageform.current) {\n      //   console.log(this._engageform.current._pageId);\n      //   console.log(this._pageId);\n      // }\n\n      // Not a buzzer - stop cycle\n      if (iteration > 0 && this.engageform && this.engageform.current && this.engageform.current.id !== this.id) {\n        return;\n      }\n\n      // Loop\n      // Nasty array reference couse of compiler error ?\n      this.buzzLoop['timeout'] = setTimeout(() => { this.buzzLoop(iteration + 1); }, 3000);\n\n      // Clear buttonClickSum\n      this.buttonClickSum = 0;\n    }\n\n    clickBuzzer() {\n      // Limit buzzes\n      if (this.buttonClickSum < 100) {\n        this.buttonClickSum++;\n      }\n\n      console.log('[ Buzzer ] Click! (' + this.buttonClickSum + ')');\n    }\n  }\n}\n","module Page {\n  export class Poster extends Page {\n    type = Type.Poster;\n\n    constructor(engageform: Engageform.IEngageform, data: API.IQuizQuestion) {\n      super(engageform, data);\n    }\n  }\n}\n"],"sourceRoot":"/source/"}