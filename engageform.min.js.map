{"version":3,"sources":["/source/header.ts","/source/engageform/enum.ts","engageform.js","/source/page/enum.ts","/source/navigation/navigation.ts","/source/app.ts","/source/meta/meta.ts","/source/page/page.ts","/source/util/event.ts","/source/user/user.ts","/source/engageform/engageform.ts","/source/bootstrap.ts","/source/branding/branding.ts","/source/engageform/settings.ts","/source/engageform/theme.ts","/source/engageform/tabs.ts","/source/engageform/type/outcome.ts","/source/engageform/type/poll.ts","/source/engageform/type/score.ts","/source/engageform/type/survey.ts","/source/engageform/type/live.ts","/source/page/case.ts","/source/page/settings.ts","/source/page/case/image.ts","/source/page/case/input.ts","/source/page/case/iteration.ts","/source/page/case/text.ts","/source/page/case/buzz.ts","/source/page/type/endpage.ts","/source/page/type/form.ts","/source/page/type/multichoice.ts","/source/page/type/picturechoice.ts","/source/page/type/rateit.ts","/source/page/type/startpage.ts","/source/page/type/buzzer.ts","/source/page/type/poster.ts","/source/page/type/summaryPage.ts"],"names":["angular","Engageform","Engageform.Type","Engageform.Mode","Mode","Page","Page.CaseType","Page.Type","Type","Navigation","app","module","Navigation.Navigation","Navigation.Navigation.constructor","Navigation.Navigation.updateDistance","Navigation.Navigation.start","Navigation.Navigation.stopPageChange","Navigation.Navigation.prev","Navigation.Navigation.pick","_this","Navigation.Navigation.move","this","Navigation.Navigation.disableDefaultAction","Navigation.Navigation.sendMessage","Bootstrap","Navigation_1","Meta","Meta.Meta","Meta.Meta.constructor","Meta_1","Page.Page","Page.Page.constructor","Object","defineProperty","get","Page.Page.id","enumerable","Page.Page.engageform","Page.Page.Type","Page.Page.CaseType","Page.Page.send","Page.Page.sent","Page.Page.refreshAnswer","Page.Page.selectAnswer","Page.Page.createCase","Page.Page.setResults","casesWithResults","imageData","Page.Page.updateAnswers","Page.Page.getStatsById","Page_1","Util","User","User.constructor","User.id","set","User.sessionId","Util.Event","Util.Event.constructor","Event","Util.Event.listen","Util.Event.trigger","data","_i","arguments","Engageform.Engageform","Engageform.Engageform.constructor","Engageform.Engageform.id","Engageform.Engageform.pages","Engageform.Engageform.startPages","Engageform.Engageform.endPages","Engageform.Engageform.availablePages","Engageform.Engageform.typeName","Engageform.Engageform.hasForms","Engageform.Engageform.isType","Engageform.Engageform.isNormalMode","Engageform.Engageform.isSummaryMode","Engageform.Engageform.isResultsMode","Engageform.Engageform.isPreviewMode","Engageform.Engageform.storePage","Engageform.Engageform.initPage","Engageform.Engageform.setCurrent","Engageform.Engageform.setCurrentEndPage","then","res","indexOf","status","localStorage","clearAll","user","id","globalUserIdent","Engageform.Engageform.cleanPages","Engageform.Engageform.buildPages","Engageform.Engageform.createPage","Engageform.Engageform.setSummary","results","Engageform.Engageform.setAnswers","Engageform.Engageform.setResultPage","settings","Engageform.Engageform.setUserResultPage","_","extend","Engageform.Engageform.getThemeType","Engageform.Engageform.colorToRgb","color","Engageform_1","Bootstrap.constructor","Bootstrap.type","Bootstrap.Type","Bootstrap.mode","Bootstrap.Mode","Bootstrap.title","Bootstrap.theme","Bootstrap.current","Bootstrap.navigation","Bootstrap.branding","Bootstrap.message","Bootstrap.meta","Bootstrap.event","Bootstrap.init","error","Bootstrap.getData","$http","url","Bootstrap.destroyInstances","$inject","service","Branding","Branding.Branding","Branding.Branding.constructor","Branding.Branding.isCustom","Branding.Branding.isCustomLogo","Branding.Branding.isDefault","Branding.Branding.imageUrl","Branding.Branding.link","Branding.Branding.text","Branding.Branding.enabled","Branding_1","Engageform.Settings","Engageform.Settings.constructor","Settings","Engageform.Theme","Engageform.Theme.constructor","Theme","Engageform.Theme.convertBackgroundImage","Engageform.Tabs","Engageform.Tabs.constructor","Tabs","__extends","d","b","__","constructor","p","hasOwnProperty","prototype","Engageform.Outcome","Engageform.Outcome.constructor","Outcome","Engageform.Outcome.setCurrentEndPage","Engageform.Poll","Engageform.Poll.constructor","Poll","Engageform.Poll.setCurrentEndPage","Engageform.Score","Engageform.Score.constructor","Score","Engageform.Score.setCurrentEndPage","Engageform.Survey","Engageform.Survey.constructor","Survey","Engageform.Survey.setCurrentEndPage","Engageform.Live","Engageform.Live.constructor","Live","Engageform.Live.initPages","Engageform.Live.initPage","Engageform.Live.setCurrentEndPage","Page.Case","Page.Case.constructor","Page.Case.id","Page.Case.page","Case","Page.Case.shouldShowIndicator","Page.Case.shouldShowResults","Page.Case.send","Page.Case.makeSend","Page.Case.load","Page.Case.save","Page.Case.validate","Page.Case.trueBuzzerSend","Page.Settings","Page.Settings.constructor","Page.ImageCase","Page.ImageCase.constructor","ImageCase","Page.ImageCase.send","Page.InputCase","Page.InputCase.constructor","InputCase","Page.InputCase.send","Page.InputCase.validate","Page.IterationCase","Page.IterationCase.constructor","IterationCase","Page.IterationCase.send","Page.TextCase","Page.TextCase.constructor","TextCase","Page.TextCase.send","Page.BuzzCase","Page.BuzzCase.constructor","BuzzCase","Page.BuzzCase.send","Page.BuzzCase.trueBuzzerSend","Page.EndPage","Page.EndPage.constructor","EndPage","Page.EndPage.personalizeShares","Page.EndPage.fbLink","Page.EndPage.twLink","Page.Form","Page.Form.constructor","Form","Page.Form.createCase","Page.Form.send","Page.Form.selectAnswer","sent","Page.Form.setResults","Page.MultiChoice","Page.MultiChoice.constructor","MultiChoice","Page.MultiChoice.createCase","Page.MultiChoice.refreshAnswer","question","Page.MultiChoice.selectAnswer","Page.PictureChoice","Page.PictureChoice.constructor","PictureChoice","Page.PictureChoice.createCase","Page.PictureChoice.refreshAnswer","Page.PictureChoice.selectAnswer","Page.Rateit","Page.Rateit.constructor","Rateit","Page.Rateit.shouldShowResults","Page.Rateit.createCase","Page.Rateit.selectAnswer","Page.Rateit.setResults","Page.StartPage","Page.StartPage.constructor","StartPage","Page.Buzzer","Page.Buzzer.constructor","Buzzer","Page.Buzzer.buzzLoop","Page.Buzzer.clickBuzzer","Page.Poster","Page.Poster.constructor","Poster","Page.SummaryPage","Page.SummaryPage.constructor","SummaryPage"],"mappings":"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","file":"engageform.min.js","sourcesContent":["/*!\n * 4screens-angular-engageform v0.2.59\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n",null,"(function(angular) {\n/*!\n * 4screens-angular-engageform v0.2.59\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n\nvar Engageform;\n(function (Engageform) {\n    (function (Type) {\n        Type[Type[\"Undefined\"] = 0] = \"Undefined\";\n        Type[Type[\"Live\"] = 1] = \"Live\";\n        Type[Type[\"Outcome\"] = 2] = \"Outcome\";\n        Type[Type[\"Poll\"] = 3] = \"Poll\";\n        Type[Type[\"Score\"] = 4] = \"Score\";\n        Type[Type[\"Survey\"] = 5] = \"Survey\";\n    })(Engageform.Type || (Engageform.Type = {}));\n    var Type = Engageform.Type;\n    (function (Mode) {\n        Mode[Mode[\"Undefined\"] = 0] = \"Undefined\";\n        Mode[Mode[\"Default\"] = 1] = \"Default\";\n        Mode[Mode[\"Preview\"] = 2] = \"Preview\";\n        Mode[Mode[\"Result\"] = 3] = \"Result\";\n        Mode[Mode[\"Summary\"] = 4] = \"Summary\";\n    })(Engageform.Mode || (Engageform.Mode = {}));\n    var Mode = Engageform.Mode;\n})(Engageform || (Engageform = {}));\n\nvar Page;\n(function (Page) {\n    (function (CaseType) {\n        CaseType[CaseType[\"Undefined\"] = 0] = \"Undefined\";\n        CaseType[CaseType[\"Image\"] = 1] = \"Image\";\n        CaseType[CaseType[\"Input\"] = 2] = \"Input\";\n        CaseType[CaseType[\"Iteration\"] = 3] = \"Iteration\";\n        CaseType[CaseType[\"Text\"] = 4] = \"Text\";\n        CaseType[CaseType[\"Buzz\"] = 5] = \"Buzz\";\n    })(Page.CaseType || (Page.CaseType = {}));\n    var CaseType = Page.CaseType;\n    (function (Type) {\n        Type[Type[\"Undefined\"] = 0] = \"Undefined\";\n        Type[Type[\"EndPage\"] = 1] = \"EndPage\";\n        Type[Type[\"Form\"] = 2] = \"Form\";\n        Type[Type[\"MultiChoice\"] = 3] = \"MultiChoice\";\n        Type[Type[\"PictureChoice\"] = 4] = \"PictureChoice\";\n        Type[Type[\"Rateit\"] = 5] = \"Rateit\";\n        Type[Type[\"StartPage\"] = 6] = \"StartPage\";\n        Type[Type[\"Buzzer\"] = 7] = \"Buzzer\";\n        Type[Type[\"Poster\"] = 8] = \"Poster\";\n        Type[Type[\"SummaryPage\"] = 9] = \"SummaryPage\";\n    })(Page.Type || (Page.Type = {}));\n    var Type = Page.Type;\n})(Page || (Page = {}));\n\n/// <reference path=\"../typings/tsd.d.ts\" />\nvar app = angular.module('4screens.engageform', [\n    '4screens.util.cloudinary',\n    'LocalStorageModule'\n]);\n\n/// <reference path=\"inavigation.ts\" />\nvar Navigation;\n(function (Navigation_1) {\n    var Navigation = (function () {\n        function Navigation(engageform) {\n            this.enabled = false;\n            this.position = 0;\n            this.size = 0;\n            this.hasStart = false;\n            this.enabledStart = true;\n            this.hasPrev = false;\n            this.enabledPrev = true;\n            this.hasNext = false;\n            this.enabledNext = true;\n            this.hasFinish = false;\n            this.enabledFinish = true;\n            this.distance = 0;\n            this.animate = 'swipeNext';\n            this.hasStartPages = false;\n            this.hasEndPages = false;\n            this.next = this.pick;\n            this.finish = this.pick;\n            this._engageform = engageform;\n            this.size = engageform.availablePages.length;\n            this.hasEndPages = Boolean(this._engageform.endPages.length);\n            if (this._engageform.startPages.length) {\n                this.hasStart = true;\n                this.hasStartPages = true;\n                this._engageform.setCurrent(this._engageform.startPages[0]);\n            }\n            else {\n                this.enabled = true;\n                this.move(null);\n                this.hasPrev = false;\n            }\n        }\n        Navigation.prototype.updateDistance = function () {\n            return this.distance = this.position / this.size;\n        };\n        Navigation.prototype.start = function ($event) {\n            this.disableDefaultAction($event);\n            this.animate = 'swipeNext';\n            this.enabled = true;\n            // FIXME: Why would you do that? щ(°Д°щ) But I'm not removing it. Hell knows what depends on this stupidity.\n            this.hasStart = false;\n            this.move(null);\n            this.hasPrev = true;\n        };\n        /**\n         * Clears the page change timeout.\n         */\n        Navigation.prototype.stopPageChange = function () {\n            if (this.waitingForPageChange) {\n                Bootstrap.$timeout.cancel(this.waitingForPageChange);\n            }\n        };\n        Navigation.prototype.prev = function ($event) {\n            this.disableDefaultAction($event);\n            this.stopPageChange();\n            this.animate = 'swipePrev';\n            if (this._engageform.current) {\n                this._engageform.message = '';\n            }\n            this.position--;\n            this.updateDistance();\n            this.hasNext = true;\n            this.hasFinish = false;\n            if (this.position === 0) {\n                this._engageform.setCurrent(this._engageform.startPages[0]);\n                this.hasPrev = false;\n            }\n            else {\n                this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n                this.hasPrev = this.position === 1 ? this.hasStartPages : true;\n            }\n        };\n        Navigation.prototype.pick = function ($event, vcase, opts) {\n            var _this = this;\n            if (opts === void 0) { opts = { quiet: false }; }\n            this.disableDefaultAction($event);\n            this.stopPageChange();\n            this.animate = 'swipeNext';\n            // Move page but don't do anything else when the quiz is nor in a normal mode.\n            if (!this._engageform.isNormalMode()) {\n                var defer = Bootstrap.$q.defer();\n                defer.resolve(vcase);\n                this.move(vcase);\n                return defer.promise;\n            }\n            var current = this._engageform.current;\n            // Send the answer.\n            return current.send(vcase).then(function () {\n                _this.sendMessage();\n                // Prevent the question change when there's no answer selected and the page requires it.\n                if (!current.filled && current.settings.requiredAnswer) {\n                    if (!opts.quiet) {\n                        _this.sendMessage(_this._engageform.texts.ANSWER_REQUIRED_TO_PROCEED);\n                    }\n                    return vcase;\n                }\n                else {\n                    // Change the page with a slight delay, or do it instantly.\n                    var pageChangeDelay = vcase ? (current.settings.showCorrectAnswer || current.settings.showResults ? 2000 : 200) : 0;\n                    // Schedule the page change.\n                    _this.waitingForPageChange = Bootstrap.$timeout(function () {\n                        _this.waitingForPageChange = null;\n                        _this.move(vcase);\n                        return vcase;\n                    }, pageChangeDelay);\n                    return _this.waitingForPageChange;\n                }\n            }).catch(function (data) {\n                if (!opts.quiet) {\n                    _this.sendMessage(_this._engageform.texts[data.textKey] || data.message);\n                }\n                return data;\n            });\n        };\n        Navigation.prototype.move = function (vcase) {\n            var _this = this;\n            this._engageform.event.trigger('form::pageWillChange', {\n                currentPosition: this.position,\n                // You might wonder why I'm not using this.hasStart. Well, that's because some genius decided to\n                // make it false on the navigation start so it can't be used.\n                isStartPage: Boolean(this.position === 0 && this._engageform.startPages.length)\n            });\n            this.position++;\n            if (this._engageform.availablePages.length >= this.position) {\n                this.updateDistance();\n                this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n                this.hasPrev = true;\n                this.hasNext = false;\n                this.hasFinish = false;\n                if (this._engageform.availablePages.length > this.position) {\n                    this.hasNext = true;\n                }\n                else if (this._engageform.availablePages.length === this.position) {\n                    // Finisher is not available when the engageform is of a type \"poll\" and doesn't have any form-type question.\n                    // Also when it's not working in normal mode (ie. summary doesn't submit).\n                    this.hasFinish = this._engageform.isNormalMode() &&\n                        !(this._engageform.isType(Engageform.Type.Poll) && !this._engageform.hasForms);\n                }\n            }\n            else {\n                this.position = this._engageform.availablePages.length;\n                if (!vcase) {\n                    this._engageform.setCurrentEndPage().then(function () {\n                        _this.enabled = false;\n                        _this.hasPrev = false;\n                        _this.hasNext = false;\n                        _this.hasFinish = false;\n                    }).catch(function (err) {\n                        if (err.data.msg) {\n                            _this.sendMessage(err.data.msg);\n                        }\n                    });\n                }\n            }\n        };\n        Navigation.prototype.disableDefaultAction = function ($event) {\n            if ($event) {\n                $event.stopPropagation();\n                $event.preventDefault();\n            }\n        };\n        Navigation.prototype.sendMessage = function (msg) {\n            var _this = this;\n            if (msg === void 0) { msg = ''; }\n            this._engageform.message = msg;\n            Bootstrap.$timeout(function () {\n                _this._engageform.message = '';\n            }, this._engageform.settings.hideMessageAfterDelay);\n        };\n        return Navigation;\n    })();\n    Navigation_1.Navigation = Navigation;\n})(Navigation || (Navigation = {}));\n\n/// <reference path=\"imeta.ts\" />\nvar Meta;\n(function (Meta_1) {\n    var Meta = (function () {\n        function Meta(engageform) {\n            this.globalTitle = '';\n            this.globalDescription = '';\n            this._engageform = engageform;\n            if (this._engageform.settings.share) {\n                this.globalTitle = this._engageform.settings.share.title || '';\n                this.globalDescription = this._engageform.settings.share.description || '';\n            }\n            if (this._engageform.endPages.length < 1 || !_.find(this._engageform.pages, { social: true })) {\n                if (this._engageform.startPages.length && this._engageform.pages[this._engageform.startPages[0]].title) {\n                    this.globalTitle = this._engageform.pages[this._engageform.startPages[0]].title;\n                    this.globalDescription = this._engageform.pages[this._engageform.startPages[0]].description;\n                }\n                else {\n                    this.globalTitle = '';\n                    this.globalDescription = '';\n                }\n            }\n        }\n        return Meta;\n    })();\n    Meta_1.Meta = Meta;\n})(Meta || (Meta = {}));\n\n/// <reference path=\"ipage.ts\" />\n/// <reference path=\"ipages.ts\" />\n/// <reference path=\"ipagesent.ts\" />\nvar Page;\n(function (Page_1) {\n    var Page = (function () {\n        function Page(engageform, data) {\n            this.title = '';\n            this.description = '';\n            this.media = '';\n            this.cases = [];\n            this._pageId = data._id;\n            this._engageform = engageform;\n            this.settings = new Page_1.Settings(data);\n            this.title = data.text || '';\n            if (this.settings.showDescription) {\n                this.description = data.description || '';\n            }\n            if (this.settings.showMainMedia && data.imageData) {\n                this.media = Bootstrap.cloudinary.prepareImageUrl(data.imageFile, 680, data.imageData);\n                this.mediaWidth = 680;\n                if (data.imageData.containerRatio) {\n                    this.mediaHeight = Math.round(680 * data.imageData.containerRatio);\n                }\n                else {\n                    this.mediaHeight = Math.round(data.imageData.containerHeight || 0);\n                }\n            }\n        }\n        Object.defineProperty(Page.prototype, \"id\", {\n            get: function () {\n                return this._pageId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"engageform\", {\n            get: function () {\n                return this._engageform;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"Type\", {\n            get: function () {\n                return Page_1.Type;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"CaseType\", {\n            get: function () {\n                return Page_1.CaseType;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Page.prototype.send = function (vcase) {\n            if (this._engageform.enabled === false) {\n                return Bootstrap.$q.reject('Engageform already ended.');\n            }\n            if (vcase) {\n                return vcase.send();\n            }\n            else {\n                var deferred = Bootstrap.$q.defer();\n                deferred.resolve();\n                return deferred.promise;\n            }\n        };\n        Page.prototype.sent = function () {\n            var _this = this;\n            var deferred = Bootstrap.$q.defer();\n            var sent = {};\n            sent = (Bootstrap.localStorage.get('page.' + this.id) || {});\n            if (this.settings.showResults && sent.results) {\n                this.getStatsById(this.id).then(function (data) {\n                    deferred.resolve(_this.refreshAnswer(sent, data));\n                }).catch(function () {\n                    deferred.resolve(sent);\n                });\n            }\n            else {\n                deferred.resolve(sent);\n            }\n            return deferred.promise;\n        };\n        Page.prototype.refreshAnswer = function (sent, question) {\n            // \"abstract\"\n            return sent;\n        };\n        Page.prototype.selectAnswer = function (data) {\n            // \"abstract\"\n        };\n        Page.prototype.createCase = function (data, symbol) {\n            // \"abstract\n            return;\n        };\n        /**\n         * Sets the provided results on the page's cases.\n         * @param results Object containing data with results that should be set on the cases.\n         */\n        Page.prototype.setResults = function (results) {\n            var casesWithResults = this.cases.map(function (singleCase) {\n                // Set's the result on the case. Side effect, but makes the whole method a bit faster. Otherwise there\n                // would be a need for more loops when creating fake answers.\n                singleCase.result = Number(results.stats[singleCase.id]) || 0;\n                // Returns the ID of the case so there's no need to loop them later\n                return singleCase.id;\n            });\n            // Create fake cases when there's a result but no answer for that.\n            for (var k in results.stats) {\n                if (casesWithResults.indexOf(k) === -1\n                    && k !== 'questionId'\n                    && this.type !== Page_1.Type.Rateit) {\n                    // Create the fake answer to show results…\n                    var fakeCase = this.createCase({\n                        text: '[Removed answer]',\n                        _id: k,\n                        imageData: {\n                            // Comes from the backend by default.\n                            height: 100\n                        }\n                    });\n                    // … and set those results…\n                    fakeCase.result = Number(results.stats[fakeCase.id]);\n                    // … and add them to the answers pool.\n                    this.cases.push(fakeCase);\n                }\n            }\n        };\n        Page.prototype.updateAnswers = function (data) {\n            var _this = this;\n            if (this.id !== data.questionId) {\n                return;\n            }\n            if (this.engageform.current && !_.isUndefined(data.avg)) {\n                this.engageform.current.result = data.avg;\n            }\n            Bootstrap.$timeout(function () {\n                _this.cases.map(function (vcase) {\n                    if (!_.isUndefined(data[vcase.id])) {\n                        var loaded = vcase.load();\n                        if (loaded.results) {\n                            loaded.results[vcase.id] = data[vcase.id];\n                            vcase.save(loaded);\n                        }\n                        vcase.result = data[vcase.id] || 0;\n                    }\n                });\n            });\n        };\n        Page.prototype.getStatsById = function (pageId) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.pageStatsUrl;\n            url = url.replace(':pageId', pageId);\n            return Bootstrap.$http.get(url).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    return res.data;\n                }\n                return Bootstrap.$q.reject(res);\n            });\n        };\n        return Page;\n    })();\n    Page_1.Page = Page;\n})(Page || (Page = {}));\n\n/// <reference path=\"iuser.ts\" />\nvar User = (function () {\n    function User() {\n    }\n    Object.defineProperty(User.prototype, \"id\", {\n        get: function () {\n            if (!this._id) {\n                this._id = Bootstrap.localStorage.get('userIdent');\n            }\n            return this._id;\n        },\n        set: function (id) {\n            Bootstrap.localStorage.set('userIdent', id);\n            this._id = id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"sessionId\", {\n        get: function () {\n            if (!this._sessionId) {\n                this._sessionId = Bootstrap.localStorage.get('sessionIdent');\n            }\n            return this._sessionId;\n        },\n        set: function (sessionId) {\n            Bootstrap.localStorage.set('sessionIdent', sessionId);\n            this._sessionId = sessionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return User;\n})();\n\nvar Util;\n(function (Util) {\n    var Event = (function () {\n        function Event() {\n            this._listener = {};\n        }\n        /**\n         * Register callback for given event.\n         *\n         * @param {String} event\n         * @param {Function} callback\n         */\n        Event.prototype.listen = function (event, callback) {\n            if (!this._listener[event]) {\n                this._listener[event] = [];\n            }\n            this._listener[event].push(callback);\n        };\n        /**\n         * Fire event with given arguments.\n         *\n         * @param {string} event\n         * @param {args...} data\n         */\n        Event.prototype.trigger = function (event) {\n            var data = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                data[_i - 1] = arguments[_i];\n            }\n            var args = Array.apply(null, arguments).slice(1);\n            var listeners = this._listener[event];\n            if (!listeners) {\n                return;\n            }\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].apply(null, args);\n            }\n        };\n        return Event;\n    })();\n    Util.Event = Event;\n})(Util || (Util = {}));\n\n/// <reference path=\"iengageform.ts\" />\n/// <reference path=\"isendanswercallback.ts\" />\nvar Engageform;\n(function (Engageform_1) {\n    var Engageform = (function () {\n        function Engageform(data, mode, pages, sendAnswerCallback) {\n            var _this = this;\n            if (pages === void 0) { pages = []; }\n            if (sendAnswerCallback === void 0) { sendAnswerCallback = function () { }; }\n            this._pages = {};\n            this._startPages = [];\n            this._endPages = [];\n            this._availablePages = [];\n            this._hasForms = false;\n            this.enabled = true;\n            this.type = Engageform_1.Type.Undefined;\n            // As always, due to the initialisation drama, those values are only available about now.\n            Engageform.pagesConsturctors = {\n                multiChoice: Page.MultiChoice,\n                pictureChoice: Page.PictureChoice,\n                rateIt: Page.Rateit,\n                forms: Page.Form,\n                startPage: Page.StartPage,\n                endPage: Page.EndPage,\n                buzzer: Page.Buzzer,\n                poster: Page.Poster\n            };\n            this._engageformId = data._id;\n            this.mode = mode;\n            this.sendAnswerCallback = sendAnswerCallback;\n            this.title = data.title;\n            this.settings = new Engageform_1.Settings(data);\n            this.theme = new Engageform_1.Theme(data);\n            this.tabs = new Engageform_1.Tabs(data);\n            this.texts = data.texts;\n            this.themeType = this.getThemeType(data.theme.backgroundColor);\n            this.event = new Util.Event();\n            if (data.settings && data.settings.branding) {\n                this.branding = new Branding.Branding(data.settings.branding);\n            }\n            else {\n                this.branding = new Branding.Branding({});\n            }\n            // Handle pages creation.\n            var builtPages = this.buildPages(pages, this.settings);\n            // Store the pages on the instance.\n            builtPages.forEach(function (page) { return _this.storePage(page); });\n            // Does the quiz have any form-type pages?\n            this._hasForms = builtPages.some(function (page) { return page.type === Page.Type.Form; });\n            // Create meta objects.\n            this.navigation = new Navigation.Navigation(this);\n            this.meta = new Meta.Meta(this);\n        }\n        Object.defineProperty(Engageform.prototype, \"id\", {\n            get: function () {\n                return this._engageformId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"pages\", {\n            get: function () {\n                return this._pages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"startPages\", {\n            get: function () {\n                return this._startPages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"endPages\", {\n            get: function () {\n                return this._endPages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"availablePages\", {\n            get: function () {\n                return this._availablePages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"typeName\", {\n            get: function () {\n                return Engageform_1.Type[this.type].toLowerCase();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"hasForms\", {\n            /**\n             * @public\n             * @description\n             * Returns boolean information about the presence of form-type in the current engageform.\n             *\n             * @returns {boolean} Are there any form-type questions?\n             */\n            get: function () {\n                return this._hasForms;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @public\n         * @description\n         * Checks if the current engageform is of provided type. Takes Types enum as an argument.\n         *\n         * @param {Type} type Engageform type from the Type enum.\n         * @returns {boolean} Is it?\n         */\n        Engageform.prototype.isType = function (type) {\n            return this.type === type;\n        };\n        /**\n         * Informs if the quiz is currently in a \"normal\" mode, so all features should work as intended.\n         * Normal mode means either default or preview mode.\n         *\n         * One of the feature that depends on this mode is the availability of start and end pages.\n         *\n         * @returns {Boolean}\n         */\n        Engageform.prototype.isNormalMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Default || this.mode === Engageform_1.Mode.Preview);\n        };\n        /**\n         * Informs if the quiz works in the summary mode.\n         * @returns {Boolean} Is summary mode?\n         */\n        Engageform.prototype.isSummaryMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Summary);\n        };\n        /**\n         * Informs if the quiz works in the results mode.\n         * @returns {Boolean} Is results mode?\n         */\n        Engageform.prototype.isResultsMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Result);\n        };\n        /**\n         * Informs if the quiz works in the preview mode.\n         * @returns {Boolean} Is preview mode?\n         */\n        Engageform.prototype.isPreviewMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Preview);\n        };\n        /**\n         * Stores a single page on the quiz instance.\n         *\n         * There are two type of stores. One stores only the IDs and start and end pages are stored in different\n         * collections. There's also a general collection for all pages where instances are held.\n         *\n         * Start and end pages are not stored in the summary mode.\n         *\n         * @param page The page to be stored.\n         * @returns {Page.Page} The same page.\n         */\n        Engageform.prototype.storePage = function (page) {\n            if (page.type === Page.Type.StartPage) {\n                if (this.isNormalMode()) {\n                    this._startPages.push(page.id);\n                }\n            }\n            else if (page.type === Page.Type.EndPage) {\n                if (this.isNormalMode()) {\n                    this._endPages.push(page.id);\n                }\n            }\n            else {\n                this._availablePages.push(page.id);\n            }\n            this._pages[page.id] = page;\n            return page;\n        };\n        /**\n         * Initialises a single page that will take place of the current one.\n         *\n         * @param page Page data for creating the page's instance.\n         * @returns {Page.Page} Built page.\n         */\n        Engageform.prototype.initPage = function (page) {\n            // Build and store the page.\n            this.storePage(this.buildPages([page], this.settings)[0]);\n            // Set the currently visible page.\n            return this.setCurrent(page._id);\n        };\n        /**\n         * Sets the currently visible page by finding it by ID.\n         *\n         * @param pageId Page's ID to show.\n         * @returns {IPage} The visible page.\n         */\n        Engageform.prototype.setCurrent = function (pageId) {\n            var page = this._pages[pageId];\n            this.current = page;\n            return page;\n        };\n        Engageform.prototype.setCurrentEndPage = function () {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformFinishUrl;\n            url = url.replace(':engageformId', this._engageformId);\n            if (Bootstrap.mode !== Engageform_1.Mode.Default) {\n                url += '?preview';\n            }\n            return Bootstrap.$http.post(url, {\n                userIdent: Bootstrap.user.sessionId,\n                globalUserIdent: Bootstrap.user.id\n            }).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    Bootstrap.localStorage.clearAll();\n                    Bootstrap.user.id = res.data.globalUserIdent;\n                    return res.data;\n                }\n                return this.$q.reject(res);\n            });\n        };\n        Engageform.prototype.cleanPages = function () {\n            this._availablePages.length = 0;\n            this._pages = {};\n        };\n        /**\n       * Builds pages from data delegating the construction to this.createPage method and\n       * filters out possibly unsupported pages.\n       *\n       * @param pages Array with pages data.\n       * @param settings this.settings of the current quiz.\n       * @returns {Page.Page[]} Array of pages.\n         */\n        Engageform.prototype.buildPages = function (pages, settings) {\n            var _this = this;\n            return pages\n                .map(function (page) { return _this.createPage(page, settings); })\n                .filter(function (val) { return Boolean(val); });\n        };\n        /**\n       * Creates a single page. If the type is not supported (ie. doesn't have a constructor) will return undefined.\n       *\n       * @param page Pages data.\n       * @param settings this.settings.\n       * @returns {Page.Page|void} Page instance or undefined if unsupported type.\n       */\n        Engageform.prototype.createPage = function (page, settings) {\n            if (Engageform.pagesConsturctors[page.type]) {\n                return new Engageform.pagesConsturctors[page.type](this, page, settings);\n            }\n        };\n        /**\n         * Takes the results data and applies them on the pages.\n         * @param results\n         */\n        Engageform.prototype.setSummary = function (results) {\n            var _this = this;\n            results.forEach(function (questionResults) {\n                if (_this._pages[questionResults.stats.questionId]) {\n                    _this._pages[questionResults.stats.questionId].setResults(questionResults);\n                }\n            });\n        };\n        /**\n         * In results mode, sets the user picked answers on the pages.\n         * @param questions\n         */\n        Engageform.prototype.setAnswers = function (_a) {\n            var questions = _a.questions;\n            for (var questionId in questions) {\n                if (this._pages[questionId]) {\n                    var props = questions[questionId];\n                    this._pages[questionId].selectAnswer({\n                        selectedCaseId: props.selectedAnswerId,\n                        inputs: props.inputs,\n                        selectedValue: props.rateItValue\n                    });\n                }\n            }\n        };\n        Engageform.prototype.setResultPage = function (stats) {\n            var data = {\n                _id: 'summaryPage',\n                type: 'summaryPage',\n                settings: {\n                    showCorrectAnswer: true\n                },\n                stats: stats\n            };\n            var resultPage = new Page.SummaryPage(this, data);\n            this.storePage(resultPage);\n        };\n        /**\n       * Creates a page showing user's outcome or score in adequate quiz types. Used only in the results-preview mode.\n       * @param data\n       */\n        Engageform.prototype.setUserResultPage = function (data) {\n            var pageData = {\n                _id: 'RESULT_PAGE',\n                type: 'summaryPage',\n                settings: {}\n            };\n            if (data.type === 'outcome') {\n                _.extend(pageData, {\n                    text: 'User\\'s outcome: ' + data.outcome\n                });\n            }\n            else {\n                _.extend(pageData, {\n                    text: 'User\\'s score: ' + data.score + ' / ' + data.maxScore\n                });\n            }\n            var resultPage = new Page.SummaryPage(this, pageData);\n            this.storePage(resultPage);\n        };\n        Engageform.prototype.getThemeType = function (color) {\n            var colorRGB = this.colorToRgb(color);\n            if ((colorRGB.red * 0.299 + colorRGB.green * 0.587 + colorRGB.blue * 0.114) > 186) {\n                return 'light';\n            }\n            else {\n                return 'dark';\n            }\n        };\n        Engageform.prototype.colorToRgb = function (color) {\n            var colorParts, temp, triplets;\n            if (color[0] === '#') {\n                color = color.substr(1);\n            }\n            else {\n                colorParts = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n                color = (colorParts && colorParts.length === 4) ? ('0' + parseInt(colorParts[1], 10).toString(16)).slice(-2) +\n                    ('0' + parseInt(colorParts[2], 10).toString(16)).slice(-2) +\n                    ('0' + parseInt(colorParts[3], 10).toString(16)).slice(-2) : '';\n            }\n            if (color.length === 3) {\n                temp = color;\n                color = '';\n                temp = /^([a-f0-9])([a-f0-9])([a-f0-9])$/i.exec(temp).slice(1);\n                for (var i = 0; i < 3; i++) {\n                    color += temp[i] + temp[i];\n                }\n            }\n            triplets = /^([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i.exec(color).slice(1);\n            return {\n                red: parseInt(triplets[0], 16),\n                green: parseInt(triplets[1], 16),\n                blue: parseInt(triplets[2], 16)\n            };\n        };\n        return Engageform;\n    })();\n    Engageform_1.Engageform = Engageform;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"api/api.ts\" />\n/// <reference path=\"navigation/navigation.ts\" />\n/// <reference path=\"meta/meta.ts\" />\n/// <reference path=\"page/page.ts\" />\n/// <reference path=\"user/user.ts\" />\n/// <reference path=\"util/event.ts\" />\n/// <reference path=\"engageform/engageform.ts\" />\nvar Bootstrap = (function () {\n    function Bootstrap($http, $q, $timeout, cloudinary, localStorage, ApiConfig) {\n        Bootstrap.$http = $http;\n        Bootstrap.$q = $q;\n        Bootstrap.$timeout = $timeout;\n        Bootstrap.cloudinary = cloudinary;\n        Bootstrap.localStorage = localStorage;\n        Bootstrap.config = ApiConfig;\n        Bootstrap.user = new User();\n        // Map names to constructors.\n        Bootstrap.quizzesConstructors = {\n            outcome: Engageform.Outcome,\n            poll: Engageform.Poll,\n            score: Engageform.Score,\n            survey: Engageform.Survey,\n            live: Engageform.Live\n        };\n        Bootstrap.modes = {\n            preview: Engageform.Mode.Preview,\n            summary: Engageform.Mode.Summary,\n            results: Engageform.Mode.Result,\n            'default': Engageform.Mode.Default,\n            '': Engageform.Mode.Default\n        };\n        // FIXME: This is inaccessible inside the library, since it's the consumer app that creates the instance so it\n        // isn't possible to actually trigger any event! I'm leaving it here because I don't care enough to check\n        // if any app tries to subscribe for this event. I'm almost sure it's safe to remove, though.\n        this._event = new Util.Event();\n        Bootstrap.cloudinary.setConfig(ApiConfig.cloudinary);\n    }\n    Object.defineProperty(Bootstrap.prototype, \"type\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.type;\n            }\n            return Engageform.Type.Undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"Type\", {\n        get: function () {\n            return Engageform.Type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"mode\", {\n        get: function () {\n            return Bootstrap.mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"Mode\", {\n        get: function () {\n            return Engageform.Mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"title\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.title;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"theme\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.theme;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"current\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.current;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"navigation\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.navigation;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"branding\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.branding;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"message\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.message;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"meta\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.meta;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"event\", {\n        get: function () {\n            if (this._event) {\n                return this._event;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bootstrap.prototype.init = function (opts) {\n        var _this = this;\n        // Options are required and need to have a quiz ID.\n        if (!opts || !opts.id) {\n            return Bootstrap.$q.reject({\n                status: 'error',\n                error: {\n                    code: 406,\n                    message: 'The required id property does not exist.'\n                },\n                data: opts\n            });\n        }\n        // Return already initialised instance if already exists.\n        if (Bootstrap._instances[opts.id]) {\n            return Bootstrap._instances[opts.id];\n        }\n        // When mode is not provided, set id to default.\n        if (typeof opts.mode === 'undefined') {\n            opts.mode = 'default';\n        }\n        // If the requested mode is not supported, reject the initialisation.\n        if (!Bootstrap.modes[opts.mode]) {\n            return Bootstrap.$q.reject({\n                status: 'error',\n                error: {\n                    code: 406,\n                    message: 'Mode property not supported.'\n                },\n                data: opts\n            });\n        }\n        // Set the mode in which the whole library operates.\n        Bootstrap.mode = Bootstrap.modes[opts.mode];\n        // Create the promises map that will have to resolve before the quiz is initialised.\n        var initializationPromises = {\n            quizData: Bootstrap.getData('quiz', opts.id)\n        };\n        // If the quiz is not live get the pages before initialising it.\n        if (!opts.live) {\n            initializationPromises.pages = Bootstrap.getData('pages', opts.id);\n        }\n        // Initialize the quiz.\n        return Bootstrap.$q.all(initializationPromises).then(function (data) {\n            // If the quiz doesn't have a supported constructor, reject the promise with error.\n            if (!Bootstrap.quizzesConstructors[data.quizData.type]) {\n                return Bootstrap.$q.reject({\n                    status: 'error',\n                    error: {\n                        code: 406,\n                        message: 'Type property not supported.'\n                    },\n                    data: data.quizData\n                });\n            }\n            // Create the Engageform's instance.\n            _this._engageform = new Bootstrap.quizzesConstructors[data.quizData.type](data.quizData, Bootstrap.mode, data.pages, opts.callback ? opts.callback.sendAnswerCallback : function () { });\n            return _this._engageform;\n        });\n    };\n    /**\n   * Fetches the two types of data from the API: quiz data and pages data.\n   * @param type Resource type: quiz or pages.\n   * @param id ID of the quiz.\n   * @returns {IPromise<API.IQuizQuestion[]|API.IQuiz>}\n   */\n    Bootstrap.getData = function (type, id) {\n        var resourcesPaths = {\n            quiz: 'engageformUrl',\n            pages: 'engageformPagesUrl'\n        };\n        // Basic validation.\n        if (!resourcesPaths[type]) {\n            throw new Error(\"Resource path for \" + type + \" type of data is unknown.\");\n        }\n        // Decide the data URL depending on the type.\n        var url = Bootstrap.config.backend.domain +\n            Bootstrap.config.engageform[type === 'quiz' ? 'engageformUrl' : 'engageformPagesUrl'];\n        // Valid ID required.\n        url = url.replace(':engageformId', id);\n        // Inform the backend it shouldn't store statistics when a quiz is not in a default mode.\n        if (Bootstrap.mode !== Engageform.Mode.Default) {\n            url += '?preview';\n        }\n        // Go, fetch the data.\n        return Bootstrap.$http.get(url).then(function (res) {\n            if ([200, 304].indexOf(res.status) !== -1) {\n                return res.data;\n            }\n            Bootstrap.$q.reject(res);\n        });\n    };\n    Bootstrap.prototype.destroyInstances = function () {\n        Bootstrap._instances = {};\n    };\n    Bootstrap.mode = Engageform.Mode.Undefined;\n    Bootstrap._instances = {};\n    return Bootstrap;\n})();\nBootstrap.$inject = ['$http', '$q', '$timeout', 'cloudinary', 'localStorageService', 'ApiConfig'];\napp.service('Engageform', Bootstrap);\n\n/// <reference path=\"ibranding.ts\" />\nvar Branding;\n(function (Branding_1) {\n    var Branding = (function () {\n        function Branding(data) {\n            if (data === void 0) { data = {}; }\n            this._isCustomLogo = false;\n            // Marks the branding if it is a custom, ie. user defined at least one own value.\n            this._isCustom = false;\n            var imgUrl;\n            var defaultBranding = Bootstrap.config.backend.branding;\n            // Is branding enabled? (State of the enabled branding is false, so negating that).\n            this._enabled = !data.state;\n            // If there's any branding data, it means that this is a custom branding.\n            if (data.text || data.link || data.imageUrl) {\n                this._isCustom = true;\n            }\n            // Set the branding properties form the data object or from the default values.\n            this._text = typeof data.text === 'undefined' ? defaultBranding.text : data.text;\n            this._link = typeof data.link === 'undefined' ? defaultBranding.link : data.link;\n            // Image URL is a bit complicated.\n            if (typeof data.imageUrl === 'undefined') {\n                imgUrl = defaultBranding.imageUrl;\n            }\n            else {\n                imgUrl = data.imageUrl;\n                this._isCustomLogo = true;\n            }\n            // The image's URL is a bit different if it is a default one, than when it is a custom.\n            if (imgUrl === defaultBranding.imageUrl) {\n                this._imageUrl = Bootstrap.config.backend.api + imgUrl;\n            }\n            else {\n                this._imageUrl = imgUrl ? Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + imgUrl : '';\n            }\n        }\n        Object.defineProperty(Branding.prototype, \"isCustom\", {\n            get: function () {\n                return this._isCustom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"isCustomLogo\", {\n            get: function () {\n                return this._isCustomLogo;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"isDefault\", {\n            get: function () {\n                return !this._isCustom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"imageUrl\", {\n            get: function () {\n                return this._imageUrl;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"link\", {\n            get: function () {\n                return this._link;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"text\", {\n            get: function () {\n                return this._text;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"enabled\", {\n            get: function () {\n                return this._enabled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Branding;\n    })();\n    Branding_1.Branding = Branding;\n})(Branding || (Branding = {}));\n\n/// <reference path=\"isettings.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Settings = (function () {\n        function Settings(data) {\n            this.allowAnswerChange = false;\n            this.hideMessageAfterDelay = 3000;\n            if (data.settings) {\n                this.allowAnswerChange = !!data.settings.allowAnswerChange;\n                if (data.settings.hideMessageAfterDelay) {\n                    this.hideMessageAfterDelay = data.settings.hideMessageAfterDelay;\n                }\n                if (data.settings.share) {\n                    this.share = data.settings.share;\n                    if (!this.share.imageUrl && Bootstrap.config.share && Bootstrap.config.share.defaultImgUrl) {\n                        this.share.imageUrl = Bootstrap.config.share.defaultImgUrl;\n                    }\n                }\n            }\n        }\n        return Settings;\n    })();\n    Engageform.Settings = Settings;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"itheme.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Theme = (function () {\n        function Theme(data) {\n            this.answerBackgroundColor = '';\n            this.answerBorderColor = '';\n            this.answerColor = '';\n            this.backgroundBrightness = '';\n            this.backgroundColor = '';\n            this.backgroundImageBlur = '';\n            this.backgroundImageFile = '';\n            this.backgroundImagePosition = '';\n            this.buttonColor = '';\n            this.font = '';\n            this.questionColor = '';\n            this.customThemeCssFile = '';\n            this.backgroundImageConvertedFile = '';\n            this.tabBorderColor = '';\n            this.tabFontColor = '';\n            this.tabColor = '';\n            if (data.theme) {\n                this.answerBackgroundColor = data.theme.answerBackgroundColor || '';\n                this.answerBorderColor = data.theme.answerBorderColor || '';\n                this.answerColor = data.theme.answerColor || '';\n                this.backgroundBrightness = data.theme.backgroundBrightness || '';\n                this.backgroundColor = data.theme.backgroundColor || '';\n                this.backgroundImageBlur = data.theme.backgroundImageBlur || '';\n                this.backgroundImageFile = data.theme.backgroundImageFile || '';\n                this.backgroundImagePosition = data.theme.backgroundImagePosition || '';\n                this.buttonColor = data.theme.buttonColor || '';\n                this.font = data.theme.font || '';\n                this.questionColor = data.theme.questionColor || '';\n                this.tabColor = data.theme.tabColor || '';\n                this.tabFontColor = data.theme.tabFontColor || '';\n                this.tabBorderColor = data.theme.tabBorderColor || '';\n                if (data.theme.customThemeCssFile) {\n                    this.customThemeCssFile = Bootstrap.config.backend.api + '/uploads/' + data.theme.customThemeCssFile;\n                }\n                if (data.theme.backgroundImageFile) {\n                    this.convertBackgroundImage();\n                }\n            }\n        }\n        Theme.prototype.convertBackgroundImage = function () {\n            this.backgroundImageConvertedFile = Bootstrap.cloudinary.prepareBackgroundImageUrl(this.backgroundImageFile, window.innerWidth, window.innerHeight, parseInt(this.backgroundImageBlur, 10), this.backgroundImagePosition);\n        };\n        return Theme;\n    })();\n    Engageform.Theme = Theme;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"itabs.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Tabs = (function () {\n        function Tabs(data) {\n            this.liveTitle = 'Live';\n            this.chatTitle = 'Chat';\n            this.logoUrl = '';\n            this.headerText = '';\n            if (data.tabs) {\n                if (data.tabs.liveTitle) {\n                    this.liveTitle = data.tabs.liveTitle;\n                }\n                if (data.tabs.chatTitle) {\n                    this.chatTitle = data.tabs.chatTitle;\n                }\n                if (data.tabs.logoUrl) {\n                    // The image's URL is a bit different if it is a default one, than when it is a custom.\n                    this.logoUrl = Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + data.tabs.logoUrl;\n                }\n                if (data.tabs.headerText) {\n                    this.headerText = data.tabs.headerText;\n                }\n            }\n        }\n        return Tabs;\n    })();\n    Engageform.Tabs = Tabs;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Outcome = (function (_super) {\n        __extends(Outcome, _super);\n        function Outcome() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Outcome;\n        }\n        Outcome.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                var hasEndPage = false;\n                _this.endPages.map(function (pageId) {\n                    var page = _this.pages[pageId];\n                    if (page.outcome === data.outcome) {\n                        hasEndPage = true;\n                        _this.setCurrent(pageId);\n                    }\n                });\n                if (!hasEndPage) {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Outcome;\n    })(Engageform.Engageform);\n    Engageform.Outcome = Outcome;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Poll = (function (_super) {\n        __extends(Poll, _super);\n        function Poll() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Poll;\n        }\n        Poll.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                if (_this.endPages.length) {\n                    _this.setCurrent(_this.endPages[0]);\n                }\n                else {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Poll;\n    })(Engageform.Engageform);\n    Engageform.Poll = Poll;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Score = (function (_super) {\n        __extends(Score, _super);\n        function Score() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Score;\n        }\n        Score.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                var score = 100;\n                var hasEndPage = false;\n                // Error divide by zero...\n                if (data.maxScore > 0) {\n                    score = Math.round(data.totalScore / data.maxScore * 100);\n                }\n                _this.endPages.map(function (pageId) {\n                    var page = _this.pages[pageId];\n                    if (page.rangeMin <= score && page.rangeMax >= score) {\n                        hasEndPage = true;\n                        _this.pages[pageId].score = score;\n                        _this.setCurrent(pageId);\n                    }\n                });\n                if (!hasEndPage) {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Score;\n    })(Engageform.Engageform);\n    Engageform.Score = Score;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Survey = (function (_super) {\n        __extends(Survey, _super);\n        function Survey() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Survey;\n        }\n        Survey.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                if (_this.endPages.length) {\n                    _this.setCurrent(_this.endPages[0]);\n                }\n                else {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Survey;\n    })(Engageform.Engageform);\n    Engageform.Survey = Survey;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Engageform;\n(function (Engageform) {\n    var Live = (function (_super) {\n        __extends(Live, _super);\n        function Live() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Live;\n        }\n        Live.prototype.initPages = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve(this);\n            return deferred.promise;\n        };\n        ;\n        Live.prototype.initPage = function (page) {\n            // Clean other pages.\n            this.cleanPages();\n            // Initialize the single page.\n            return _super.prototype.initPage.call(this, page);\n        };\n        Live.prototype.setCurrentEndPage = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve();\n            return deferred.promise;\n        };\n        return Live;\n    })(Engageform.Engageform);\n    Engageform.Live = Live;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"icase.ts\" />\nvar Page;\n(function (Page) {\n    var Case = (function () {\n        function Case(page, data) {\n            this.type = Page.CaseType.Undefined;\n            this.selected = false;\n            this.correct = false;\n            this.incorrect = false;\n            this.result = 0;\n            this._caseId = data._id;\n            this._page = page;\n        }\n        Object.defineProperty(Case.prototype, \"id\", {\n            get: function () {\n                return this._caseId;\n            },\n            set: function (caseId) {\n                this._caseId = caseId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Case.prototype, \"page\", {\n            get: function () {\n                return this._page;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Method used to inform if the correct or incorrect indicator should be shown. Combine with ngIf or ngShow.\n         * Indicator is shown when the page's settings allow so and (1) the answer is selected or (2) the questions is\n         * answered and the case is correct. Not shown in the summary and results modes.\n         * @returns {boolean} Should the indicator be shown?\n         */\n        Case.prototype.shouldShowIndicator = function () {\n            return !this._page.engageform.isSummaryMode() && !this._page.engageform.isResultsMode()\n                && this._page.settings.showCorrectAnswer && (this.selected || (this._page.filled && this.correct));\n        };\n        /**\n         * Informs if the results should be shown (in the summary mode or when the page is filled and set to do so).\n         * @returns {boolean} Should result be shown.\n         */\n        Case.prototype.shouldShowResults = function () {\n            return this._page.engageform.isSummaryMode() ||\n                this._page.settings.showResults && this._page.filled && !this._page.engageform.isResultsMode();\n        };\n        /**\n         * Method created mostly to mislead programmer making him think this is how the answer is sent. Too bad!\n         * You've been goofed! The real sending is done in subclasses.\n         * @returns {IPromise<T>}\n         */\n        Case.prototype.send = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve({});\n            return deferred.promise;\n        };\n        Case.prototype.makeSend = function (data) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.pageResponseUrl;\n            url = url.replace(':pageId', this.page.id);\n            if (Bootstrap.mode !== Engageform.Mode.Default) {\n                url += '?preview';\n            }\n            data.quizQuestionId = this.page.id;\n            data.userIdent = Bootstrap.user.sessionId;\n            return Bootstrap.$http.post(url, data).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    if (!data.userIdent) {\n                        Bootstrap.user.sessionId = res.data.userIdent;\n                    }\n                    return res.data;\n                }\n                else {\n                    return Bootstrap.$q.reject(res.data || {});\n                }\n            }).catch(function (res) {\n                return Bootstrap.$q.reject(res.data || {});\n            });\n        };\n        Case.prototype.load = function () {\n            return Bootstrap.localStorage.get('page.' + this.page.id) || {};\n        };\n        Case.prototype.save = function (data) {\n            Bootstrap.localStorage.set('page.' + this.page.id, data);\n        };\n        Case.prototype.validate = function () {\n            // \"abstract\"\n            return true;\n        };\n        // Buzzer need extra send, so we made this abstract\n        Case.prototype.trueBuzzerSend = function (BCS) {\n            // \"abstract\"\n        };\n        return Case;\n    })();\n    Page.Case = Case;\n})(Page || (Page = {}));\n\n/// <reference path=\"isettings.ts\" />\nvar Page;\n(function (Page) {\n    var Settings = (function () {\n        function Settings(data) {\n            this.showResults = false;\n            this.showCorrectAnswer = false;\n            this.showMainMedia = false;\n            this.showDescription = false;\n            this.requiredAnswer = false;\n            this.requiredAnswer = !!data.requiredAnswer;\n            if (data.settings) {\n                this.showResults = !!data.settings.showAnswers;\n                this.showCorrectAnswer = !!data.settings.showCorrectAnswer;\n                this.showMainMedia = !!data.settings.showMainMedia;\n                this.showDescription = !!data.settings.showDescription;\n            }\n        }\n        return Settings;\n    })();\n    Page.Settings = Settings;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var ImageCase = (function (_super) {\n        __extends(ImageCase, _super);\n        function ImageCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Image;\n            this.title = data.text;\n            this.media = Bootstrap.cloudinary.prepareImageUrl(data.imageFile, 300, data.imageData);\n            this.mediaWidth = 300;\n            if (data.imageData && data.imageData.containerRatio) {\n                this.mediaHeight = Math.round(300 * data.imageData.containerRatio);\n            }\n            else {\n                this.mediaHeight = Math.round(data.imageData.containerHeight || 0);\n            }\n        }\n        ImageCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { selectedAnswerId: this.id }).then(function (res) {\n                var data = {};\n                if (res.selectedAnswerId) {\n                    data.selectedCaseId = res.selectedAnswerId;\n                }\n                if (res.correctAnswerId) {\n                    data.correctCaseId = res.correctAnswerId;\n                }\n                for (var caseId in res.stats) {\n                    if (res.stats.hasOwnProperty(caseId)) {\n                        data.results = data.results || {};\n                        if (/.{24}/.test(caseId)) {\n                            data.results[caseId] = res.stats[caseId];\n                        }\n                    }\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return ImageCase;\n    })(Page.Case);\n    Page.ImageCase = ImageCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var InputCase = (function (_super) {\n        __extends(InputCase, _super);\n        function InputCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Input;\n            this.title = data.label;\n            this.expectedValue = data.type;\n            this.value = '';\n        }\n        InputCase.prototype.send = function () {\n            var _this = this;\n            var data = {};\n            data.inputs = [];\n            var sent = this.load();\n            for (var sentId in sent) {\n                if (sent.hasOwnProperty(sentId)) {\n                    data.inputs.push({\n                        _id: sentId,\n                        value: sent[sentId]\n                    });\n                }\n            }\n            return _super.prototype.makeSend.call(this, data).then(function () {\n                return data;\n            }).catch(function (data) {\n                if (data.code === 406) {\n                    data.textKey = 'INCORRECT_INPUT';\n                    data.message = 'Incorrect inputs sent. Try again.';\n                    _this.save({});\n                }\n                return Bootstrap.$q.reject(data);\n            });\n        };\n        InputCase.prototype.validate = function () {\n            this.correct = false;\n            this.incorrect = false;\n            if (this.page.settings.requiredAnswer && !this.value) {\n                this.error = 'Answer is required';\n                this.incorrect = true;\n            }\n            else {\n                this.error = '';\n                this.correct = true;\n            }\n            if (this.correct) {\n                var sent = this.load();\n                sent[this.id] = this.value;\n                this.save(sent);\n                return true;\n            }\n            return false;\n        };\n        return InputCase;\n    })(Page.Case);\n    Page.InputCase = InputCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var IterationCase = (function (_super) {\n        __extends(IterationCase, _super);\n        function IterationCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Iteration;\n            this.selected = false;\n            this.ordinal = data.ordinal;\n            this.symbol = data.symbol;\n        }\n        IterationCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { quizQuestionId: this.page.id, rateItValue: this.ordinal }).then(function (res) {\n                var data = {};\n                if (res.selectedValue) {\n                    data.selectedValue = res.selectedValue;\n                }\n                if (res.avgRateItValue) {\n                    data.result = +res.avgRateItValue;\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return IterationCase;\n    })(Page.Case);\n    Page.IterationCase = IterationCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var TextCase = (function (_super) {\n        __extends(TextCase, _super);\n        function TextCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Text;\n            this.title = data.text;\n        }\n        TextCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { selectedAnswerId: this.id }).then(function (res) {\n                var data = {};\n                if (res.selectedAnswerId) {\n                    data.selectedCaseId = res.selectedAnswerId;\n                }\n                if (res.correctAnswerId) {\n                    data.correctCaseId = res.correctAnswerId;\n                }\n                for (var caseId in res.stats) {\n                    if (res.stats.hasOwnProperty(caseId)) {\n                        data.results = data.results || {};\n                        if (/.{24}/.test(caseId)) {\n                            data.results[caseId] = res.stats[caseId];\n                        }\n                    }\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return TextCase;\n    })(Page.Case);\n    Page.TextCase = TextCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var BuzzCase = (function (_super) {\n        __extends(BuzzCase, _super);\n        function BuzzCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Buzz;\n            this.page = page;\n        }\n        BuzzCase.prototype.send = function () {\n            // We dont really send buzzes here, just increase buttonClickSum here\n            this.page.clickBuzzer();\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve({});\n            return deferred.promise;\n        };\n        BuzzCase.prototype.trueBuzzerSend = function (BCS) {\n            return _super.prototype.makeSend.call(this, { quizQuestionId: this.page.id, buttonClickSum: BCS }).then(function (res) {\n                var data = {};\n                // IMO we don't need that since buzzer have fake answerId's\n                // super.save(data);\n                // this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return BuzzCase;\n    })(Page.Case);\n    Page.BuzzCase = BuzzCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var EndPage = (function (_super) {\n        __extends(EndPage, _super);\n        function EndPage(engageform, data, settings) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.EndPage;\n            this.isCoverPage = true;\n            this.socialData = {\n                title: settings.share.title,\n                description: settings.share.description,\n                imageUrl: settings.share.imageUrl,\n                link: settings.share.link\n            };\n            if (data.coverPage) {\n                this.button = data.coverPage.buttonText;\n                this.outcome = data.coverPage.outcome;\n                this.social = data.coverPage.showSocialShares;\n                this.exitLink = data.coverPage.exitLink;\n                this.link = data.coverPage.link;\n                if (data.coverPage.scoreRange) {\n                    this.rangeMax = data.coverPage.scoreRange.max;\n                    this.rangeMin = data.coverPage.scoreRange.min;\n                }\n            }\n        }\n        EndPage.prototype.personalizeShares = function () {\n            // console.log('[ Endpage ] Personalize shares');\n            if (this.engageform.typeName === 'outcome' || this.engageform.typeName === 'score') {\n                // Replace $TITLE$ and $RESULT$ tags in the translation and set the title.\n                this.socialData.title = this.engageform.texts.SCORE_AND_OUTCOME_SHARE\n                    .replace(/\\$RESULT\\$/gi, this.outcome || String(this.score || ''))\n                    .replace(/\\$TITLE\\$/gi, this.engageform.title);\n                if (this.media && this.settings.showMainMedia) {\n                    this.socialData.imageUrl = this.media;\n                }\n            }\n        };\n        Object.defineProperty(EndPage.prototype, \"fbLink\", {\n            get: function () {\n                if (Bootstrap.config.backend && Bootstrap.config.backend.domain &&\n                    Bootstrap.config.share && Bootstrap.config.share.facebook &&\n                    this.socialData && this.socialData.title && this.socialData.description &&\n                    this.socialData.imageUrl && this.engageform && this.engageform.id) {\n                    this.personalizeShares();\n                    return Bootstrap.config.backend.domain + Bootstrap.config.share.facebook + '?quizId=' + this.engageform.id +\n                        '&description=' + encodeURIComponent(this.socialData.description) + '&name=' +\n                        encodeURIComponent(this.socialData.title) + '&image=' + this.socialData.imageUrl;\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(EndPage.prototype, \"twLink\", {\n            get: function () {\n                if (this.socialData && this.socialData.title && this.socialData.link) {\n                    this.personalizeShares();\n                    return 'https://twitter.com/intent/tweet?text=' + encodeURIComponent(this.socialData.title)\n                        + ' ' + this.socialData.link + ' via @4screens';\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return EndPage;\n    })(Page.Page);\n    Page.EndPage = EndPage;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var Form = (function (_super) {\n        __extends(Form, _super);\n        function Form(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Form;\n            this.count = 0;\n            if (!data.forms) {\n                return;\n            }\n            this.cases = data.forms.inputs.map(function (input) {\n                return _this.createCase(input);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        Form.prototype.createCase = function (input) {\n            return new Page.InputCase(this, input);\n        };\n        Form.prototype.send = function (vcase) {\n            var deferred = Bootstrap.$q.defer();\n            var validated = true;\n            this.cases.map(function (input) {\n                if (!input.validate()) {\n                    validated = false;\n                }\n            });\n            if (validated) {\n                this.filled = true;\n                this.engageform.sendAnswerCallback(this.engageform.title || this.engageform.id, this.engageform.current ? this.engageform.current.title || this.engageform.current.id : null, this.cases[0]);\n                deferred.resolve(this.cases[0].send());\n            }\n            else {\n                this.filled = false;\n                deferred.resolve({});\n            }\n            return deferred.promise;\n        };\n        Form.prototype.selectAnswer = function (sent) {\n            this.cases.map(function (vcase) {\n                vcase.value = sent[vcase.id] || '';\n                // In results mode, there might be data containing user inputs, so set it as the case value.\n                if (sent.inputs) {\n                    sent.inputs.forEach(function (inputData) {\n                        if (inputData._id === vcase.id) {\n                            vcase.value = inputData.value;\n                        }\n                    });\n                }\n            });\n        };\n        Form.prototype.setResults = function (results) {\n            this.count = results.count;\n        };\n        return Form;\n    })(Page.Page);\n    Page.Form = Form;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var MultiChoice = (function (_super) {\n        __extends(MultiChoice, _super);\n        function MultiChoice(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.MultiChoice;\n            if (!data.answers) {\n                return;\n            }\n            this.cases = data.answers.map(function (answer) {\n                return _this.createCase(answer);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        MultiChoice.prototype.createCase = function (answer) {\n            return new Page.TextCase(this, answer);\n        };\n        MultiChoice.prototype.refreshAnswer = function (sent, question) {\n            question.answers.map(function (answer) {\n                sent.results[answer._id] = answer.percent;\n            });\n            return sent;\n        };\n        MultiChoice.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            this.cases.map(function (vcase) {\n                vcase.selected = false;\n                vcase.correct = false;\n                vcase.incorrect = false;\n                if (vcase.id === sent.selectedCaseId) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                    _this.filled = true;\n                    vcase.selected = true;\n                }\n                if (sent.results) {\n                    vcase.result = sent.results[vcase.id] || 0;\n                }\n                // Mark case as correct or incorrect.\n                if (vcase.id === sent.correctCaseId) {\n                    vcase.correct = true;\n                }\n                else {\n                    vcase.incorrect = true;\n                }\n            });\n        };\n        return MultiChoice;\n    })(Page.Page);\n    Page.MultiChoice = MultiChoice;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var PictureChoice = (function (_super) {\n        __extends(PictureChoice, _super);\n        function PictureChoice(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.PictureChoice;\n            if (!data.answers) {\n                return;\n            }\n            this.cases = data.answers.map(function (answer) {\n                return _this.createCase(answer);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        PictureChoice.prototype.createCase = function (answer) {\n            return new Page.ImageCase(this, answer);\n        };\n        PictureChoice.prototype.refreshAnswer = function (sent, question) {\n            question.answers.map(function (answer) {\n                sent.results[answer._id] = answer.percent;\n            });\n            return sent;\n        };\n        PictureChoice.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            this.cases.map(function (vcase) {\n                vcase.selected = false;\n                vcase.correct = false;\n                vcase.incorrect = false;\n                if (vcase.id === sent.selectedCaseId) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                    _this.filled = true;\n                    vcase.selected = true;\n                }\n                if (sent.results) {\n                    vcase.result = sent.results[vcase.id] || 0;\n                }\n                // Mark case as correct or incorrect.\n                if (vcase.id === sent.correctCaseId) {\n                    vcase.correct = true;\n                }\n                else {\n                    vcase.incorrect = true;\n                }\n            });\n        };\n        return PictureChoice;\n    })(Page.Page);\n    Page.PictureChoice = PictureChoice;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var Rateit = (function (_super) {\n        __extends(Rateit, _super);\n        function Rateit(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Rateit;\n            this.selectedValue = 0;\n            this.labelMin = data.rateIt.minLabel;\n            this.labelMax = data.rateIt.maxLabel;\n            this.cases = Array.apply(null, Array(data.rateIt.maxRateItValue)).map(function (value, index) {\n                return _this.createCase(index + 1, data.rateIt.rateType);\n            });\n            this.sent().then(function (sent) {\n                if (sent.selectedValue) {\n                    _this.selectedValue = sent.selectedValue;\n                    _this.selectAnswer(sent);\n                }\n            });\n        }\n        /**\n         * Rateit is unique in a way it shows results. Typically it's the cases matter to show them, but here it's\n         * the page that has results, so the method is required here.\n         * @returns {boolean} Should the result be shown?\n         */\n        Rateit.prototype.shouldShowResults = function () {\n            return this.settings.showResults && this.result > 0;\n        };\n        Rateit.prototype.createCase = function (ordinal, symbol) {\n            return new Page.IterationCase(this, { ordinal: ordinal, symbol: symbol });\n        };\n        Rateit.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            if (sent.selectedValue) {\n                this.filled = true;\n                this.selectedValue = sent.selectedValue;\n            }\n            if (sent.result) {\n                this.result = sent.result;\n            }\n            this.cases.map(function (vcase) {\n                vcase.selected = sent.selectedValue >= vcase.ordinal;\n                if (sent.selectedValue === vcase.ordinal) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                }\n            });\n        };\n        Rateit.prototype.setResults = function (results) {\n            this.result = results.average;\n            this.selectedValue = results.average;\n        };\n        return Rateit;\n    })(Page.Page);\n    Page.Rateit = Rateit;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var StartPage = (function (_super) {\n        __extends(StartPage, _super);\n        function StartPage(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.StartPage;\n            this.isCoverPage = true;\n            if (data.coverPage && data.coverPage.buttonText !== undefined) {\n                this.button = data.coverPage.buttonText;\n            }\n        }\n        return StartPage;\n    })(Page.Page);\n    Page.StartPage = StartPage;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var Buzzer = (function (_super) {\n        __extends(Buzzer, _super);\n        function Buzzer(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Buzzer;\n            this.buttonClickSum = 0;\n            this._connected = false;\n            // Make only one case with buzzed ammount\n            this.cases.push(new Page.BuzzCase(this, { _id: 0, buttonClickSum: this.buttonClickSum }));\n            // Clear previous timeout\n            if (this._timeout) {\n                Bootstrap.$timeout.cancel(this._timeout);\n            }\n            // Start loop\n            this.buzzLoop(0);\n            // FIXME: Relpace when themes will be ready\n            // this.buzzerTheme = data.buzzerTheme;\n            this.buzzerTheme = Bootstrap.config.fakeBuzzerTheme || {};\n        }\n        Buzzer.prototype.buzzLoop = function (iteration) {\n            var _this = this;\n            if (!this._connected) {\n                this._connected = true;\n            }\n            if (this.buttonClickSum > 0) {\n                this._connected = true;\n                // True send - POST to server, we dont need then here since socket respond with global buttonClickSum\n                this.cases[0].trueBuzzerSend(this.buttonClickSum);\n                this.cases[0].buttonClickSum = this.buttonClickSum;\n                this.engageform.sendAnswerCallback(this.engageform.title || this.engageform.id, this.engageform.current ? this.engageform.current.title || this.engageform.current.id : null, this.cases[0]);\n            }\n            // Not a buzzer - stop cycle\n            if (iteration > 0 && this.engageform && this.engageform.current && this.engageform.current.id !== this.id) {\n                return;\n            }\n            // Loop\n            this._timeout = Bootstrap.$timeout(function () {\n                _this.buzzLoop(iteration + 1);\n            }, 3000);\n            // Clear buttonClickSum\n            this.buttonClickSum = 0;\n        };\n        Buzzer.prototype.clickBuzzer = function () {\n            // Limit buzzes\n            if (this.buttonClickSum < 100) {\n                this.buttonClickSum++;\n            }\n        };\n        return Buzzer;\n    })(Page.Page);\n    Page.Buzzer = Buzzer;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var Poster = (function (_super) {\n        __extends(Poster, _super);\n        function Poster(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Poster;\n        }\n        return Poster;\n    })(Page.Page);\n    Page.Poster = Poster;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Page;\n(function (Page) {\n    var SummaryPage = (function (_super) {\n        __extends(SummaryPage, _super);\n        function SummaryPage(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.SummaryPage;\n            if (data.text) {\n                this.title = data.text;\n            }\n            else {\n                if (engageform.type === Engageform.Type.Outcome) {\n                    this.title = 'Outcomes';\n                }\n                else {\n                    this.title = 'Scores';\n                }\n            }\n            this.stats = data.stats;\n        }\n        return SummaryPage;\n    })(Page.Page);\n    Page.SummaryPage = SummaryPage;\n})(Page || (Page = {}));\n})(angular);\n//# sourceMappingURL=engageform.js.map",null,null,"/// <reference path=\"../typings/tsd.d.ts\" />\n\nvar app = angular.module('4screens.engageform', [\n  '4screens.util.cloudinary',\n  'LocalStorageModule'\n]);\n",null,null,null,null,null,"/// <reference path=\"api/api.ts\" />\n/// <reference path=\"navigation/navigation.ts\" />\n/// <reference path=\"meta/meta.ts\" />\n/// <reference path=\"page/page.ts\" />\n/// <reference path=\"user/user.ts\" />\n/// <reference path=\"util/event.ts\" />\n/// <reference path=\"engageform/engageform.ts\" />\n\nimport IPromise = angular.IPromise;\n\nclass Bootstrap {\n  static $http: ng.IHttpService;\n  static $q: ng.IQService;\n  static $timeout: ng.ITimeoutService;\n  static cloudinary: any;\n  static localStorage: ng.local.storage.ILocalStorageService;\n  static user: User;\n  static config;\n  static mode = Engageform.Mode.Undefined;\n  Engageform: Engageform.IEngageform;\n\n  private _engageform: Engageform.IEngageform;\n  private _event: Util.Event;\n\n  private static _instances: Engageform.IEngageformInstances = {};\n\n  // Stores the constructors of quizzes mapped by names. Values are assigned in constructor because the modules\n  // dependency is spaghetti-like and constructors will be undefined at this point.\n  static quizzesConstructors;\n\n  // Modes the library can operates in. Values assigned later due to the spaghetti.\n  static modes;\n\n  constructor($http: ng.IHttpService, $q: ng.IQService, $timeout: ng.ITimeoutService, cloudinary: any,\n              localStorage: ng.local.storage.ILocalStorageService, ApiConfig: Config.ApiConfig) {\n    Bootstrap.$http = $http;\n    Bootstrap.$q = $q;\n    Bootstrap.$timeout = $timeout;\n    Bootstrap.cloudinary = cloudinary;\n    Bootstrap.localStorage = localStorage;\n    Bootstrap.config = ApiConfig;\n    Bootstrap.user = new User();\n\n    // Map names to constructors.\n    Bootstrap.quizzesConstructors = {\n      outcome: Engageform.Outcome,\n      poll: Engageform.Poll,\n      score: Engageform.Score,\n      survey: Engageform.Survey,\n      live: Engageform.Live\n    };\n\n    Bootstrap.modes = {\n      preview: Engageform.Mode.Preview,\n      summary: Engageform.Mode.Summary,\n      results: Engageform.Mode.Result,\n      'default': Engageform.Mode.Default,\n      '': Engageform.Mode.Default\n    };\n\n    // FIXME: This is inaccessible inside the library, since it's the consumer app that creates the instance so it\n    // isn't possible to actually trigger any event! I'm leaving it here because I don't care enough to check\n    // if any app tries to subscribe for this event. I'm almost sure it's safe to remove, though.\n    this._event = new Util.Event();\n\n    Bootstrap.cloudinary.setConfig(ApiConfig.cloudinary);\n  }\n\n  get type(): Engageform.Type {\n    if (this._engageform) {\n      return this._engageform.type;\n    }\n\n    return Engageform.Type.Undefined;\n  }\n\n  get Type() {\n    return Engageform.Type;\n  }\n\n  get mode(): Engageform.Mode {\n    return Bootstrap.mode;\n  }\n\n  get Mode() {\n    return Engageform.Mode;\n  }\n\n  get title(): string {\n    if (this._engageform) {\n      return this._engageform.title;\n    }\n  }\n\n  get theme(): Engageform.ITheme {\n    if (this._engageform) {\n      return this._engageform.theme;\n    }\n  }\n\n  get current(): Page.IPage {\n    if (this._engageform) {\n      return this._engageform.current;\n    }\n  }\n\n  get navigation(): Navigation.INavigation {\n    if (this._engageform) {\n      return this._engageform.navigation;\n    }\n  }\n\n  get branding(): Branding.IBranding {\n    if (this._engageform) {\n      return this._engageform.branding;\n    }\n  }\n\n  get message(): string {\n    if (this._engageform) {\n      return this._engageform.message;\n    }\n  }\n\n  get meta(): Meta.IMeta {\n    if (this._engageform) {\n      return this._engageform.meta;\n    }\n  }\n\n  get event(): Util.Event {\n    if (this._event) {\n      return this._event;\n    }\n  }\n\n  init(opts: API.IEmbed): ng.IPromise<Engageform.IEngageform> {\n    // Options are required and need to have a quiz ID.\n    if (!opts || !opts.id) {\n      return Bootstrap.$q.reject({\n        status: 'error',\n        error: {\n          code: 406,\n          message: 'The required id property does not exist.'\n        },\n        data: opts\n      });\n    }\n\n    // Return already initialised instance if already exists.\n    if (Bootstrap._instances[opts.id]) {\n      return Bootstrap._instances[opts.id];\n    }\n\n    // When mode is not provided, set id to default.\n    if (typeof opts.mode === 'undefined') {\n      opts.mode = 'default';\n    }\n\n    // If the requested mode is not supported, reject the initialisation.\n    if (!Bootstrap.modes[opts.mode]) {\n      return Bootstrap.$q.reject({\n        status: 'error',\n        error: {\n          code: 406,\n          message: 'Mode property not supported.'\n        },\n        data: opts\n      });\n    }\n\n    // Set the mode in which the whole library operates.\n    Bootstrap.mode = Bootstrap.modes[opts.mode];\n\n    // Create the promises map that will have to resolve before the quiz is initialised.\n    let initializationPromises: {[index: string]: any; quizData: ng.IPromise<API.IQuiz>; pages?: ng.IPromise<API.IPages>} = {\n      quizData: Bootstrap.getData('quiz', opts.id)\n    };\n\n    // If the quiz is not live get the pages before initialising it.\n    if (!opts.live) {\n      initializationPromises.pages = Bootstrap.getData('pages', opts.id);\n    }\n\n    // Initialize the quiz.\n    return Bootstrap.$q.all(initializationPromises).then((data: API.IQuizAndPagesInit) => {\n      // If the quiz doesn't have a supported constructor, reject the promise with error.\n      if (!Bootstrap.quizzesConstructors[data.quizData.type]) {\n        return Bootstrap.$q.reject({\n          status: 'error',\n          error: {\n            code: 406,\n            message: 'Type property not supported.'\n          },\n          data: data.quizData\n        });\n      }\n\n      // Create the Engageform's instance.\n      this._engageform = new Bootstrap.quizzesConstructors[data.quizData.type](data.quizData,\n        Bootstrap.mode, data.pages, opts.callback ? opts.callback.sendAnswerCallback : () => {});\n\n      return this._engageform;\n    });\n  }\n\n\t/**\n   * Fetches the two types of data from the API: quiz data and pages data.\n   * @param type Resource type: quiz or pages.\n   * @param id ID of the quiz.\n   * @returns {IPromise<API.IQuizQuestion[]|API.IQuiz>}\n   */\n  static getData(type: string, id: string): ng.IPromise<API.IQuizQuestion[]|API.IQuiz> {\n    const resourcesPaths = {\n      quiz: 'engageformUrl',\n      pages: 'engageformPagesUrl'\n    };\n\n    // Basic validation.\n    if (!resourcesPaths[type]) {\n      throw new Error(`Resource path for ${type} type of data is unknown.`);\n    }\n\n    // Decide the data URL depending on the type.\n    let url = Bootstrap.config.backend.domain +\n      Bootstrap.config.engageform[type === 'quiz' ? 'engageformUrl' : 'engageformPagesUrl'];\n\n    // Valid ID required.\n    url = url.replace(':engageformId', id);\n\n    // Inform the backend it shouldn't store statistics when a quiz is not in a default mode.\n    if (Bootstrap.mode !== Engageform.Mode.Default) {\n      url += '?preview';\n    }\n\n    // Go, fetch the data.\n    return Bootstrap.$http.get(url).then(function (res) {\n      if ([200, 304].indexOf(res.status) !== -1) {\n        return res.data;\n      }\n\n      Bootstrap.$q.reject(res);\n    });\n  }\n\n  destroyInstances() {\n    Bootstrap._instances = {};\n  }\n}\n\nBootstrap.$inject = ['$http', '$q', '$timeout', 'cloudinary', 'localStorageService', 'ApiConfig'];\napp.service('Engageform', Bootstrap);\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"/source/"}