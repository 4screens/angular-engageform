{"version":3,"sources":["header.ts","engageform/enum.ts","engageform.js","page/enum.ts","navigation/navigation.ts","app.ts","meta/meta.ts","page/page.ts","util/event.ts","user/user.ts","engageform/engageform.ts","bootstrap.ts","branding/branding.ts","engageform/settings.ts","engageform/theme.ts","engageform/tabs.ts","engageform/type/outcome.ts","engageform/type/poll.ts","engageform/type/score.ts","engageform/type/survey.ts","engageform/type/live.ts","page/case.ts","page/settings.ts","page/case/image.ts","page/case/input.ts","page/case/iteration.ts","page/case/text.ts","page/case/buzz.ts","page/type/endpage.ts","page/type/form.ts","page/type/multichoice.ts","page/type/picturechoice.ts","page/type/rateit.ts","page/type/startpage.ts","page/type/buzzer.ts","page/type/poster.ts","page/type/summaryPage.ts"],"names":["angular","Engageform","Type","Mode","Page","CaseType","Navigation","app","module","Navigation_1","engageform","this","enabled","position","size","hasStart","enabledStart","hasPrev","enabledPrev","hasNext","enabledNext","hasFinish","enabledFinish","distance","animate","hasStartPages","hasEndPages","next","pick","finish","_engageform","availablePages","length","Boolean","endPages","startPages","setCurrent","move","prototype","updateDistance","start","$event","disableDefaultAction","stopPageChange","waitingForPageChange","Bootstrap","$timeout","cancel","prev","current","message","vcase","opts","_this","quiet","isNormalMode","defer","$q","resolve","promise","settings","allowAnswerChange","filled","selected","incorrect","send","then","sendMessage","requiredAnswer","texts","ANSWER_REQUIRED_TO_PROCEED","pageChangeDelay","showCorrectAnswer","showResults","data","textKey","event","trigger","currentPosition","isStartPage","isType","Poll","hasForms","setCurrentEndPage","err","msg","stopPropagation","preventDefault","hideMessageAfterDelay","Meta","Meta_1","globalTitle","globalDescription","share","title","description","_","find","pages","social","Page_1","media","cases","_pageId","_id","Settings","text","showDescription","showMainMedia","imageData","cloudinary","prepareImageUrl","imageFile","mediaWidth","containerRatio","mediaHeight","Math","round","containerHeight","Object","defineProperty","get","enumerable","configurable","reject","deferred","sent","localStorage","id","results","getStatsById","refreshAnswer","question","selectAnswer","createCase","symbol","setResults","casesWithResults","map","singleCase","result","Number","stats","k","indexOf","type","Rateit","fakeCase","height","push","updateAnswers","questionId","isUndefined","avg","loaded","load","save","pageId","url","config","backend","domain","pageStatsUrl","replace","$http","res","status","Util","User","set","_sessionId","sessionId","Event","_listener","listen","callback","_i","arguments","args","Array","apply","slice","listeners","i","Engageform_1","mode","embedSettings","sendAnswerCallback","_pages","_startPages","_endPages","_availablePages","_hasForms","Undefined","pagesConsturctors","multiChoice","MultiChoice","pictureChoice","PictureChoice","rateIt","forms","Form","startPage","StartPage","endPage","EndPage","buzzer","Buzzer","poster","Poster","_engageformId","theme","Theme","tabs","Tabs","themeType","getThemeType","backgroundColor","branding","Branding","builtPages","buildPages","forEach","page","storePage","some","navigation","meta","toLowerCase","Default","Preview","isSummaryMode","Summary","isResultsMode","Result","isPreviewMode","setUserIdent","user","getUserIdent","initPage","engageformFinishUrl","post","userIdent","globalUserIdent","clearAll","cleanPages","createPage","filter","val","setSummary","questionResults","setAnswers","_a","questions","props","selectedCaseId","selectedAnswerId","inputs","selectedValue","rateItValue","setResultPage","resultPage","SummaryPage","setUserResultPage","pageData","extend","outcome","score","maxScore","color","colorRGB","colorToRgb","red","green","blue","colorParts","temp","triplets","substr","match","parseInt","toString","exec","ApiConfig","quizzesConstructors","Outcome","poll","Score","survey","Survey","live","Live","modes","preview","summary","default","","_event","setConfig","init","error","code","_instances","initializationPromises","quizData","getData","all","resourcesPaths","quiz","Error","destroyInstances","$inject","service","Branding_1","_isCustomLogo","_isCustom","imgUrl","defaultBranding","_enabled","state","link","imageUrl","_text","_link","_imageUrl","api","imagesUrl","defaultImgUrl","answerBackgroundColor","answerBorderColor","answerColor","backgroundBrightness","backgroundImageBlur","backgroundImageFile","backgroundImagePosition","buttonColor","font","questionColor","customThemeCssFile","backgroundImageConvertedFile","tabBorderColor","tabFontColor","tabColor","convertBackgroundImage","prepareBackgroundImageUrl","window","innerWidth","innerHeight","liveTitle","chatTitle","logoUrl","headerText","__extends","d","b","__","constructor","p","hasOwnProperty","create","_super","call","hasEndPage","totalScore","rangeMin","rangeMax","initPages","Case","correct","_caseId","_page","caseId","shouldShowIndicator","shouldShowResults","makeSend","pageResponseUrl","quizQuestionId","validate","trueBuzzerSend","BCS","showAnswers","ImageCase","Image","correctAnswerId","correctCaseId","test","InputCase","Input","label","expectedValue","value","sentId","IterationCase","Iteration","ordinal","avgRateItValue","TextCase","Text","BuzzCase","Buzz","clickBuzzer","buttonClickSum","isCoverPage","socialData","preparePreviewImageUrl","coverPage","button","buttonText","showSocialShares","exitLink","scoreRange","max","min","personalizeShares","typeName","SCORE_AND_OUTCOME_SHARE","String","facebook","encodeURIComponent","count","input","validated","inputData","answers","answer","percent","labelMin","minLabel","labelMax","maxLabel","maxRateItValue","index","rateType","average","undefined","_connected","_timeout","buzzLoop","buzzerTheme","fakeBuzzerTheme","iteration"],"mappings":"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","file":"engageform.min.js","sourcesContent":["/*!\n * 4screens-angular-engageform v0.3.0\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n",null,"(function(angular) {\n/*!\n * 4screens-angular-engageform v0.3.0\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n\nvar Engageform;\n(function (Engageform) {\n    (function (Type) {\n        Type[Type[\"Undefined\"] = 0] = \"Undefined\";\n        Type[Type[\"Live\"] = 1] = \"Live\";\n        Type[Type[\"Outcome\"] = 2] = \"Outcome\";\n        Type[Type[\"Poll\"] = 3] = \"Poll\";\n        Type[Type[\"Score\"] = 4] = \"Score\";\n        Type[Type[\"Survey\"] = 5] = \"Survey\";\n    })(Engageform.Type || (Engageform.Type = {}));\n    var Type = Engageform.Type;\n    (function (Mode) {\n        Mode[Mode[\"Undefined\"] = 0] = \"Undefined\";\n        Mode[Mode[\"Default\"] = 1] = \"Default\";\n        Mode[Mode[\"Preview\"] = 2] = \"Preview\";\n        Mode[Mode[\"Result\"] = 3] = \"Result\";\n        Mode[Mode[\"Summary\"] = 4] = \"Summary\";\n    })(Engageform.Mode || (Engageform.Mode = {}));\n    var Mode = Engageform.Mode;\n})(Engageform || (Engageform = {}));\n\nvar Page;\n(function (Page) {\n    (function (CaseType) {\n        CaseType[CaseType[\"Undefined\"] = 0] = \"Undefined\";\n        CaseType[CaseType[\"Image\"] = 1] = \"Image\";\n        CaseType[CaseType[\"Input\"] = 2] = \"Input\";\n        CaseType[CaseType[\"Iteration\"] = 3] = \"Iteration\";\n        CaseType[CaseType[\"Text\"] = 4] = \"Text\";\n        CaseType[CaseType[\"Buzz\"] = 5] = \"Buzz\";\n    })(Page.CaseType || (Page.CaseType = {}));\n    var CaseType = Page.CaseType;\n    (function (Type) {\n        Type[Type[\"Undefined\"] = 0] = \"Undefined\";\n        Type[Type[\"EndPage\"] = 1] = \"EndPage\";\n        Type[Type[\"Form\"] = 2] = \"Form\";\n        Type[Type[\"MultiChoice\"] = 3] = \"MultiChoice\";\n        Type[Type[\"PictureChoice\"] = 4] = \"PictureChoice\";\n        Type[Type[\"Rateit\"] = 5] = \"Rateit\";\n        Type[Type[\"StartPage\"] = 6] = \"StartPage\";\n        Type[Type[\"Buzzer\"] = 7] = \"Buzzer\";\n        Type[Type[\"Poster\"] = 8] = \"Poster\";\n        Type[Type[\"SummaryPage\"] = 9] = \"SummaryPage\";\n    })(Page.Type || (Page.Type = {}));\n    var Type = Page.Type;\n})(Page || (Page = {}));\n\n/// <reference path=\"../typings/tsd.d.ts\" />\nvar app = angular.module('4screens.engageform', [\n    '4screens.util.cloudinary',\n    'LocalStorageModule'\n]);\n\n/// <reference path=\"inavigation.ts\" />\nvar Navigation;\n(function (Navigation_1) {\n    var Navigation = (function () {\n        function Navigation(engageform) {\n            this.enabled = false;\n            this.position = 0;\n            this.size = 0;\n            this.hasStart = false;\n            this.enabledStart = true;\n            this.hasPrev = false;\n            this.enabledPrev = true;\n            this.hasNext = false;\n            this.enabledNext = true;\n            this.hasFinish = false;\n            this.enabledFinish = true;\n            this.distance = 0;\n            this.animate = 'swipeNext';\n            this.hasStartPages = false;\n            this.hasEndPages = false;\n            this.next = this.pick;\n            this.finish = this.pick;\n            this._engageform = engageform;\n            this.size = engageform.availablePages.length;\n            this.hasEndPages = Boolean(this._engageform.endPages.length);\n            if (this._engageform.startPages.length) {\n                this.hasStart = true;\n                this.hasStartPages = true;\n                this._engageform.setCurrent(this._engageform.startPages[0]);\n            }\n            else {\n                this.enabled = true;\n                this.move(null);\n                this.hasPrev = false;\n            }\n        }\n        Navigation.prototype.updateDistance = function () {\n            return this.distance = this.position / this.size;\n        };\n        Navigation.prototype.start = function ($event) {\n            this.disableDefaultAction($event);\n            this.animate = 'swipeNext';\n            this.enabled = true;\n            // FIXME: Why would you do that? щ(°Д°щ) But I'm not removing it. Hell knows what depends on this stupidity.\n            this.hasStart = false;\n            this.move(null);\n            this.hasPrev = true;\n        };\n        /**\n         * Clears the page change timeout.\n         */\n        Navigation.prototype.stopPageChange = function () {\n            if (this.waitingForPageChange) {\n                Bootstrap.$timeout.cancel(this.waitingForPageChange);\n            }\n        };\n        Navigation.prototype.prev = function ($event) {\n            this.disableDefaultAction($event);\n            this.stopPageChange();\n            this.animate = 'swipePrev';\n            if (this._engageform.current) {\n                this._engageform.message = '';\n            }\n            this.position--;\n            this.updateDistance();\n            this.hasNext = true;\n            this.hasFinish = false;\n            if (this.position === 0) {\n                this._engageform.setCurrent(this._engageform.startPages[0]);\n                this.hasPrev = false;\n            }\n            else {\n                this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n                this.hasPrev = this.position === 1 ? this.hasStartPages : true;\n            }\n        };\n        Navigation.prototype.pick = function ($event, vcase, opts) {\n            var _this = this;\n            if (opts === void 0) { opts = { quiet: false }; }\n            this.disableDefaultAction($event);\n            this.stopPageChange();\n            this.animate = 'swipeNext';\n            // Move page but don't do anything else when the quiz is nor in a normal mode.\n            if (!this._engageform.isNormalMode()) {\n                var defer = Bootstrap.$q.defer();\n                defer.resolve(vcase);\n                this.move(vcase);\n                return defer.promise;\n            }\n            var current = this._engageform.current;\n            // Made by Masters\n            // (Mat fixed a bug: was `current._engageform.settings` the `current` doesn't have a `settings` property.\n            // Check answer.\n            if (vcase && (this._engageform.settings.allowAnswerChange || !current.filled)) {\n                vcase.selected = true;\n                // Made by Masters\n                vcase.incorrect = false;\n            }\n            // Send the answer.\n            return current.send(vcase).then(function () {\n                _this.sendMessage();\n                // Prevent the question change when there's no answer selected and the page requires it.\n                if (!current.filled && current.settings.requiredAnswer) {\n                    if (!opts.quiet) {\n                        _this.sendMessage(_this._engageform.texts.ANSWER_REQUIRED_TO_PROCEED);\n                    }\n                    return vcase;\n                }\n                else {\n                    // Change the page with a slight delay, or do it instantly.\n                    // Made by Masters (only the timeout change from 2000 to 1000).\n                    var pageChangeDelay = vcase ? (current.settings.showCorrectAnswer || current.settings.showResults ? 1000 : 200) : 0;\n                    // Schedule the page change.\n                    _this.waitingForPageChange = Bootstrap.$timeout(function () {\n                        _this.waitingForPageChange = null;\n                        _this.move(vcase);\n                        return vcase;\n                    }, pageChangeDelay);\n                    return _this.waitingForPageChange;\n                }\n            }).catch(function (data) {\n                if (!opts.quiet) {\n                    _this.sendMessage(_this._engageform.texts[data.textKey] || data.message);\n                }\n                return data;\n            });\n        };\n        Navigation.prototype.move = function (vcase) {\n            var _this = this;\n            this._engageform.event.trigger('form::pageWillChange', {\n                currentPosition: this.position,\n                // You might wonder why I'm not using this.hasStart. Well, that's because some genius decided to\n                // make it false on the navigation start so it can't be used.\n                isStartPage: Boolean(this.position === 0 && this._engageform.startPages.length)\n            });\n            this.position++;\n            if (this._engageform.availablePages.length >= this.position) {\n                this.updateDistance();\n                this._engageform.setCurrent(this._engageform.availablePages[this.position - 1]);\n                this.hasPrev = true;\n                this.hasNext = false;\n                this.hasFinish = false;\n                if (this._engageform.availablePages.length > this.position) {\n                    this.hasNext = true;\n                }\n                else if (this._engageform.availablePages.length === this.position) {\n                    // Finisher is not available when the engageform is of a type \"poll\" and doesn't have any form-type question.\n                    // Also when it's not working in normal mode (ie. summary doesn't submit).\n                    this.hasFinish = this._engageform.isNormalMode() &&\n                        !(this._engageform.isType(Engageform.Type.Poll) && !this._engageform.hasForms);\n                }\n            }\n            else {\n                this.position = this._engageform.availablePages.length;\n                if (!vcase) {\n                    this._engageform.setCurrentEndPage().then(function () {\n                        _this.enabled = false;\n                        _this.hasPrev = false;\n                        _this.hasNext = false;\n                        _this.hasFinish = false;\n                    }).catch(function (err) {\n                        if (err.data.msg) {\n                            _this.sendMessage(err.data.msg);\n                        }\n                    });\n                }\n            }\n        };\n        Navigation.prototype.disableDefaultAction = function ($event) {\n            if ($event) {\n                $event.stopPropagation();\n                $event.preventDefault();\n            }\n        };\n        Navigation.prototype.sendMessage = function (msg) {\n            var _this = this;\n            if (msg === void 0) { msg = ''; }\n            this._engageform.message = msg;\n            Bootstrap.$timeout(function () {\n                _this._engageform.message = '';\n            }, this._engageform.settings.hideMessageAfterDelay);\n        };\n        return Navigation;\n    }());\n    Navigation_1.Navigation = Navigation;\n})(Navigation || (Navigation = {}));\n\n/// <reference path=\"imeta.ts\" />\nvar Meta;\n(function (Meta_1) {\n    var Meta = (function () {\n        function Meta(engageform) {\n            this.globalTitle = '';\n            this.globalDescription = '';\n            this._engageform = engageform;\n            if (this._engageform.settings.share) {\n                this.globalTitle = this._engageform.settings.share.title || '';\n                this.globalDescription = this._engageform.settings.share.description || '';\n            }\n            if (this._engageform.endPages.length < 1 || !_.find(this._engageform.pages, { social: true })) {\n                if (this._engageform.startPages.length && this._engageform.pages[this._engageform.startPages[0]].title) {\n                    this.globalTitle = this._engageform.pages[this._engageform.startPages[0]].title;\n                    this.globalDescription = this._engageform.pages[this._engageform.startPages[0]].description;\n                }\n                else {\n                    this.globalTitle = '';\n                    this.globalDescription = '';\n                }\n            }\n        }\n        return Meta;\n    }());\n    Meta_1.Meta = Meta;\n})(Meta || (Meta = {}));\n\n/// <reference path=\"ipage.ts\" />\n/// <reference path=\"ipages.ts\" />\n/// <reference path=\"ipagesent.ts\" />\nvar Page;\n(function (Page_1) {\n    var Page = (function () {\n        function Page(engageform, data) {\n            this.title = '';\n            this.description = '';\n            this.media = '';\n            this.cases = [];\n            this._pageId = data._id;\n            this._engageform = engageform;\n            this.settings = new Page_1.Settings(data);\n            this.title = data.text || '';\n            if (this.settings.showDescription) {\n                this.description = data.description || '';\n            }\n            if (this.settings.showMainMedia && data.imageData) {\n                this.media = Bootstrap.cloudinary.prepareImageUrl(data.imageFile, 680, // zakładamy że media zawsze ma taką szerokość (MUST BE FIXXXXXED!!!!!)\n                data.imageData);\n                this.mediaWidth = 680;\n                if (data.imageData.containerRatio) {\n                    this.mediaHeight = Math.round(680 * data.imageData.containerRatio);\n                }\n                else {\n                    this.mediaHeight = Math.round(data.imageData.containerHeight || 0);\n                }\n            }\n        }\n        Object.defineProperty(Page.prototype, \"id\", {\n            get: function () {\n                return this._pageId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"engageform\", {\n            get: function () {\n                return this._engageform;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"Type\", {\n            get: function () {\n                return Page_1.Type;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Page.prototype, \"CaseType\", {\n            get: function () {\n                return Page_1.CaseType;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Page.prototype.send = function (vcase) {\n            if (this._engageform.enabled === false) {\n                return Bootstrap.$q.reject('Engageform already ended.');\n            }\n            if (vcase) {\n                return vcase.send();\n            }\n            else {\n                var deferred = Bootstrap.$q.defer();\n                deferred.resolve();\n                return deferred.promise;\n            }\n        };\n        Page.prototype.sent = function () {\n            var _this = this;\n            var deferred = Bootstrap.$q.defer();\n            var sent = {};\n            sent = (Bootstrap.localStorage.get('page.' + this.id) || {});\n            if (this.settings.showResults && sent.results) {\n                this.getStatsById(this.id).then(function (data) {\n                    deferred.resolve(_this.refreshAnswer(sent, data));\n                }).catch(function () {\n                    deferred.resolve(sent);\n                });\n            }\n            else {\n                deferred.resolve(sent);\n            }\n            return deferred.promise;\n        };\n        Page.prototype.refreshAnswer = function (sent, question) {\n            // \"abstract\"\n            return sent;\n        };\n        Page.prototype.selectAnswer = function (data) {\n            // \"abstract\"\n        };\n        Page.prototype.createCase = function (data, symbol) {\n            // \"abstract\n            return;\n        };\n        /**\n         * Sets the provided results on the page's cases.\n         * @param results Object containing data with results that should be set on the cases.\n         */\n        Page.prototype.setResults = function (results) {\n            var casesWithResults = this.cases.map(function (singleCase) {\n                // Set's the result on the case. Side effect, but makes the whole method a bit faster. Otherwise there\n                // would be a need for more loops when creating fake answers.\n                singleCase.result = Number(results.stats[singleCase.id]) || 0;\n                // Returns the ID of the case so there's no need to loop them later\n                return singleCase.id;\n            });\n            // Create fake cases when there's a result but no answer for that.\n            for (var k in results.stats) {\n                if (casesWithResults.indexOf(k) === -1\n                    && k !== 'questionId'\n                    && this.type !== Page_1.Type.Rateit) {\n                    // Create the fake answer to show results…\n                    var fakeCase = this.createCase({\n                        text: '[Removed answer]',\n                        _id: k,\n                        imageData: {\n                            // Comes from the backend by default.\n                            height: 100\n                        }\n                    });\n                    // … and set those results…\n                    fakeCase.result = Number(results.stats[fakeCase.id]);\n                    // … and add them to the answers pool.\n                    this.cases.push(fakeCase);\n                }\n            }\n        };\n        Page.prototype.updateAnswers = function (data) {\n            var _this = this;\n            if (this.id !== data.questionId) {\n                return;\n            }\n            if (this.engageform.current && !_.isUndefined(data.avg)) {\n                this.engageform.current.result = data.avg;\n            }\n            Bootstrap.$timeout(function () {\n                _this.cases.map(function (vcase) {\n                    if (!_.isUndefined(data[vcase.id])) {\n                        var loaded = vcase.load();\n                        if (loaded.results) {\n                            loaded.results[vcase.id] = data[vcase.id];\n                            vcase.save(loaded);\n                        }\n                        vcase.result = data[vcase.id] || 0;\n                    }\n                });\n            });\n        };\n        Page.prototype.getStatsById = function (pageId) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.pageStatsUrl;\n            url = url.replace(':pageId', pageId);\n            return Bootstrap.$http.get(url).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    return res.data;\n                }\n                return Bootstrap.$q.reject(res);\n            });\n        };\n        return Page;\n    }());\n    Page_1.Page = Page;\n})(Page || (Page = {}));\n\n/// <reference path=\"iuser.ts\" />\nvar User = (function () {\n    function User() {\n    }\n    Object.defineProperty(User.prototype, \"id\", {\n        get: function () {\n            if (!this._id) {\n                this._id = Bootstrap.localStorage.get('userIdent');\n            }\n            return this._id;\n        },\n        set: function (id) {\n            Bootstrap.localStorage.set('userIdent', id);\n            this._id = id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"sessionId\", {\n        get: function () {\n            if (!this._sessionId) {\n                this._sessionId = Bootstrap.localStorage.get('sessionIdent');\n            }\n            return this._sessionId;\n        },\n        set: function (sessionId) {\n            Bootstrap.localStorage.set('sessionIdent', sessionId);\n            this._sessionId = sessionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return User;\n}());\n\nvar Util;\n(function (Util) {\n    var Event = (function () {\n        function Event() {\n            this._listener = {};\n        }\n        /**\n         * Register callback for given event.\n         *\n         * @param {String} event\n         * @param {Function} callback\n         */\n        Event.prototype.listen = function (event, callback) {\n            if (!this._listener[event]) {\n                this._listener[event] = [];\n            }\n            this._listener[event].push(callback);\n        };\n        /**\n         * Fire event with given arguments.\n         *\n         * @param {string} event\n         * @param {args...} data\n         */\n        Event.prototype.trigger = function (event) {\n            var data = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                data[_i - 1] = arguments[_i];\n            }\n            var args = Array.apply(null, arguments).slice(1);\n            var listeners = this._listener[event];\n            if (!listeners) {\n                return;\n            }\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].apply(null, args);\n            }\n        };\n        return Event;\n    }());\n    Util.Event = Event;\n})(Util || (Util = {}));\n\n/// <reference path=\"iengageform.ts\" />\n/// <reference path=\"isendanswercallback.ts\" />\nvar Engageform;\n(function (Engageform_1) {\n    var Engageform = (function () {\n        function Engageform(data, mode, pages, embedSettings, sendAnswerCallback) {\n            var _this = this;\n            if (pages === void 0) { pages = []; }\n            if (sendAnswerCallback === void 0) { sendAnswerCallback = function () {\n            }; }\n            this._pages = {};\n            this._startPages = [];\n            this._endPages = [];\n            this._availablePages = [];\n            this._hasForms = false;\n            this.enabled = true;\n            this.type = Engageform_1.Type.Undefined;\n            // As always, due to the initialisation drama, those values are only available about now.\n            Engageform.pagesConsturctors = {\n                multiChoice: Page.MultiChoice,\n                pictureChoice: Page.PictureChoice,\n                rateIt: Page.Rateit,\n                forms: Page.Form,\n                startPage: Page.StartPage,\n                endPage: Page.EndPage,\n                buzzer: Page.Buzzer,\n                poster: Page.Poster\n            };\n            this._engageformId = data._id;\n            this.mode = mode;\n            this.embedSettings = embedSettings;\n            this.sendAnswerCallback = sendAnswerCallback;\n            this.title = data.title;\n            this.settings = new Engageform_1.Settings(data);\n            this.theme = new Engageform_1.Theme(data, embedSettings);\n            this.tabs = new Engageform_1.Tabs(data);\n            this.texts = data.texts;\n            this.themeType = this.getThemeType(data.theme.backgroundColor);\n            this.event = new Util.Event();\n            if (data.settings && data.settings.branding) {\n                this.branding = new Branding.Branding(data.settings.branding);\n            }\n            else {\n                this.branding = new Branding.Branding({});\n            }\n            // Handle pages creation.\n            var builtPages = this.buildPages(pages, this.settings);\n            // Store the pages on the instance.\n            builtPages.forEach(function (page) { return _this.storePage(page); });\n            // Does the quiz have any form-type pages?\n            this._hasForms = builtPages.some(function (page) { return page.type === Page.Type.Form; });\n            // Create meta objects.\n            this.navigation = new Navigation.Navigation(this);\n            this.meta = new Meta.Meta(this);\n        }\n        Object.defineProperty(Engageform.prototype, \"id\", {\n            get: function () {\n                return this._engageformId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"pages\", {\n            get: function () {\n                return this._pages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"startPages\", {\n            get: function () {\n                return this._startPages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"endPages\", {\n            get: function () {\n                return this._endPages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"availablePages\", {\n            get: function () {\n                return this._availablePages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"typeName\", {\n            get: function () {\n                return Engageform_1.Type[this.type].toLowerCase();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Engageform.prototype, \"hasForms\", {\n            /**\n             * @public\n             * @description\n             * Returns boolean information about the presence of form-type in the current engageform.\n             *\n             * @returns {boolean} Are there any form-type questions?\n             */\n            get: function () {\n                return this._hasForms;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @public\n         * @description\n         * Checks if the current engageform is of provided type. Takes Types enum as an argument.\n         *\n         * @param {Type} type Engageform type from the Type enum.\n         * @returns {boolean} Is it?\n         */\n        Engageform.prototype.isType = function (type) {\n            return this.type === type;\n        };\n        /**\n         * Informs if the quiz is currently in a \"normal\" mode, so all features should work as intended.\n         * Normal mode means either default or preview mode.\n         *\n         * One of the feature that depends on this mode is the availability of start and end pages.\n         *\n         * @returns {Boolean}\n         */\n        Engageform.prototype.isNormalMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Default || this.mode === Engageform_1.Mode.Preview);\n        };\n        /**\n         * Informs if the quiz works in the summary mode.\n         * @returns {Boolean} Is summary mode?\n         */\n        Engageform.prototype.isSummaryMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Summary);\n        };\n        /**\n         * Informs if the quiz works in the results mode.\n         * @returns {Boolean} Is results mode?\n         */\n        Engageform.prototype.isResultsMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Result);\n        };\n        /**\n         * Informs if the quiz works in the preview mode.\n         * @returns {Boolean} Is preview mode?\n         */\n        Engageform.prototype.isPreviewMode = function () {\n            return Boolean(this.mode === Engageform_1.Mode.Preview);\n        };\n        // Made by Masters\n        Engageform.prototype.setUserIdent = function (id) {\n            Bootstrap.user.sessionId = id;\n        };\n        // Made by Masters\n        Engageform.prototype.getUserIdent = function (id) {\n            return Bootstrap.user.sessionId;\n        };\n        /**\n         * Stores a single page on the quiz instance.\n         *\n         * There are two type of stores. One stores only the IDs and start and end pages are stored in different\n         * collections. There's also a general collection for all pages where instances are held.\n         *\n         * Start and end pages are not stored in the summary mode.\n         *\n         * @param page The page to be stored.\n         * @returns {Page.Page} The same page.\n         */\n        Engageform.prototype.storePage = function (page) {\n            if (page.type === Page.Type.StartPage) {\n                if (this.isNormalMode()) {\n                    this._startPages.push(page.id);\n                }\n            }\n            else if (page.type === Page.Type.EndPage) {\n                if (this.isNormalMode()) {\n                    this._endPages.push(page.id);\n                }\n            }\n            else {\n                this._availablePages.push(page.id);\n            }\n            this._pages[page.id] = page;\n            return page;\n        };\n        /**\n         * Initialises a single page that will take place of the current one.\n         *\n         * @param page Page data for creating the page's instance.\n         * @returns {Page.Page} Built page.\n         */\n        Engageform.prototype.initPage = function (page) {\n            // Build and store the page.\n            this.storePage(this.buildPages([page], this.settings)[0]);\n            // Set the currently visible page.\n            return this.setCurrent(page._id);\n        };\n        /**\n         * Sets the currently visible page by finding it by ID.\n         *\n         * @param pageId Page's ID to show.\n         * @returns {IPage} The visible page.\n         */\n        Engageform.prototype.setCurrent = function (pageId) {\n            var page = this._pages[pageId];\n            this.current = page;\n            return page;\n        };\n        Engageform.prototype.setCurrentEndPage = function () {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.engageformFinishUrl;\n            url = url.replace(':engageformId', this._engageformId);\n            if (Bootstrap.mode !== Engageform_1.Mode.Default) {\n                url += '?preview';\n            }\n            return Bootstrap.$http.post(url, {\n                userIdent: Bootstrap.user.sessionId,\n                globalUserIdent: Bootstrap.user.id\n            }).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    Bootstrap.localStorage.clearAll();\n                    Bootstrap.user.id = res.data.globalUserIdent;\n                    return res.data;\n                }\n                return this.$q.reject(res);\n            });\n        };\n        Engageform.prototype.cleanPages = function () {\n            this._availablePages.length = 0;\n            this._pages = {};\n        };\n        /**\n         * Builds pages from data delegating the construction to this.createPage method and\n         * filters out possibly unsupported pages.\n         *\n         * @param pages Array with pages data.\n         * @param settings this.settings of the current quiz.\n         * @returns {Page.Page[]} Array of pages.\n         */\n        Engageform.prototype.buildPages = function (pages, settings) {\n            var _this = this;\n            return pages\n                .map(function (page) { return _this.createPage(page, settings); })\n                .filter(function (val) { return Boolean(val); });\n        };\n        /**\n         * Creates a single page. If the type is not supported (ie. doesn't have a constructor) will return undefined.\n         *\n         * @param page Pages data.\n         * @param settings this.settings.\n         * @returns {Page.Page|void} Page instance or undefined if unsupported type.\n         */\n        Engageform.prototype.createPage = function (page, settings) {\n            if (Engageform.pagesConsturctors[page.type]) {\n                return new Engageform.pagesConsturctors[page.type](this, page, settings);\n            }\n        };\n        /**\n         * Takes the results data and applies them on the pages.\n         * @param results\n         */\n        Engageform.prototype.setSummary = function (results) {\n            var _this = this;\n            results.forEach(function (questionResults) {\n                if (_this._pages[questionResults.stats.questionId]) {\n                    _this._pages[questionResults.stats.questionId].setResults(questionResults);\n                }\n            });\n        };\n        /**\n         * In results mode, sets the user picked answers on the pages.\n         * @param questions\n         */\n        Engageform.prototype.setAnswers = function (_a) {\n            var questions = _a.questions;\n            for (var questionId in questions) {\n                if (this._pages[questionId]) {\n                    var props = questions[questionId];\n                    this._pages[questionId].selectAnswer({\n                        selectedCaseId: props.selectedAnswerId,\n                        inputs: props.inputs,\n                        selectedValue: props.rateItValue\n                    });\n                }\n            }\n        };\n        Engageform.prototype.setResultPage = function (stats) {\n            var data = {\n                _id: 'summaryPage',\n                type: 'summaryPage',\n                settings: {\n                    showCorrectAnswer: true\n                },\n                stats: stats\n            };\n            var resultPage = new Page.SummaryPage(this, data);\n            this.storePage(resultPage);\n        };\n        /**\n         * Creates a page showing user's outcome or score in adequate quiz types. Used only in the results-preview mode.\n         * @param data\n         */\n        Engageform.prototype.setUserResultPage = function (data) {\n            var pageData = {\n                _id: 'RESULT_PAGE',\n                type: 'summaryPage',\n                settings: {}\n            };\n            if (data.type === 'outcome') {\n                _.extend(pageData, {\n                    text: 'User\\'s outcome: ' + data.outcome\n                });\n            }\n            else {\n                _.extend(pageData, {\n                    text: 'User\\'s score: ' + data.score + ' / ' + data.maxScore\n                });\n            }\n            var resultPage = new Page.SummaryPage(this, pageData);\n            this.storePage(resultPage);\n        };\n        Engageform.prototype.getThemeType = function (color) {\n            var colorRGB = this.colorToRgb(color);\n            if ((colorRGB.red * 0.299 + colorRGB.green * 0.587 + colorRGB.blue * 0.114) > 186) {\n                return 'light';\n            }\n            else {\n                return 'dark';\n            }\n        };\n        Engageform.prototype.colorToRgb = function (color) {\n            var colorParts, temp, triplets;\n            if (color[0] === '#') {\n                color = color.substr(1);\n            }\n            else {\n                colorParts = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n                color = (colorParts && colorParts.length === 4) ? ('0' + parseInt(colorParts[1], 10).toString(16)).slice(-2) +\n                    ('0' + parseInt(colorParts[2], 10).toString(16)).slice(-2) +\n                    ('0' + parseInt(colorParts[3], 10).toString(16)).slice(-2) : '';\n            }\n            if (color.length === 3) {\n                temp = color;\n                color = '';\n                temp = /^([a-f0-9])([a-f0-9])([a-f0-9])$/i.exec(temp).slice(1);\n                for (var i = 0; i < 3; i++) {\n                    color += temp[i] + temp[i];\n                }\n            }\n            triplets = /^([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i.exec(color).slice(1);\n            return {\n                red: parseInt(triplets[0], 16),\n                green: parseInt(triplets[1], 16),\n                blue: parseInt(triplets[2], 16)\n            };\n        };\n        return Engageform;\n    }());\n    Engageform_1.Engageform = Engageform;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"api/api.ts\" />\n/// <reference path=\"navigation/navigation.ts\" />\n/// <reference path=\"meta/meta.ts\" />\n/// <reference path=\"page/page.ts\" />\n/// <reference path=\"user/user.ts\" />\n/// <reference path=\"util/event.ts\" />\n/// <reference path=\"engageform/engageform.ts\" />\nvar Bootstrap = (function () {\n    function Bootstrap($http, $q, $timeout, cloudinary, localStorage, ApiConfig) {\n        Bootstrap.$http = $http;\n        Bootstrap.$q = $q;\n        Bootstrap.$timeout = $timeout;\n        Bootstrap.cloudinary = cloudinary;\n        Bootstrap.localStorage = localStorage;\n        Bootstrap.config = ApiConfig;\n        Bootstrap.user = new User();\n        // Map names to constructors.\n        Bootstrap.quizzesConstructors = {\n            outcome: Engageform.Outcome,\n            poll: Engageform.Poll,\n            score: Engageform.Score,\n            survey: Engageform.Survey,\n            live: Engageform.Live\n        };\n        Bootstrap.modes = {\n            preview: Engageform.Mode.Preview,\n            summary: Engageform.Mode.Summary,\n            results: Engageform.Mode.Result,\n            'default': Engageform.Mode.Default,\n            '': Engageform.Mode.Default\n        };\n        // FIXME: This is inaccessible inside the library, since it's the consumer app that creates the instance so it\n        // isn't possible to actually trigger any event! I'm leaving it here because I don't care enough to check\n        // if any app tries to subscribe for this event. I'm almost sure it's safe to remove, though.\n        this._event = new Util.Event();\n        Bootstrap.cloudinary.setConfig(ApiConfig.cloudinary);\n    }\n    Object.defineProperty(Bootstrap.prototype, \"type\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.type;\n            }\n            return Engageform.Type.Undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"Type\", {\n        get: function () {\n            return Engageform.Type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"mode\", {\n        get: function () {\n            return Bootstrap.mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"Mode\", {\n        get: function () {\n            return Engageform.Mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"title\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.title;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"theme\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.theme;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"current\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.current;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"navigation\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.navigation;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"branding\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.branding;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"message\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.message;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"meta\", {\n        get: function () {\n            if (this._engageform) {\n                return this._engageform.meta;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bootstrap.prototype, \"event\", {\n        get: function () {\n            if (this._event) {\n                return this._event;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bootstrap.prototype.init = function (opts) {\n        var _this = this;\n        // Options are required and need to have a quiz ID.\n        if (!opts || !opts.id) {\n            return Bootstrap.$q.reject({\n                status: 'error',\n                error: {\n                    code: 406,\n                    message: 'The required id property does not exist.'\n                },\n                data: opts\n            });\n        }\n        // Return already initialised instance if already exists.\n        if (Bootstrap._instances[opts.id]) {\n            return Bootstrap._instances[opts.id];\n        }\n        // When mode is not provided, set id to default.\n        if (typeof opts.mode === 'undefined') {\n            opts.mode = 'default';\n        }\n        // If the requested mode is not supported, reject the initialisation.\n        if (!Bootstrap.modes[opts.mode]) {\n            return Bootstrap.$q.reject({\n                status: 'error',\n                error: {\n                    code: 406,\n                    message: 'Mode property not supported.'\n                },\n                data: opts\n            });\n        }\n        // Set the mode in which the whole library operates.\n        Bootstrap.mode = Bootstrap.modes[opts.mode];\n        // Create the promises map that will have to resolve before the quiz is initialised.\n        var initializationPromises = {\n            quizData: Bootstrap.getData('quiz', opts.id)\n        };\n        // If the quiz is not live get the pages before initialising it.\n        if (!opts.live) {\n            initializationPromises.pages = Bootstrap.getData('pages', opts.id);\n        }\n        // Initialize the quiz.\n        return Bootstrap.$q.all(initializationPromises).then(function (data) {\n            // If the quiz doesn't have a supported constructor, reject the promise with error.\n            if (!Bootstrap.quizzesConstructors[data.quizData.type]) {\n                return Bootstrap.$q.reject({\n                    status: 'error',\n                    error: {\n                        code: 406,\n                        message: 'Type property not supported.'\n                    },\n                    data: data.quizData\n                });\n            }\n            // Create the Engageform's instance.\n            _this._engageform = new Bootstrap.quizzesConstructors[data.quizData.type](data.quizData, Bootstrap.mode, data.pages, opts.embedSettings, opts.callback ? opts.callback.sendAnswerCallback : function () {\n            });\n            return _this._engageform;\n        });\n    };\n    /**\n     * Fetches the two types of data from the API: quiz data and pages data.\n     * @param type Resource type: quiz or pages.\n     * @param id ID of the quiz.\n     * @returns {IPromise<API.IQuizQuestion[]|API.IQuiz>}\n     */\n    Bootstrap.getData = function (type, id) {\n        var resourcesPaths = {\n            quiz: 'engageformUrl',\n            pages: 'engageformPagesUrl'\n        };\n        // Basic validation.\n        if (!resourcesPaths[type]) {\n            throw new Error(\"Resource path for \" + type + \" type of data is unknown.\");\n        }\n        // Decide the data URL depending on the type.\n        var url = Bootstrap.config.backend.domain +\n            Bootstrap.config.engageform[type === 'quiz' ? 'engageformUrl' : 'engageformPagesUrl'];\n        // Valid ID required.\n        url = url.replace(':engageformId', id);\n        // Inform the backend it shouldn't store statistics when a quiz is not in a default mode.\n        if (Bootstrap.mode !== Engageform.Mode.Default) {\n            url += '?preview';\n        }\n        // Go, fetch the data.\n        return Bootstrap.$http.get(url).then(function (res) {\n            if ([200, 304].indexOf(res.status) !== -1) {\n                return res.data;\n            }\n            Bootstrap.$q.reject(res);\n        });\n    };\n    Bootstrap.prototype.destroyInstances = function () {\n        Bootstrap._instances = {};\n    };\n    Bootstrap.mode = Engageform.Mode.Undefined;\n    Bootstrap._instances = {};\n    return Bootstrap;\n}());\nBootstrap.$inject = ['$http', '$q', '$timeout', 'cloudinary', 'localStorageService', 'ApiConfig'];\napp.service('Engageform', Bootstrap);\n\n/// <reference path=\"ibranding.ts\" />\nvar Branding;\n(function (Branding_1) {\n    var Branding = (function () {\n        function Branding(data) {\n            if (data === void 0) { data = {}; }\n            this._isCustomLogo = false;\n            // Marks the branding if it is a custom, ie. user defined at least one own value.\n            this._isCustom = false;\n            var imgUrl;\n            var defaultBranding = Bootstrap.config.backend.branding;\n            // Is branding enabled? (State of the enabled branding is false, so negating that).\n            this._enabled = !data.state;\n            // If there's any branding data, it means that this is a custom branding.\n            if (data.text || data.link || data.imageUrl) {\n                this._isCustom = true;\n            }\n            // Set the branding properties form the data object or from the default values.\n            this._text = typeof data.text === 'undefined' ? defaultBranding.text : data.text;\n            this._link = typeof data.link === 'undefined' ? defaultBranding.link : data.link;\n            // Image URL is a bit complicated.\n            if (typeof data.imageUrl === 'undefined') {\n                imgUrl = defaultBranding.imageUrl;\n            }\n            else {\n                imgUrl = data.imageUrl;\n                this._isCustomLogo = true;\n            }\n            // The image's URL is a bit different if it is a default one, than when it is a custom.\n            if (imgUrl === defaultBranding.imageUrl) {\n                this._imageUrl = Bootstrap.config.backend.api + imgUrl;\n            }\n            else {\n                this._imageUrl = imgUrl ? Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + imgUrl : '';\n            }\n        }\n        Object.defineProperty(Branding.prototype, \"isCustom\", {\n            get: function () {\n                return this._isCustom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"isCustomLogo\", {\n            get: function () {\n                return this._isCustomLogo;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"isDefault\", {\n            get: function () {\n                return !this._isCustom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"imageUrl\", {\n            get: function () {\n                return this._imageUrl;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"link\", {\n            get: function () {\n                return this._link;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"text\", {\n            get: function () {\n                return this._text;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Branding.prototype, \"enabled\", {\n            get: function () {\n                return this._enabled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Branding;\n    }());\n    Branding_1.Branding = Branding;\n})(Branding || (Branding = {}));\n\n/// <reference path=\"isettings.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Settings = (function () {\n        function Settings(data) {\n            this.allowAnswerChange = false;\n            this.hideMessageAfterDelay = 3000;\n            if (data.settings) {\n                this.allowAnswerChange = !!data.settings.allowAnswerChange;\n                if (data.settings.hideMessageAfterDelay) {\n                    this.hideMessageAfterDelay = data.settings.hideMessageAfterDelay;\n                }\n                if (data.settings.share) {\n                    this.share = data.settings.share;\n                    if (!this.share.imageUrl && Bootstrap.config.share && Bootstrap.config.share.defaultImgUrl) {\n                        this.share.imageUrl = Bootstrap.config.share.defaultImgUrl;\n                    }\n                }\n            }\n        }\n        return Settings;\n    }());\n    Engageform.Settings = Settings;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"itheme.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Theme = (function () {\n        function Theme(data, embedSettings) {\n            this.answerBackgroundColor = '';\n            this.answerBorderColor = '';\n            this.answerColor = '';\n            this.backgroundBrightness = '';\n            this.backgroundColor = '';\n            this.backgroundImageBlur = '';\n            this.backgroundImageFile = '';\n            this.backgroundImagePosition = '';\n            this.buttonColor = '';\n            this.font = '';\n            this.questionColor = '';\n            this.customThemeCssFile = '';\n            this.backgroundImageConvertedFile = '';\n            this.tabBorderColor = '';\n            this.tabFontColor = '';\n            this.tabColor = '';\n            this.embedSettings = embedSettings;\n            if (data.theme) {\n                this.answerBackgroundColor = data.theme.answerBackgroundColor || '';\n                this.answerBorderColor = data.theme.answerBorderColor || '';\n                this.answerColor = data.theme.answerColor || '';\n                this.backgroundBrightness = data.theme.backgroundBrightness || '';\n                this.backgroundColor = data.theme.backgroundColor || '';\n                this.backgroundImageBlur = data.theme.backgroundImageBlur || '';\n                this.backgroundImageFile = data.theme.backgroundImageFile || '';\n                this.backgroundImagePosition = data.theme.backgroundImagePosition || '';\n                this.buttonColor = data.theme.buttonColor || '';\n                this.font = data.theme.font || '';\n                this.questionColor = data.theme.questionColor || '';\n                this.tabColor = data.theme.tabColor || '';\n                this.tabFontColor = data.theme.tabFontColor || '';\n                this.tabBorderColor = data.theme.tabBorderColor || '';\n                if (data.theme.customThemeCssFile) {\n                    this.customThemeCssFile = Bootstrap.config.backend.api + '/uploads/' + data.theme.customThemeCssFile;\n                }\n                if (data.theme.backgroundImageFile) {\n                    this.convertBackgroundImage();\n                }\n            }\n        }\n        Theme.prototype.convertBackgroundImage = function () {\n            this.backgroundImageConvertedFile = Bootstrap.cloudinary.prepareBackgroundImageUrl(this.backgroundImageFile, \n            // Picture will always cover the full width.\n            window.innerWidth, \n            // If the height is automatic, do not cut the picture\n            this.embedSettings.height === 'auto' ? null : window.innerHeight, parseInt(this.backgroundImageBlur, 10), this.backgroundImagePosition);\n        };\n        return Theme;\n    }());\n    Engageform.Theme = Theme;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"itabs.ts\" />\nvar Engageform;\n(function (Engageform) {\n    var Tabs = (function () {\n        function Tabs(data) {\n            this.liveTitle = 'Live';\n            this.chatTitle = 'Chat';\n            this.logoUrl = '';\n            this.headerText = '';\n            if (data.tabs) {\n                if (data.tabs.liveTitle) {\n                    this.liveTitle = data.tabs.liveTitle;\n                }\n                if (data.tabs.chatTitle) {\n                    this.chatTitle = data.tabs.chatTitle;\n                }\n                if (data.tabs.logoUrl) {\n                    // The image's URL is a bit different if it is a default one, than when it is a custom.\n                    this.logoUrl = Bootstrap.config.backend.api + Bootstrap.config.backend.imagesUrl + '/' + data.tabs.logoUrl;\n                }\n                if (data.tabs.headerText) {\n                    this.headerText = data.tabs.headerText;\n                }\n            }\n        }\n        return Tabs;\n    }());\n    Engageform.Tabs = Tabs;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Outcome = (function (_super) {\n        __extends(Outcome, _super);\n        function Outcome() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Outcome;\n        }\n        Outcome.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                var hasEndPage = false;\n                _this.endPages.map(function (pageId) {\n                    var page = _this.pages[pageId];\n                    if (page.outcome === data.outcome) {\n                        hasEndPage = true;\n                        _this.setCurrent(pageId);\n                    }\n                });\n                if (!hasEndPage) {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Outcome;\n    }(Engageform.Engageform));\n    Engageform.Outcome = Outcome;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Poll = (function (_super) {\n        __extends(Poll, _super);\n        function Poll() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Poll;\n        }\n        Poll.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                if (_this.endPages.length) {\n                    _this.setCurrent(_this.endPages[0]);\n                }\n                else {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Poll;\n    }(Engageform.Engageform));\n    Engageform.Poll = Poll;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Score = (function (_super) {\n        __extends(Score, _super);\n        function Score() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Score;\n        }\n        Score.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                var score = 100;\n                var hasEndPage = false;\n                // Error divide by zero...\n                if (data.maxScore > 0) {\n                    score = Math.round(data.totalScore / data.maxScore * 100);\n                }\n                _this.endPages.map(function (pageId) {\n                    var page = _this.pages[pageId];\n                    if (page.rangeMin <= score && page.rangeMax >= score) {\n                        hasEndPage = true;\n                        _this.pages[pageId].score = score;\n                        _this.setCurrent(pageId);\n                    }\n                });\n                if (!hasEndPage) {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Score;\n    }(Engageform.Engageform));\n    Engageform.Score = Score;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Survey = (function (_super) {\n        __extends(Survey, _super);\n        function Survey() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Survey;\n        }\n        Survey.prototype.setCurrentEndPage = function () {\n            var _this = this;\n            return _super.prototype.setCurrentEndPage.call(this).then(function (data) {\n                if (_this.endPages.length) {\n                    _this.setCurrent(_this.endPages[0]);\n                }\n                else {\n                    _this.enabled = false;\n                    _this.message = 'Thank you!';\n                }\n                return data;\n            });\n        };\n        return Survey;\n    }(Engageform.Engageform));\n    Engageform.Survey = Survey;\n})(Engageform || (Engageform = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Engageform;\n(function (Engageform) {\n    var Live = (function (_super) {\n        __extends(Live, _super);\n        function Live() {\n            _super.apply(this, arguments);\n            this.type = Engageform.Type.Live;\n        }\n        Live.prototype.initPages = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve(this);\n            return deferred.promise;\n        };\n        ;\n        Live.prototype.initPage = function (page) {\n            // Clean other pages.\n            this.cleanPages();\n            // Initialize the single page.\n            return _super.prototype.initPage.call(this, page);\n        };\n        Live.prototype.setCurrentEndPage = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve();\n            return deferred.promise;\n        };\n        return Live;\n    }(Engageform.Engageform));\n    Engageform.Live = Live;\n})(Engageform || (Engageform = {}));\n\n/// <reference path=\"icase.ts\" />\nvar Page;\n(function (Page) {\n    var Case = (function () {\n        function Case(page, data) {\n            this.type = Page.CaseType.Undefined;\n            this.selected = false;\n            this.correct = false;\n            this.incorrect = false;\n            this.result = 0;\n            this._caseId = data._id;\n            this._page = page;\n        }\n        Object.defineProperty(Case.prototype, \"id\", {\n            get: function () {\n                return this._caseId;\n            },\n            set: function (caseId) {\n                this._caseId = caseId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Case.prototype, \"page\", {\n            get: function () {\n                return this._page;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Method used to inform if the correct or incorrect indicator should be shown. Combine with ngIf or ngShow.\n         * Indicator is shown when the page's settings allow so and (1) the answer is selected or (2) the questions is\n         * answered and the case is correct. Not shown in the summary and results modes.\n         * @returns {boolean} Should the indicator be shown?\n         */\n        Case.prototype.shouldShowIndicator = function () {\n            return !this._page.engageform.isSummaryMode() && !this._page.engageform.isResultsMode()\n                && this._page.settings.showCorrectAnswer && (this.selected || (this._page.filled && this.correct));\n        };\n        /**\n         * Informs if the results should be shown (in the summary mode or when the page is filled and set to do so).\n         * @returns {boolean} Should result be shown.\n         */\n        Case.prototype.shouldShowResults = function () {\n            return this._page.engageform.isSummaryMode() ||\n                this._page.settings.showResults && this._page.filled && !this._page.engageform.isResultsMode();\n        };\n        /**\n         * Method created mostly to mislead programmer making him think this is how the answer is sent. Too bad!\n         * You've been goofed! The real sending is done in subclasses.\n         * @returns {IPromise<T>}\n         */\n        Case.prototype.send = function () {\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve({});\n            return deferred.promise;\n        };\n        Case.prototype.makeSend = function (data) {\n            var url = Bootstrap.config.backend.domain + Bootstrap.config.engageform.pageResponseUrl;\n            url = url.replace(':pageId', this.page.id);\n            if (Bootstrap.mode !== Engageform.Mode.Default) {\n                url += '?preview';\n            }\n            data.quizQuestionId = this.page.id;\n            data.userIdent = Bootstrap.user.sessionId;\n            return Bootstrap.$http.post(url, data).then(function (res) {\n                if ([200, 304].indexOf(res.status) !== -1) {\n                    if (!data.userIdent) {\n                        Bootstrap.user.sessionId = res.data.userIdent;\n                    }\n                    return res.data;\n                }\n                else {\n                    return Bootstrap.$q.reject(res.data || {});\n                }\n            }).catch(function (res) {\n                return Bootstrap.$q.reject(res.data || {});\n            });\n        };\n        Case.prototype.load = function () {\n            return Bootstrap.localStorage.get('page.' + this.page.id) || {};\n        };\n        Case.prototype.save = function (data) {\n            Bootstrap.localStorage.set('page.' + this.page.id, data);\n        };\n        Case.prototype.validate = function () {\n            // \"abstract\"\n            return true;\n        };\n        // Buzzer need extra send, so we made this abstract\n        Case.prototype.trueBuzzerSend = function (BCS) {\n            // \"abstract\"\n        };\n        return Case;\n    }());\n    Page.Case = Case;\n})(Page || (Page = {}));\n\n/// <reference path=\"isettings.ts\" />\nvar Page;\n(function (Page) {\n    var Settings = (function () {\n        function Settings(data) {\n            this.showResults = false;\n            this.showCorrectAnswer = false;\n            this.showMainMedia = false;\n            this.showDescription = false;\n            this.requiredAnswer = false;\n            this.requiredAnswer = !!data.requiredAnswer;\n            if (data.settings) {\n                this.showResults = !!data.settings.showAnswers;\n                this.showCorrectAnswer = !!data.settings.showCorrectAnswer;\n                this.showMainMedia = !!data.settings.showMainMedia;\n                this.showDescription = !!data.settings.showDescription;\n            }\n        }\n        return Settings;\n    }());\n    Page.Settings = Settings;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var ImageCase = (function (_super) {\n        __extends(ImageCase, _super);\n        function ImageCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Image;\n            this.title = data.text;\n            this.media = Bootstrap.cloudinary.prepareImageUrl(data.imageFile, 300, data.imageData);\n            this.mediaWidth = 300;\n            if (data.imageData && data.imageData.containerRatio) {\n                this.mediaHeight = Math.round(300 * data.imageData.containerRatio);\n            }\n            else {\n                this.mediaHeight = Math.round(data.imageData.containerHeight || 0);\n            }\n        }\n        ImageCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { selectedAnswerId: this.id }).then(function (res) {\n                var data = {};\n                if (res.selectedAnswerId) {\n                    data.selectedCaseId = res.selectedAnswerId;\n                }\n                if (res.correctAnswerId) {\n                    data.correctCaseId = res.correctAnswerId;\n                }\n                for (var caseId in res.stats) {\n                    if (res.stats.hasOwnProperty(caseId)) {\n                        data.results = data.results || {};\n                        if (/.{24}/.test(caseId)) {\n                            data.results[caseId] = res.stats[caseId];\n                        }\n                    }\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return ImageCase;\n    }(Page.Case));\n    Page.ImageCase = ImageCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var InputCase = (function (_super) {\n        __extends(InputCase, _super);\n        function InputCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Input;\n            this.title = data.label;\n            this.expectedValue = data.type;\n            this.value = '';\n        }\n        InputCase.prototype.send = function () {\n            var _this = this;\n            var data = {};\n            data.inputs = [];\n            var sent = this.load();\n            for (var sentId in sent) {\n                if (sent.hasOwnProperty(sentId)) {\n                    data.inputs.push({\n                        _id: sentId,\n                        value: sent[sentId]\n                    });\n                }\n            }\n            return _super.prototype.makeSend.call(this, data).then(function () {\n                return data;\n            }).catch(function (data) {\n                if (data.code === 406) {\n                    data.textKey = 'INCORRECT_INPUT';\n                    data.message = 'Incorrect inputs sent. Try again.';\n                    _this.save({});\n                }\n                return Bootstrap.$q.reject(data);\n            });\n        };\n        InputCase.prototype.validate = function () {\n            this.correct = false;\n            this.incorrect = false;\n            if (this.page.settings.requiredAnswer && !this.value) {\n                this.error = 'Answer is required';\n                this.incorrect = true;\n            }\n            else {\n                this.error = '';\n                this.correct = true;\n            }\n            if (this.correct) {\n                var sent = this.load();\n                sent[this.id] = this.value;\n                this.save(sent);\n                return true;\n            }\n            return false;\n        };\n        return InputCase;\n    }(Page.Case));\n    Page.InputCase = InputCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var IterationCase = (function (_super) {\n        __extends(IterationCase, _super);\n        function IterationCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Iteration;\n            this.selected = false;\n            this.ordinal = data.ordinal;\n            this.symbol = data.symbol;\n        }\n        IterationCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { quizQuestionId: this.page.id, rateItValue: this.ordinal }).then(function (res) {\n                var data = {};\n                if (res.selectedValue) {\n                    data.selectedValue = res.selectedValue;\n                }\n                if (res.avgRateItValue) {\n                    data.result = +res.avgRateItValue;\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return IterationCase;\n    }(Page.Case));\n    Page.IterationCase = IterationCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var TextCase = (function (_super) {\n        __extends(TextCase, _super);\n        function TextCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Text;\n            this.title = data.text;\n        }\n        TextCase.prototype.send = function () {\n            var _this = this;\n            if (!this.page.engageform.settings.allowAnswerChange && this.page.filled) {\n                return Bootstrap.$q.reject({ textKey: 'CHANGING_NOT_ALLOWED', message: 'Changing answer is not allowed' });\n            }\n            return _super.prototype.makeSend.call(this, { selectedAnswerId: this.id }).then(function (res) {\n                var data = {};\n                if (res.selectedAnswerId) {\n                    data.selectedCaseId = res.selectedAnswerId;\n                }\n                if (res.correctAnswerId) {\n                    data.correctCaseId = res.correctAnswerId;\n                }\n                for (var caseId in res.stats) {\n                    if (res.stats.hasOwnProperty(caseId)) {\n                        data.results = data.results || {};\n                        if (/.{24}/.test(caseId)) {\n                            data.results[caseId] = res.stats[caseId];\n                        }\n                    }\n                }\n                _super.prototype.save.call(_this, data);\n                _this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return TextCase;\n    }(Page.Case));\n    Page.TextCase = TextCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var BuzzCase = (function (_super) {\n        __extends(BuzzCase, _super);\n        function BuzzCase(page, data) {\n            _super.call(this, page, data);\n            this.type = Page.CaseType.Buzz;\n            this.page = page;\n        }\n        BuzzCase.prototype.send = function () {\n            // We dont really send buzzes here, just increase buttonClickSum here\n            this.page.clickBuzzer();\n            var deferred = Bootstrap.$q.defer();\n            deferred.resolve({});\n            return deferred.promise;\n        };\n        BuzzCase.prototype.trueBuzzerSend = function (BCS) {\n            return _super.prototype.makeSend.call(this, { quizQuestionId: this.page.id, buttonClickSum: BCS }).then(function (res) {\n                var data = {};\n                // IMO we don't need that since buzzer have fake answerId's\n                // super.save(data);\n                // this.page.selectAnswer(data);\n                return data;\n            });\n        };\n        return BuzzCase;\n    }(Page.Case));\n    Page.BuzzCase = BuzzCase;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var EndPage = (function (_super) {\n        __extends(EndPage, _super);\n        function EndPage(engageform, data, settings) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.EndPage;\n            this.isCoverPage = true;\n            this.socialData = {\n                title: settings.share.title,\n                description: settings.share.description,\n                // Made by Masters\n                imageUrl: Bootstrap.cloudinary.preparePreviewImageUrl(settings.share.imageUrl, 680),\n                link: settings.share.link\n            };\n            if (data.coverPage) {\n                this.button = data.coverPage.buttonText;\n                this.outcome = data.coverPage.outcome;\n                this.social = data.coverPage.showSocialShares;\n                this.exitLink = data.coverPage.exitLink;\n                this.link = data.coverPage.link;\n                if (data.coverPage.scoreRange) {\n                    this.rangeMax = data.coverPage.scoreRange.max;\n                    this.rangeMin = data.coverPage.scoreRange.min;\n                }\n            }\n        }\n        EndPage.prototype.personalizeShares = function () {\n            // console.log('[ Endpage ] Personalize shares');\n            if (this.engageform.typeName === 'outcome' || this.engageform.typeName === 'score') {\n                // Replace $TITLE$ and $RESULT$ tags in the translation and set the title.\n                this.socialData.title = this.engageform.texts.SCORE_AND_OUTCOME_SHARE\n                    .replace(/\\$RESULT\\$/gi, this.outcome || String(this.score || 0))\n                    .replace(/\\$TITLE\\$/gi, this.engageform.title);\n                if (this.media && this.settings.showMainMedia) {\n                    this.socialData.imageUrl = this.media;\n                }\n            }\n        };\n        Object.defineProperty(EndPage.prototype, \"fbLink\", {\n            get: function () {\n                if (Bootstrap.config.backend && Bootstrap.config.backend.domain &&\n                    Bootstrap.config.share && Bootstrap.config.share.facebook &&\n                    this.socialData && this.socialData.title && this.socialData.description &&\n                    this.socialData.imageUrl && this.engageform && this.engageform.id) {\n                    this.personalizeShares();\n                    return Bootstrap.config.backend.domain + Bootstrap.config.share.facebook + '?quizId=' + this.engageform.id +\n                        '&description=' + encodeURIComponent(this.socialData.description) + '&name=' +\n                        encodeURIComponent(this.socialData.title) + '&image=' + this.socialData.imageUrl;\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(EndPage.prototype, \"twLink\", {\n            get: function () {\n                if (this.socialData && this.socialData.title && this.socialData.link) {\n                    this.personalizeShares();\n                    return 'https://twitter.com/intent/tweet?text=' + encodeURIComponent(this.socialData.title)\n                        + ' ' + this.socialData.link + ' via @4screens';\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return EndPage;\n    }(Page.Page));\n    Page.EndPage = EndPage;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var Form = (function (_super) {\n        __extends(Form, _super);\n        function Form(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Form;\n            this.count = 0;\n            if (!data.forms) {\n                return;\n            }\n            this.cases = data.forms.inputs.map(function (input) {\n                return _this.createCase(input);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        Form.prototype.createCase = function (input) {\n            return new Page.InputCase(this, input);\n        };\n        Form.prototype.send = function (vcase) {\n            var deferred = Bootstrap.$q.defer();\n            var validated = true;\n            this.cases.map(function (input) {\n                if (!input.validate()) {\n                    validated = false;\n                }\n            });\n            if (validated) {\n                this.filled = true;\n                this.engageform.sendAnswerCallback(this.engageform.title || this.engageform.id, this.engageform.current ? this.engageform.current.title || this.engageform.current.id : null, this.cases[0]);\n                deferred.resolve(this.cases[0].send());\n            }\n            else {\n                this.filled = false;\n                deferred.resolve({});\n            }\n            return deferred.promise;\n        };\n        Form.prototype.selectAnswer = function (sent) {\n            this.cases.map(function (vcase) {\n                vcase.value = sent[vcase.id] || '';\n                // In results mode, there might be data containing user inputs, so set it as the case value.\n                if (sent.inputs) {\n                    sent.inputs.forEach(function (inputData) {\n                        if (inputData._id === vcase.id) {\n                            vcase.value = inputData.value;\n                        }\n                    });\n                }\n            });\n        };\n        Form.prototype.setResults = function (results) {\n            this.count = results.count;\n        };\n        return Form;\n    }(Page.Page));\n    Page.Form = Form;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var MultiChoice = (function (_super) {\n        __extends(MultiChoice, _super);\n        function MultiChoice(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.MultiChoice;\n            if (!data.answers) {\n                return;\n            }\n            this.cases = data.answers.map(function (answer) {\n                return _this.createCase(answer);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        MultiChoice.prototype.createCase = function (answer) {\n            return new Page.TextCase(this, answer);\n        };\n        MultiChoice.prototype.refreshAnswer = function (sent, question) {\n            question.answers.map(function (answer) {\n                sent.results[answer._id] = answer.percent;\n            });\n            return sent;\n        };\n        MultiChoice.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            this.cases.map(function (vcase) {\n                vcase.selected = false;\n                vcase.correct = false;\n                vcase.incorrect = false;\n                if (vcase.id === sent.selectedCaseId) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                    _this.filled = true;\n                    vcase.selected = true;\n                }\n                if (sent.results) {\n                    vcase.result = sent.results[vcase.id] || 0;\n                }\n                // Mark case as correct or incorrect.\n                if (vcase.id === sent.correctCaseId) {\n                    vcase.correct = true;\n                }\n                else {\n                    vcase.incorrect = true;\n                }\n            });\n        };\n        return MultiChoice;\n    }(Page.Page));\n    Page.MultiChoice = MultiChoice;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var PictureChoice = (function (_super) {\n        __extends(PictureChoice, _super);\n        function PictureChoice(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.PictureChoice;\n            if (!data.answers) {\n                return;\n            }\n            this.cases = data.answers.map(function (answer) {\n                return _this.createCase(answer);\n            });\n            if (this.cases.length) {\n                this.sent().then(function (sent) {\n                    _this.selectAnswer(sent);\n                });\n            }\n        }\n        PictureChoice.prototype.createCase = function (answer) {\n            return new Page.ImageCase(this, answer);\n        };\n        PictureChoice.prototype.refreshAnswer = function (sent, question) {\n            question.answers.map(function (answer) {\n                sent.results[answer._id] = answer.percent;\n            });\n            return sent;\n        };\n        PictureChoice.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            this.cases.map(function (vcase) {\n                vcase.selected = false;\n                vcase.correct = false;\n                vcase.incorrect = false;\n                if (vcase.id === sent.selectedCaseId) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                    _this.filled = true;\n                    vcase.selected = true;\n                }\n                if (sent.results) {\n                    vcase.result = sent.results[vcase.id] || 0;\n                }\n                // Mark case as correct or incorrect.\n                if (vcase.id === sent.correctCaseId) {\n                    vcase.correct = true;\n                }\n                else {\n                    vcase.incorrect = true;\n                }\n            });\n        };\n        return PictureChoice;\n    }(Page.Page));\n    Page.PictureChoice = PictureChoice;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var Rateit = (function (_super) {\n        __extends(Rateit, _super);\n        function Rateit(engageform, data) {\n            var _this = this;\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Rateit;\n            this.selectedValue = 0;\n            this.labelMin = data.rateIt.minLabel;\n            this.labelMax = data.rateIt.maxLabel;\n            this.cases = Array.apply(null, Array(data.rateIt.maxRateItValue)).map(function (value, index) {\n                return _this.createCase(index + 1, data.rateIt.rateType);\n            });\n            this.sent().then(function (sent) {\n                if (sent.selectedValue) {\n                    _this.selectedValue = sent.selectedValue;\n                    _this.selectAnswer(sent);\n                }\n            });\n        }\n        /**\n         * Rateit is unique in a way it shows results. Typically it's the cases matter to show them, but here it's\n         * the page that has results, so the method is required here.\n         * @returns {boolean} Should the result be shown?\n         */\n        Rateit.prototype.shouldShowResults = function () {\n            return this.settings.showResults && this.result > 0;\n        };\n        Rateit.prototype.createCase = function (ordinal, symbol) {\n            return new Page.IterationCase(this, { ordinal: ordinal, symbol: symbol });\n        };\n        Rateit.prototype.selectAnswer = function (sent) {\n            var _this = this;\n            if (sent.selectedValue) {\n                this.filled = true;\n                this.selectedValue = sent.selectedValue;\n            }\n            if (sent.result) {\n                this.result = sent.result;\n            }\n            this.cases.map(function (vcase) {\n                vcase.selected = sent.selectedValue >= vcase.ordinal;\n                if (sent.selectedValue === vcase.ordinal) {\n                    _this.engageform.sendAnswerCallback(_this.engageform.title || _this.engageform.id, _this.engageform.current ? _this.engageform.current.title || _this.engageform.current.id : null, vcase);\n                }\n            });\n        };\n        Rateit.prototype.setResults = function (results) {\n            this.result = results.average;\n            this.selectedValue = results.average;\n        };\n        return Rateit;\n    }(Page.Page));\n    Page.Rateit = Rateit;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var StartPage = (function (_super) {\n        __extends(StartPage, _super);\n        function StartPage(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.StartPage;\n            this.isCoverPage = true;\n            if (data.coverPage && data.coverPage.buttonText !== undefined) {\n                this.button = data.coverPage.buttonText;\n            }\n        }\n        return StartPage;\n    }(Page.Page));\n    Page.StartPage = StartPage;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var Buzzer = (function (_super) {\n        __extends(Buzzer, _super);\n        function Buzzer(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Buzzer;\n            this.buttonClickSum = 0;\n            this._connected = false;\n            // Make only one case with buzzed ammount\n            this.cases.push(new Page.BuzzCase(this, { _id: 0, buttonClickSum: this.buttonClickSum }));\n            // Clear previous timeout\n            if (this._timeout) {\n                Bootstrap.$timeout.cancel(this._timeout);\n            }\n            // Start loop\n            this.buzzLoop(0);\n            // FIXME: Relpace when themes will be ready\n            // this.buzzerTheme = data.buzzerTheme;\n            this.buzzerTheme = Bootstrap.config.fakeBuzzerTheme || {};\n        }\n        Buzzer.prototype.buzzLoop = function (iteration) {\n            var _this = this;\n            if (!this._connected) {\n                this._connected = true;\n            }\n            if (this.buttonClickSum > 0) {\n                this._connected = true;\n                // True send - POST to server, we dont need then here since socket respond with global buttonClickSum\n                this.cases[0].trueBuzzerSend(this.buttonClickSum);\n                this.cases[0].buttonClickSum = this.buttonClickSum;\n                this.engageform.sendAnswerCallback(this.engageform.title || this.engageform.id, this.engageform.current ? this.engageform.current.title || this.engageform.current.id : null, this.cases[0]);\n            }\n            // Not a buzzer - stop cycle\n            if (iteration > 0 && this.engageform && this.engageform.current && this.engageform.current.id !== this.id) {\n                return;\n            }\n            // Loop\n            this._timeout = Bootstrap.$timeout(function () {\n                _this.buzzLoop(iteration + 1);\n            }, 3000);\n            // Clear buttonClickSum\n            this.buttonClickSum = 0;\n        };\n        Buzzer.prototype.clickBuzzer = function () {\n            // Limit buzzes\n            if (this.buttonClickSum < 100) {\n                this.buttonClickSum++;\n            }\n        };\n        return Buzzer;\n    }(Page.Page));\n    Page.Buzzer = Buzzer;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var Poster = (function (_super) {\n        __extends(Poster, _super);\n        function Poster(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.Poster;\n        }\n        return Poster;\n    }(Page.Page));\n    Page.Poster = Poster;\n})(Page || (Page = {}));\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Page;\n(function (Page) {\n    var SummaryPage = (function (_super) {\n        __extends(SummaryPage, _super);\n        function SummaryPage(engageform, data) {\n            _super.call(this, engageform, data);\n            this.type = Page.Type.SummaryPage;\n            if (data.text) {\n                this.title = data.text;\n            }\n            else {\n                if (engageform.type === Engageform.Type.Outcome) {\n                    this.title = 'Outcomes';\n                }\n                else {\n                    this.title = 'Scores';\n                }\n            }\n            this.stats = data.stats;\n        }\n        return SummaryPage;\n    }(Page.Page));\n    Page.SummaryPage = SummaryPage;\n})(Page || (Page = {}));\n})(angular);\n\n",null,null,"/// <reference path=\"../typings/tsd.d.ts\" />\n\nvar app = angular.module('4screens.engageform', [\n  '4screens.util.cloudinary',\n  'LocalStorageModule'\n]);\n",null,null,null,null,null,"/// <reference path=\"api/api.ts\" />\n/// <reference path=\"navigation/navigation.ts\" />\n/// <reference path=\"meta/meta.ts\" />\n/// <reference path=\"page/page.ts\" />\n/// <reference path=\"user/user.ts\" />\n/// <reference path=\"util/event.ts\" />\n/// <reference path=\"engageform/engageform.ts\" />\n\nimport IPromise = angular.IPromise;\n\nclass Bootstrap {\n  static $http: ng.IHttpService;\n  static $q: ng.IQService;\n  static $timeout: ng.ITimeoutService;\n  static cloudinary: any;\n  static localStorage: ng.local.storage.ILocalStorageService;\n  static user: User;\n  static config;\n  static mode = Engageform.Mode.Undefined;\n  Engageform: Engageform.IEngageform;\n\n  private _engageform: Engageform.IEngageform;\n  private _event: Util.Event;\n\n  private static _instances: Engageform.IEngageformInstances = {};\n\n  // Stores the constructors of quizzes mapped by names. Values are assigned in constructor because the modules\n  // dependency is spaghetti-like and constructors will be undefined at this point.\n  static quizzesConstructors;\n\n  // Modes the library can operates in. Values assigned later due to the spaghetti.\n  static modes;\n\n  constructor($http: ng.IHttpService, $q: ng.IQService, $timeout: ng.ITimeoutService, cloudinary: any,\n              localStorage: ng.local.storage.ILocalStorageService, ApiConfig: Config.ApiConfig) {\n    Bootstrap.$http = $http;\n    Bootstrap.$q = $q;\n    Bootstrap.$timeout = $timeout;\n    Bootstrap.cloudinary = cloudinary;\n    Bootstrap.localStorage = localStorage;\n    Bootstrap.config = ApiConfig;\n    Bootstrap.user = new User();\n\n    // Map names to constructors.\n    Bootstrap.quizzesConstructors = {\n      outcome: Engageform.Outcome,\n      poll: Engageform.Poll,\n      score: Engageform.Score,\n      survey: Engageform.Survey,\n      live: Engageform.Live\n    };\n\n    Bootstrap.modes = {\n      preview: Engageform.Mode.Preview,\n      summary: Engageform.Mode.Summary,\n      results: Engageform.Mode.Result,\n      'default': Engageform.Mode.Default,\n      '': Engageform.Mode.Default\n    };\n\n    // FIXME: This is inaccessible inside the library, since it's the consumer app that creates the instance so it\n    // isn't possible to actually trigger any event! I'm leaving it here because I don't care enough to check\n    // if any app tries to subscribe for this event. I'm almost sure it's safe to remove, though.\n    this._event = new Util.Event();\n\n    Bootstrap.cloudinary.setConfig(ApiConfig.cloudinary);\n  }\n\n  get type(): Engageform.Type {\n    if (this._engageform) {\n      return this._engageform.type;\n    }\n\n    return Engageform.Type.Undefined;\n  }\n\n  get Type() {\n    return Engageform.Type;\n  }\n\n  get mode(): Engageform.Mode {\n    return Bootstrap.mode;\n  }\n\n  get Mode() {\n    return Engageform.Mode;\n  }\n\n  get title(): string {\n    if (this._engageform) {\n      return this._engageform.title;\n    }\n  }\n\n  get theme(): Engageform.ITheme {\n    if (this._engageform) {\n      return this._engageform.theme;\n    }\n  }\n\n  get current(): Page.IPage {\n    if (this._engageform) {\n      return this._engageform.current;\n    }\n  }\n\n  get navigation(): Navigation.INavigation {\n    if (this._engageform) {\n      return this._engageform.navigation;\n    }\n  }\n\n  get branding(): Branding.IBranding {\n    if (this._engageform) {\n      return this._engageform.branding;\n    }\n  }\n\n  get message(): string {\n    if (this._engageform) {\n      return this._engageform.message;\n    }\n  }\n\n  get meta(): Meta.IMeta {\n    if (this._engageform) {\n      return this._engageform.meta;\n    }\n  }\n\n  get event(): Util.Event {\n    if (this._event) {\n      return this._event;\n    }\n  }\n\n  init(opts: API.IEmbed): ng.IPromise<Engageform.IEngageform> {\n    // Options are required and need to have a quiz ID.\n    if (!opts || !opts.id) {\n      return Bootstrap.$q.reject({\n        status: 'error',\n        error: {\n          code: 406,\n          message: 'The required id property does not exist.'\n        },\n        data: opts\n      });\n    }\n\n    // Return already initialised instance if already exists.\n    if (Bootstrap._instances[opts.id]) {\n      return Bootstrap._instances[opts.id];\n    }\n\n    // When mode is not provided, set id to default.\n    if (typeof opts.mode === 'undefined') {\n      opts.mode = 'default';\n    }\n\n    // If the requested mode is not supported, reject the initialisation.\n    if (!Bootstrap.modes[opts.mode]) {\n      return Bootstrap.$q.reject({\n        status: 'error',\n        error: {\n          code: 406,\n          message: 'Mode property not supported.'\n        },\n        data: opts\n      });\n    }\n\n    // Set the mode in which the whole library operates.\n    Bootstrap.mode = Bootstrap.modes[opts.mode];\n\n    // Create the promises map that will have to resolve before the quiz is initialised.\n    let initializationPromises: { [index: string]: any; quizData: ng.IPromise<API.IQuiz>; pages?: ng.IPromise<API.IPages> } = {\n      quizData: Bootstrap.getData('quiz', opts.id)\n    };\n\n    // If the quiz is not live get the pages before initialising it.\n    if (!opts.live) {\n      initializationPromises.pages = Bootstrap.getData('pages', opts.id);\n    }\n\n    // Initialize the quiz.\n    return Bootstrap.$q.all(initializationPromises).then((data: API.IQuizAndPagesInit) => {\n      // If the quiz doesn't have a supported constructor, reject the promise with error.\n      if (!Bootstrap.quizzesConstructors[data.quizData.type]) {\n        return Bootstrap.$q.reject({\n          status: 'error',\n          error: {\n            code: 406,\n            message: 'Type property not supported.'\n          },\n          data: data.quizData\n        });\n      }\n\n      // Create the Engageform's instance.\n      this._engageform = new Bootstrap.quizzesConstructors[data.quizData.type](data.quizData,\n        Bootstrap.mode, data.pages, opts.embedSettings, opts.callback ? opts.callback.sendAnswerCallback : () => {\n        });\n\n      return this._engageform;\n    });\n  }\n\n  /**\n   * Fetches the two types of data from the API: quiz data and pages data.\n   * @param type Resource type: quiz or pages.\n   * @param id ID of the quiz.\n   * @returns {IPromise<API.IQuizQuestion[]|API.IQuiz>}\n   */\n  static getData(type: string, id: string): ng.IPromise<API.IQuizQuestion[] | API.IQuiz> {\n    const resourcesPaths = {\n      quiz: 'engageformUrl',\n      pages: 'engageformPagesUrl'\n    };\n\n    // Basic validation.\n    if (!resourcesPaths[type]) {\n      throw new Error(`Resource path for ${type} type of data is unknown.`);\n    }\n\n    // Decide the data URL depending on the type.\n    let url = Bootstrap.config.backend.domain +\n      Bootstrap.config.engageform[type === 'quiz' ? 'engageformUrl' : 'engageformPagesUrl'];\n\n    // Valid ID required.\n    url = url.replace(':engageformId', id);\n\n    // Inform the backend it shouldn't store statistics when a quiz is not in a default mode.\n    if (Bootstrap.mode !== Engageform.Mode.Default) {\n      url += '?preview';\n    }\n\n    // Go, fetch the data.\n    return Bootstrap.$http.get(url).then(function (res) {\n      if ([200, 304].indexOf(res.status) !== -1) {\n        return res.data;\n      }\n\n      Bootstrap.$q.reject(res);\n    });\n  }\n\n  destroyInstances() {\n    Bootstrap._instances = {};\n  }\n}\n\nBootstrap.$inject = ['$http', '$q', '$timeout', 'cloudinary', 'localStorageService', 'ApiConfig'];\napp.service('Engageform', Bootstrap);\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}